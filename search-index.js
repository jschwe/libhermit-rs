var searchIndex = JSON.parse('{\
"bit_field":{"doc":"Provides the abstraction of a bit field, which allows for …","t":[8,18,10,10,10,10,8,10,10,10,10,10],"n":["BitField","BIT_LENGTH","get_bit","get_bits","set_bit","set_bits","BitArray","bit_length","get_bit","get_bits","set_bit","set_bits"],"q":["bit_field","","","","","","","","","","",""],"d":["A generic trait which provides methods for extracting and …","The number of bits in this bit field.","Obtains the bit at the index <code>bit</code>; note that index 0 is …","Obtains the range of bits specified by <code>range</code>; note that …","Sets the bit at the index <code>bit</code> to the value <code>value</code> (where …","Sets the range of bits defined by the range <code>range</code> to the …","","Returns the length, eg number of bits, in this bit array.","Obtains the bit at the index <code>bit</code>; note that index 0 is …","Obtains the range of bits specified by <code>range</code>; note that …","Sets the bit at the index <code>bit</code> to the value <code>value</code> (where …","Sets the range of bits defined by the range <code>range</code> to the …"],"i":[0,1,1,1,1,1,0,2,2,2,2,2],"f":[null,null,[[["usize",15]],["bool",15]],[[["usize",15],["rangebounds",8]]],[[["usize",15],["bool",15]]],[[["usize",15],["rangebounds",8]]],null,[[],["usize",15]],[[["usize",15]],["bool",15]],[[["usize",15],["rangebounds",8]]],[[["usize",15],["bool",15]]],[[["usize",15],["rangebounds",8]]]],"p":[[8,"BitField"],[8,"BitArray"]]},\
"bitflags":{"doc":"A typesafe bitmask flag generator useful for sets of …","t":[14],"n":["bitflags"],"q":["bitflags"],"d":["The macro used to generate the flag structure."],"i":[0],"f":[null],"p":[]},\
"cfg_if":{"doc":"A macro for defining <code>#[cfg]</code> if-else statements.","t":[14],"n":["cfg_if"],"q":["cfg_if"],"d":["The main macro provided by this crate. See crate …"],"i":[0],"f":[null],"p":[]},\
"crossbeam_utils":{"doc":"Miscellaneous tools for concurrent programming.","t":[0,3,8,16,10,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["atomic","AtomicCell","AtomicConsume","Val","load_consume","CachePadded","Backoff","try_from","borrow","borrow_mut","from","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","deref","deref_mut","fmt","fmt","fmt","eq","ne","hash","from","from","clone","default","default","default","new","into_inner","is_lock_free","store","swap","as_ptr","take","load","compare_and_swap","compare_exchange","fetch_add","fetch_sub","fetch_and","fetch_or","fetch_xor","fetch_add","fetch_sub","fetch_and","fetch_or","fetch_xor","fetch_and","fetch_or","fetch_xor","new","into_inner","new","reset","spin","snooze","is_completed"],"q":["crossbeam_utils","crossbeam_utils::atomic","","","","crossbeam_utils","","crossbeam_utils::atomic","","","","","","","","crossbeam_utils","","","","","","","","","","","","","","","","","crossbeam_utils::atomic","crossbeam_utils","","","","","crossbeam_utils::atomic","crossbeam_utils","","crossbeam_utils::atomic","crossbeam_utils","","crossbeam_utils::atomic","","","","","","","","","","","","","","","","","","","","","","","crossbeam_utils","","","","","",""],"d":["Atomic types.","A thread-safe mutable memory location.","Trait which allows reading from primitive atomic types …","Type returned by <code>load_consume</code>.","Loads a value from the atomic using a “consume” …","Pads and aligns a value to the length of a cache line.","Performs exponential backoff in spin loops.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new atomic cell initialized with <code>val</code>.","Consumes the atomic and returns the contained value.","Returns <code>true</code> if operations on values of this type are …","Stores <code>val</code> into the atomic cell.","Stores <code>val</code> into the atomic cell and returns the previous …","Returns a raw pointer to the underlying data in this …","Takes the value of the atomic cell, leaving …","Loads a value from the atomic cell.","If the current value equals <code>current</code>, stores <code>new</code> into the …","If the current value equals <code>current</code>, stores <code>new</code> into the …","Increments the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Applies bitwise “and” to the current value and …","Applies bitwise “or” to the current value and returns …","Applies bitwise “xor” to the current value and …","Increments the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Applies bitwise “and” to the current value and …","Applies bitwise “or” to the current value and returns …","Applies bitwise “xor” to the current value and …","Applies logical “and” to the current value and …","Applies logical “or” to the current value and returns …","Applies logical “xor” to the current value and …","Pads and aligns a value to the length of a cache line.","Returns the inner value.","Creates a new <code>Backoff</code>.","Resets the <code>Backoff</code>.","Backs off in a lock-free loop.","Backs off in a blocking loop.","Returns <code>true</code> if exponential backoff has completed and …"],"i":[0,0,0,1,1,0,0,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,3,3,2,3,4,3,3,3,2,3,3,2,3,4,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,4,4,4,4,4],"f":[null,null,null,null,[[]],null,null,[[],["result",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["cachepadded",3]],["bool",15]],[[["cachepadded",3]],["bool",15]],[[]],[[],["atomiccell",3]],[[]],[[],["cachepadded",3]],[[],["atomiccell",3]],[[],["cachepadded",3]],[[],["backoff",3]],[[],["atomiccell",3]],[[]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[["usize",15]],["usize",15]],[[["usize",15]],["usize",15]],[[["usize",15]],["usize",15]],[[["usize",15]],["usize",15]],[[["usize",15]],["usize",15]],[[["isize",15]],["isize",15]],[[["isize",15]],["isize",15]],[[["isize",15]],["isize",15]],[[["isize",15]],["isize",15]],[[["isize",15]],["isize",15]],[[["bool",15]],["bool",15]],[[["bool",15]],["bool",15]],[[["bool",15]],["bool",15]],[[],["cachepadded",3]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]]],"p":[[8,"AtomicConsume"],[3,"AtomicCell"],[3,"CachePadded"],[3,"Backoff"]]},\
"hermit":{"doc":"","t":[5,5,0,0,0,3,5,5,5,0,17,5,5,5,5,5,5,5,5,5,5,5,0,8,10,3,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,8,8,3,3,5,5,5,3,12,12,12,12,12,12,12,12,3,12,12,12,3,12,12,12,12,3,12,12,12,12,12,12,12,12,12,3,12,12,12,12,12,12,12,3,5,3,12,12,12,12,12,12,12,3,12,12,5,3,12,12,3,12,12,12,5,3,12,12,12,12,3,5,3,12,3,12,12,12,12,12,12,12,3,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,12,3,5,3,12,12,12,12,12,3,12,12,5,0,17,17,17,17,5,5,5,0,17,5,5,0,3,12,12,12,12,12,5,5,5,5,5,5,5,5,5,3,12,0,0,4,13,13,13,13,13,13,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,3,12,12,12,12,12,12,12,12,12,4,13,13,3,12,12,12,3,12,12,12,12,12,4,13,13,13,5,5,5,5,5,5,5,5,5,0,7,6,3,12,12,12,3,8,10,10,8,5,5,5,5,5,5,5,0,17,5,5,5,5,0,17,5,5,0,3,12,12,12,12,12,12,12,12,12,12,12,12,12,3,12,12,12,3,12,3,12,12,12,12,12,12,12,12,3,12,3,12,12,3,12,12,12,12,12,12,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,3,3,4,13,13,3,5,0,3,12,0,5,5,3,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,3,3,8,18,18,18,4,4,4,5,5,5,5,5,5,5,5,5,5,5,0,5,5,5,5,5,5,0,5,5,5,5,5,5,5,3,12,3,12,5,0,0,3,5,5,5,0,17,5,5,5,5,5,5,5,5,5,5,5,0,8,10,3,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,8,8,3,3,5,5,5,3,12,12,12,12,12,12,12,12,3,12,12,12,3,12,12,12,12,3,12,12,12,12,12,12,12,12,12,3,12,12,12,12,12,12,12,3,5,3,12,12,12,12,12,12,12,3,12,12,5,3,12,12,3,12,12,12,5,3,12,12,12,12,3,5,3,12,3,12,12,12,12,12,12,12,3,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,12,3,5,3,12,12,12,12,12,3,12,12,5,0,17,17,17,17,5,5,5,0,17,5,5,0,3,12,12,12,12,12,5,5,5,5,5,5,5,5,5,3,12,0,0,4,13,13,13,13,13,13,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,3,12,12,12,12,12,12,12,12,12,4,13,13,3,12,12,12,3,12,12,12,12,12,4,13,13,13,5,5,5,5,5,5,5,5,5,0,7,6,3,12,12,12,3,8,10,10,8,5,5,5,5,5,5,5,0,17,5,5,5,5,0,17,5,5,0,3,12,12,12,12,12,12,12,12,12,12,12,12,12,3,12,12,12,3,12,3,12,12,12,12,12,12,12,12,3,12,3,12,12,3,12,12,12,12,12,12,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,3,3,4,13,13,3,5,0,3,12,0,5,5,3,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,3,3,8,18,18,18,4,4,4,5,5,5,5,5,5,5,5,5,5,5,0,5,5,5,5,5,5,0,5,5,5,5,5,5,5,3,12,3,12,5,0,3,12,12,12,12,12,5,5,5,5,5,5,5,5,5,3,12,0,7,6,3,12,12,12,3,8,10,10,8,5,5,5,5,5,5,5,0,3,12,12,12,12,12,12,12,12,12,12,12,12,12,3,12,12,12,3,12,3,12,12,12,12,12,12,12,12,3,12,3,12,12,3,12,12,12,12,12,12,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,3,3,4,13,13,3,5,0,7,3,4,13,13,8,10,10,8,10,10,10,10,3,12,12,12,12,12,12,12,12,4,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,18,18,18,18,18,18,18,18,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,18,18,18,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,11,11,11,11,11,11,5,5,5,5,5,5,5,5,5,5,5,17,17,17,17,17,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,3,3,5,5,5,5,5,5,5,5,5,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,3,12,12,3,12,12,3,12,12,17,17,17,17,17,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,14,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["switch_to_task","switch_to_fpu_owner","x86_64","kernel","acpi","AcpiTable","get_madt","poweroff","init","apic","TIMER_INTERRUPT_NUMBER","add_local_apic_id","eoi","init","init_local_apic","set_oneshot_timer","init_x2apic","init_next_processor_variables","boot_application_processors","ipi_tlb_flush","wakeup_core","print_information","fuse","FuseInterface","send_command","Fuse","Opcode","FUSE_LOOKUP","FUSE_FORGET","FUSE_GETATTR","FUSE_SETATTR","FUSE_READLINK","FUSE_SYMLINK","FUSE_MKNOD","FUSE_MKDIR","FUSE_UNLINK","FUSE_RMDIR","FUSE_RENAME","FUSE_LINK","FUSE_OPEN","FUSE_READ","FUSE_WRITE","FUSE_STATFS","FUSE_RELEASE","FUSE_FSYNC","FUSE_SETXATTR","FUSE_GETXATTR","FUSE_LISTXATTR","FUSE_REMOVEXATTR","FUSE_FLUSH","FUSE_INIT","FUSE_OPENDIR","FUSE_READDIR","FUSE_RELEASEDIR","FUSE_FSYNCDIR","FUSE_GETLK","FUSE_SETLK","FUSE_SETLKW","FUSE_ACCESS","FUSE_CREATE","FUSE_INTERRUPT","FUSE_BMAP","FUSE_DESTROY","FUSE_IOCTL","FUSE_POLL","FUSE_NOTIFY_REPLY","FUSE_BATCH_FORGET","FUSE_FALLOCATE","FUSE_SETVOLNAME","FUSE_GETXTIMES","FUSE_EXCHANGE","CUSE_INIT","FuseIn","FuseOut","Cmd","Rsp","create_in_header","create_init","create_lookup","fuse_in_header","len","opcode","unique","nodeid","uid","gid","pid","padding","fuse_out_header","len","error","unique","fuse_init_in","major","minor","max_readahead","flags","fuse_init_out","major","minor","max_readahead","flags","max_background","congestion_threshold","max_write","time_gran","unused","fuse_read_in","fh","offset","size","read_flags","lock_owner","flags","padding","fuse_read_out","create_read","fuse_write_in","fh","offset","size","write_flags","lock_owner","flags","padding","fuse_write_out","size","padding","create_write","fuse_open_in","flags","unused","fuse_open_out","fh","open_flags","padding","create_open","fuse_release_in","fh","flags","release_flags","lock_owner","fuse_release_out","create_release","fuse_lookup_in","name","fuse_entry_out","nodeid","generation","entry_valid","attr_valid","entry_valid_nsec","attr_valid_nsec","attr","fuse_attr","ino","size","blocks","atime","mtime","ctime","atimensec","mtimensec","ctimensec","mode","nlink","uid","gid","rdev","blksize","padding","fuse_unlink_in","name","fuse_unlink_out","create_unlink","fuse_create_in","flags","mode","umask","padding","name","fuse_create_out","entry","open","create_create","gdt","GDT_NULL","GDT_KERNEL_CODE","GDT_KERNEL_DATA","GDT_FIRST_TSS","init","add_current_core","set_current_kernel_stack","idt","IDT_ENTRIES","install","set_gate","irq","ExceptionStackFrame","instruction_pointer","code_segment","cpu_flags","stack_pointer","stack_segment","enable","enable_and_wait","disable","nested_disable","nested_enable","install","irq_install_handler","add_irq_name","get_irq_name","IrqStatistics","counters","pci","error","PciError","General","NoBar","NoCapPtr","BadCapPtr","NoBarForCap","NoVirtioCaps","PCI_MAX_BUS_NUMBER","PCI_MAX_DEVICE_NUMBER","PCI_CONFIG_ADDRESS_PORT","PCI_CONFIG_ADDRESS_ENABLE","PCI_CONFIG_DATA_PORT","PCI_COMMAND_BUSMASTER","PCI_ID_REGISTER","PCI_COMMAND_REGISTER","PCI_CLASS_REGISTER","PCI_HEADER_REGISTER","PCI_BAR0_REGISTER","PCI_CAPABILITY_LIST_REGISTER","PCI_INTERRUPT_REGISTER","PCI_STATUS_CAPABILITIES_LIST","PCI_BASE_ADDRESS_IO_SPACE","PCI_MEM_BASE_ADDRESS_64BIT","PCI_MEM_PREFETCHABLE","PCI_MEM_BASE_ADDRESS_MASK","PCI_IO_BASE_ADDRESS_MASK","PCI_HEADER_TYPE_MASK","PCI_MULTIFUNCTION_MASK","PCI_CAP_ID_VNDR","PciClassCode","TooOld","MassStorage","NetworkController","DisplayController","MultimediaController","MemoryController","BridgeDevice","SimpleCommunicationController","BaseSystemPeripheral","InputDevice","DockingStation","Processor","SerialBusController","WirelessController","IntelligentIoController","EncryptionController","DataAcquisitionSignalProcessing","Other","PciNetworkControllerSubclass","EthernetController","TokenRingController","FDDIController","ATMController","ISDNController","WorldFipController","PICMGController","InfinibandController","FabricController","NetworkController","PciAdapter","bus","device","vendor_id","device_id","class_id","subclass_id","programming_interface_id","base_addresses","irq","PciBar","IO","Memory","IOBar","index","addr","size","MemoryBar","index","addr","size","width","prefetchable","PciDriver","VirtioFs","VirtioNet","RTL8139Net","register_driver","get_network_driver","get_filesystem_driver","read_config","write_config","get_adapter","init","init_drivers","print_information","percore","PERCORE","PerCoreVariables","PerCoreInnerVariables","tss","kernel_stack","irq_statistics","PerCoreVariable","PerCoreVariableMethods","get","set","Is32BitVariable","core_id","get_kernel_stack","set_kernel_stack","core_scheduler","set_core_scheduler","increment_irq_counter","init","pic","PIC1_INTERRUPT_OFFSET","eoi","init","mask","unmask","pit","PIT_INTERRUPT_NUMBER","init","deinit","processor","XSaveLegacyRegion","fpu_control_word","fpu_status_word","fpu_tag_word","fpu_opcode","fpu_instruction_pointer","fpu_instruction_pointer_high_or_cs","fpu_data_pointer","fpu_data_pointer_high_or_ds","mxcsr","mxcsr_mask","st_space","xmm_space","padding","XSaveHeader","xstate_bv","xcomp_bv","reserved","XSaveAVXState","ymmh_space","XSaveLWPState","lwpcb_address","flags","buffer_head_offset","buffer_base","buffer_size","filters","saved_event_record","event_counter","XSaveBndregs","bound_registers","XSaveBndcsr","bndcfgu_register","bndstatus_register","FPUState","legacy_region","header","avx_state","lwp_state","bndregs","bndcsr","run_on_hypervisor","detect_features","configure","detect_frequency","print_information","generate_random_number32","generate_random_number64","get_linear_address_bits","get_physical_address_bits","supports_1gib_pages","supports_avx","supports_tsc_deadline","supports_x2apic","supports_xsave","supports_fsgs","msb","halt","shutdown","get_timer_ticks","get_frequency","readfs","readgs","writefs","writegs","get_timestamp","udelay","scheduler","BootStack","CommonStack","TaskStacks","Boot","Common","TaskTLS","install_timer_handler","serial","SerialPort","port_address","systemtime","get_boot_time","init","BootInfo","has_ipdevice","uhyve_get_ip","sys_uhyve_get_ip","uhyve_get_gateway","sys_uhyve_get_gateway","uhyve_get_mask","sys_uhyve_get_mask","get_base_address","get_image_size","get_limit","get_tls_start","get_tls_filesz","get_tls_memsz","get_mbinfo","get_processor_count","is_uhyve","is_uhyve_with_pci","is_single_kernel","get_cmdsize","get_cmdline","message_output_init","output_message_byte","output_message_buf","boot_processor_init","boot_application_processors","application_processor_init","print_statistics","mm","paging","PageTableEntryFlags","PageTableEntry","PageSize","SIZE","MAP_LEVEL","MAP_EXTRA_FLAG","BasePageSize","LargePageSize","HugePageSize","page_fault_handler","get_page_table_entry","get_physical_address","virtual_to_physical","virt_to_phys","map","unmap","identity_map","get_application_page_size","init","init_page_tables","physicalmem","init","total_memory_size","allocate","allocate_aligned","deallocate","print_information","virtualmem","init","allocate","allocate_aligned","deallocate","print_information","kernel_heap_end","init_page_tables","PhysAddr","0","VirtAddr","0","init","kernel","acpi","AcpiTable","get_madt","poweroff","init","apic","TIMER_INTERRUPT_NUMBER","add_local_apic_id","eoi","init","init_local_apic","set_oneshot_timer","init_x2apic","init_next_processor_variables","boot_application_processors","ipi_tlb_flush","wakeup_core","print_information","fuse","FuseInterface","send_command","Fuse","Opcode","FUSE_LOOKUP","FUSE_FORGET","FUSE_GETATTR","FUSE_SETATTR","FUSE_READLINK","FUSE_SYMLINK","FUSE_MKNOD","FUSE_MKDIR","FUSE_UNLINK","FUSE_RMDIR","FUSE_RENAME","FUSE_LINK","FUSE_OPEN","FUSE_READ","FUSE_WRITE","FUSE_STATFS","FUSE_RELEASE","FUSE_FSYNC","FUSE_SETXATTR","FUSE_GETXATTR","FUSE_LISTXATTR","FUSE_REMOVEXATTR","FUSE_FLUSH","FUSE_INIT","FUSE_OPENDIR","FUSE_READDIR","FUSE_RELEASEDIR","FUSE_FSYNCDIR","FUSE_GETLK","FUSE_SETLK","FUSE_SETLKW","FUSE_ACCESS","FUSE_CREATE","FUSE_INTERRUPT","FUSE_BMAP","FUSE_DESTROY","FUSE_IOCTL","FUSE_POLL","FUSE_NOTIFY_REPLY","FUSE_BATCH_FORGET","FUSE_FALLOCATE","FUSE_SETVOLNAME","FUSE_GETXTIMES","FUSE_EXCHANGE","CUSE_INIT","FuseIn","FuseOut","Cmd","Rsp","create_in_header","create_init","create_lookup","fuse_in_header","len","opcode","unique","nodeid","uid","gid","pid","padding","fuse_out_header","len","error","unique","fuse_init_in","major","minor","max_readahead","flags","fuse_init_out","major","minor","max_readahead","flags","max_background","congestion_threshold","max_write","time_gran","unused","fuse_read_in","fh","offset","size","read_flags","lock_owner","flags","padding","fuse_read_out","create_read","fuse_write_in","fh","offset","size","write_flags","lock_owner","flags","padding","fuse_write_out","size","padding","create_write","fuse_open_in","flags","unused","fuse_open_out","fh","open_flags","padding","create_open","fuse_release_in","fh","flags","release_flags","lock_owner","fuse_release_out","create_release","fuse_lookup_in","name","fuse_entry_out","nodeid","generation","entry_valid","attr_valid","entry_valid_nsec","attr_valid_nsec","attr","fuse_attr","ino","size","blocks","atime","mtime","ctime","atimensec","mtimensec","ctimensec","mode","nlink","uid","gid","rdev","blksize","padding","fuse_unlink_in","name","fuse_unlink_out","create_unlink","fuse_create_in","flags","mode","umask","padding","name","fuse_create_out","entry","open","create_create","gdt","GDT_NULL","GDT_KERNEL_CODE","GDT_KERNEL_DATA","GDT_FIRST_TSS","init","add_current_core","set_current_kernel_stack","idt","IDT_ENTRIES","install","set_gate","irq","ExceptionStackFrame","instruction_pointer","code_segment","cpu_flags","stack_pointer","stack_segment","enable","enable_and_wait","disable","nested_disable","nested_enable","install","irq_install_handler","add_irq_name","get_irq_name","IrqStatistics","counters","pci","error","PciError","General","NoBar","NoCapPtr","BadCapPtr","NoBarForCap","NoVirtioCaps","PCI_MAX_BUS_NUMBER","PCI_MAX_DEVICE_NUMBER","PCI_CONFIG_ADDRESS_PORT","PCI_CONFIG_ADDRESS_ENABLE","PCI_CONFIG_DATA_PORT","PCI_COMMAND_BUSMASTER","PCI_ID_REGISTER","PCI_COMMAND_REGISTER","PCI_CLASS_REGISTER","PCI_HEADER_REGISTER","PCI_BAR0_REGISTER","PCI_CAPABILITY_LIST_REGISTER","PCI_INTERRUPT_REGISTER","PCI_STATUS_CAPABILITIES_LIST","PCI_BASE_ADDRESS_IO_SPACE","PCI_MEM_BASE_ADDRESS_64BIT","PCI_MEM_PREFETCHABLE","PCI_MEM_BASE_ADDRESS_MASK","PCI_IO_BASE_ADDRESS_MASK","PCI_HEADER_TYPE_MASK","PCI_MULTIFUNCTION_MASK","PCI_CAP_ID_VNDR","PciClassCode","TooOld","MassStorage","NetworkController","DisplayController","MultimediaController","MemoryController","BridgeDevice","SimpleCommunicationController","BaseSystemPeripheral","InputDevice","DockingStation","Processor","SerialBusController","WirelessController","IntelligentIoController","EncryptionController","DataAcquisitionSignalProcessing","Other","PciNetworkControllerSubclass","EthernetController","TokenRingController","FDDIController","ATMController","ISDNController","WorldFipController","PICMGController","InfinibandController","FabricController","NetworkController","PciAdapter","bus","device","vendor_id","device_id","class_id","subclass_id","programming_interface_id","base_addresses","irq","PciBar","IO","Memory","IOBar","index","addr","size","MemoryBar","index","addr","size","width","prefetchable","PciDriver","VirtioFs","VirtioNet","RTL8139Net","register_driver","get_network_driver","get_filesystem_driver","read_config","write_config","get_adapter","init","init_drivers","print_information","percore","PERCORE","PerCoreVariables","PerCoreInnerVariables","tss","kernel_stack","irq_statistics","PerCoreVariable","PerCoreVariableMethods","get","set","Is32BitVariable","core_id","get_kernel_stack","set_kernel_stack","core_scheduler","set_core_scheduler","increment_irq_counter","init","pic","PIC1_INTERRUPT_OFFSET","eoi","init","mask","unmask","pit","PIT_INTERRUPT_NUMBER","init","deinit","processor","XSaveLegacyRegion","fpu_control_word","fpu_status_word","fpu_tag_word","fpu_opcode","fpu_instruction_pointer","fpu_instruction_pointer_high_or_cs","fpu_data_pointer","fpu_data_pointer_high_or_ds","mxcsr","mxcsr_mask","st_space","xmm_space","padding","XSaveHeader","xstate_bv","xcomp_bv","reserved","XSaveAVXState","ymmh_space","XSaveLWPState","lwpcb_address","flags","buffer_head_offset","buffer_base","buffer_size","filters","saved_event_record","event_counter","XSaveBndregs","bound_registers","XSaveBndcsr","bndcfgu_register","bndstatus_register","FPUState","legacy_region","header","avx_state","lwp_state","bndregs","bndcsr","run_on_hypervisor","detect_features","configure","detect_frequency","print_information","generate_random_number32","generate_random_number64","get_linear_address_bits","get_physical_address_bits","supports_1gib_pages","supports_avx","supports_tsc_deadline","supports_x2apic","supports_xsave","supports_fsgs","msb","halt","shutdown","get_timer_ticks","get_frequency","readfs","readgs","writefs","writegs","get_timestamp","udelay","scheduler","BootStack","CommonStack","TaskStacks","Boot","Common","TaskTLS","install_timer_handler","serial","SerialPort","port_address","systemtime","get_boot_time","init","BootInfo","has_ipdevice","uhyve_get_ip","sys_uhyve_get_ip","uhyve_get_gateway","sys_uhyve_get_gateway","uhyve_get_mask","sys_uhyve_get_mask","get_base_address","get_image_size","get_limit","get_tls_start","get_tls_filesz","get_tls_memsz","get_mbinfo","get_processor_count","is_uhyve","is_uhyve_with_pci","is_single_kernel","get_cmdsize","get_cmdline","message_output_init","output_message_byte","output_message_buf","boot_processor_init","boot_application_processors","application_processor_init","print_statistics","mm","paging","PageTableEntryFlags","PageTableEntry","PageSize","SIZE","MAP_LEVEL","MAP_EXTRA_FLAG","BasePageSize","LargePageSize","HugePageSize","page_fault_handler","get_page_table_entry","get_physical_address","virtual_to_physical","virt_to_phys","map","unmap","identity_map","get_application_page_size","init","init_page_tables","physicalmem","init","total_memory_size","allocate","allocate_aligned","deallocate","print_information","virtualmem","init","allocate","allocate_aligned","deallocate","print_information","kernel_heap_end","init_page_tables","PhysAddr","0","VirtAddr","0","init","irq","ExceptionStackFrame","instruction_pointer","code_segment","cpu_flags","stack_pointer","stack_segment","enable","enable_and_wait","disable","nested_disable","nested_enable","install","irq_install_handler","add_irq_name","get_irq_name","IrqStatistics","counters","percore","PERCORE","PerCoreVariables","PerCoreInnerVariables","tss","kernel_stack","irq_statistics","PerCoreVariable","PerCoreVariableMethods","get","set","Is32BitVariable","core_id","get_kernel_stack","set_kernel_stack","core_scheduler","set_core_scheduler","increment_irq_counter","init","processor","XSaveLegacyRegion","fpu_control_word","fpu_status_word","fpu_tag_word","fpu_opcode","fpu_instruction_pointer","fpu_instruction_pointer_high_or_cs","fpu_data_pointer","fpu_data_pointer_high_or_ds","mxcsr","mxcsr_mask","st_space","xmm_space","padding","XSaveHeader","xstate_bv","xcomp_bv","reserved","XSaveAVXState","ymmh_space","XSaveLWPState","lwpcb_address","flags","buffer_head_offset","buffer_base","buffer_size","filters","saved_event_record","event_counter","XSaveBndregs","bound_registers","XSaveBndcsr","bndcfgu_register","bndstatus_register","FPUState","legacy_region","header","avx_state","lwp_state","bndregs","bndcsr","run_on_hypervisor","detect_features","configure","detect_frequency","print_information","generate_random_number32","generate_random_number64","get_linear_address_bits","get_physical_address_bits","supports_1gib_pages","supports_avx","supports_tsc_deadline","supports_x2apic","supports_xsave","supports_fsgs","msb","halt","shutdown","get_timer_ticks","get_frequency","readfs","readgs","writefs","writegs","get_timestamp","udelay","scheduler","BootStack","CommonStack","TaskStacks","Boot","Common","TaskTLS","install_timer_handler","fs","FILESYSTEM","Filesystem","FileError","ENOENT","ENOSYS","PosixFileSystem","open","unlink","PosixFile","close","read","write","lseek","FilePerms","write","creat","excl","trunc","append","directio","raw","mode","SeekWhence","Set","Cur","End","header_start_address","table_start_address","table_end_address","new","send_init","lookup","to_u8buf","to_u8buf_mut","new","inc","make_bus_master","get_bar","memory_map_bar","new","new","new","restore","save","restore_common","save_common","new","from_boot_stacks","get_user_stack_size","get_user_stack","get_kernel_stack","get_kernel_stack_size","get_interupt_stack","get_interupt_stack_size","new","address","get_fs","new","write_byte","init","PRESENT","WRITABLE","USER_ACCESSIBLE","WRITE_THROUGH","CACHE_DISABLE","ACCESSED","DIRTY","HUGE_PAGE","GLOBAL","EXECUTE_DISABLE","empty","all","bits","from_bits","from_bits_truncate","from_bits_unchecked","is_empty","is_all","intersects","contains","insert","remove","toggle","set","device","normal","read_only","writable","execute_disable","address","SIZE","MAP_LEVEL","MAP_EXTRA_FLAG","environment","get_base_address","get_cmdline","get_cmdsize","get_image_size","get_tls_filesz","get_tls_memsz","get_tls_start","is_single_kernel","is_uhyve","get_command_line_argv","get_command_line_path","init","get_command_line_cpu_frequency","is_proxy","new","open","close","unlink","mount","fd_op","set_oneshot_timer","wakeup_core","application_processor_init","set_current_kernel_stack","get_boot_time","boot_application_processors","boot_processor_init","get_processor_count","message_output_init","output_message_buf","output_message_byte","KERNEL_STACK_SIZE","DEFAULT_STACK_SIZE","USER_STACK_SIZE","VIRTIO_MAX_QUEUE_SIZE","HW_DESTRUCTIVE_INTERFERENCE_SIZE","sanity_check","sys_destroy_queue","sys_notify","sys_init_queue","sys_add_queue","sys_wait","sys_get_processor_count","sys_get_processor_frequency","sys_secure_rand32","sys_secure_rand64","sys_rand","sys_srand","random_init","sys_recmutex_init","sys_recmutex_destroy","sys_recmutex_lock","sys_recmutex_unlock","sys_sem_init","sys_sem_destroy","sys_sem_post","sys_sem_trywait","sys_sem_timedwait","sys_sem_cancelablewait","SpinlockContainer","SpinlockIrqSaveContainer","sys_spinlock_init","sys_spinlock_destroy","sys_spinlock_lock","sys_spinlock_unlock","sys_spinlock_irqsave_init","sys_spinlock_irqsave_destroy","sys_spinlock_irqsave_lock","sys_spinlock_irqsave_unlock","sys_getpagesize","Tid","sys_getpid","sys_getprio","sys_setprio","sys_exit","sys_thread_exit","sys_abort","__sys_usleep","sys_usleep","sys_msleep","sys_nanosleep","sys_yield","sys_spawn2","sys_spawn","sys_join","sys_block_current_task","sys_wakeup_task","sys_get_priority","itimerval","it_interval","it_value","timespec","tv_sec","tv_nsec","timeval","tv_sec","tv_usec","CLOCK_REALTIME","CLOCK_PROCESS_CPUTIME_ID","CLOCK_THREAD_CPUTIME_ID","CLOCK_MONOTONIC","TIMER_ABSTIME","sys_clock_getres","sys_clock_gettime","sys_clock_nanosleep","sys_clock_settime","sys_gettimeofday","sys_setitimer","sys_malloc","sys_realloc","sys_free","get_application_parameters","sys_get_mac_address","sys_get_mtu","sys_get_tx_buffer","sys_send_tx_buffer","sys_receive_rx_buffer","sys_rx_buffer_consumed","sys_netwait","sys_netwait_and_wakeup","__sys_shutdown","sys_shutdown","sys_unlink","sys_open","sys_close","sys_read","sys_write","sys_lseek","sys_stat","__sys_malloc","__sys_realloc","__sys_free","print","println","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","to_owned","clone_into","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","to_owned","clone_into","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","to_owned","clone_into","try_from","borrow","borrow_mut","from","into","try_into","type_id","to_owned","clone_into","try_from","borrow","borrow_mut","from","into","try_into","type_id","to_owned","clone_into","to_string","try_from","borrow","borrow_mut","from","into","try_into","type_id","to_owned","clone_into","to_string","try_from","borrow","borrow_mut","from","into","try_into","type_id","to_owned","clone_into","try_from","borrow","borrow_mut","from","into","try_into","type_id","to_owned","clone_into","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","to_owned","clone_into","try_from","borrow","borrow_mut","from","into","try_into","type_id","to_owned","clone_into","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","to_owned","clone_into","try_from","borrow","borrow_mut","from","into","try_into","type_id","to_owned","clone_into","try_from","borrow","borrow_mut","from","into","try_into","type_id","to_owned","clone_into","try_from","borrow","borrow_mut","from","into","try_into","type_id","to_owned","clone_into","try_from","borrow","borrow_mut","from","into","try_into","type_id","to_owned","clone_into","try_from","borrow","borrow_mut","from","into","try_into","type_id","to_owned","clone_into","to_string","try_from","borrow","borrow_mut","from","into","try_into","type_id","to_owned","clone_into","to_string","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","to_owned","clone_into","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","to_owned","clone_into","try_from","borrow","borrow_mut","from","into","try_into","type_id","to_owned","clone_into","try_from","borrow","borrow_mut","from","into","try_into","type_id","to_owned","clone_into","cmp","cmp","fmt","fmt","fmt","fmt","fmt","fmt","hash","hash","from","from","from","from","from","from","sub","sub","sub","sub","sub","sub","clone","clone","eq","ne","eq","ne","rem","rem","rem","rem","rem","rem","into","into","into","into","shr","shr","shr","shr","partial_cmp","partial_cmp","bitand","bitand","bitand","bitand","bitand","bitand","add_assign","add_assign","add_assign","add_assign","add_assign","add","add","add","add","add","add","bitor","bitor","bitor","bitor","bitor","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","get","set","get","set","open","unlink","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","sub","eq","eq","eq","ne","cmp","partial_cmp","try_from","sub_assign","not","bitand","bitor","bitxor","bitand_assign","bitor_assign","bitxor_assign","drop","drop","drop","hash","from_iter","extend","fmt","fmt","fmt","fmt","from","from","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","to_i64","to_u64","to_i64","to_u64","from_i64","from_u64","from_i64","from_u64","as_u64","as_usize","zero","is_zero","split","base_page_offset","large_page_offset","huge_page_offset","align_down_to_base_page","align_down_to_large_page","align_down_to_huge_page","align_up_to_base_page","align_up_to_large_page","align_up_to_huge_page","is_base_page_aligned","is_large_page_aligned","is_huge_page_aligned","is_aligned","from_u64","from_usize","as_u64","as_usize","as_mut_ptr","as_ptr","zero","is_zero","base_page_offset","large_page_offset","huge_page_offset","align_down_to_base_page","align_down_to_large_page","align_down_to_huge_page","align_up_to_base_page","align_up_to_large_page","align_up_to_huge_page","is_base_page_aligned","is_large_page_aligned","is_huge_page_aligned","is_aligned"],"q":["hermit","","","hermit::x86_64","hermit::x86_64::kernel","hermit::x86_64::kernel::acpi","","","","hermit::x86_64::kernel","hermit::x86_64::kernel::apic","","","","","","","","","","","","hermit::x86_64::kernel","hermit::x86_64::kernel::fuse","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hermit::x86_64::kernel","hermit::x86_64::kernel::gdt","","","","","","","hermit::x86_64::kernel","hermit::x86_64::kernel::idt","","","hermit::x86_64::kernel","hermit::x86_64::kernel::irq","","","","","","","","","","","","","","","","","hermit::x86_64::kernel","hermit::x86_64::kernel::pci","hermit::x86_64::kernel::pci::error","","","","","","","hermit::x86_64::kernel::pci","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hermit::x86_64::kernel","hermit::x86_64::kernel::percore","","","","","","","","","","","","","","","","","","hermit::x86_64::kernel","hermit::x86_64::kernel::pic","","","","","hermit::x86_64::kernel","hermit::x86_64::kernel::pit","","","hermit::x86_64::kernel","hermit::x86_64::kernel::processor","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hermit::x86_64::kernel","hermit::x86_64::kernel::scheduler","","","","","","","hermit::x86_64::kernel","hermit::x86_64::kernel::serial","","hermit::x86_64::kernel","hermit::x86_64::kernel::systemtime","","hermit::x86_64::kernel","","","","","","","","","","","","","","","","","","","","","","","","","","","","hermit::x86_64","hermit::x86_64::mm","hermit::x86_64::mm::paging","","","","","","","","","","","","","","","","","","","","hermit::x86_64::mm","hermit::x86_64::mm::physicalmem","","","","","","hermit::x86_64::mm","hermit::x86_64::mm::virtualmem","","","","","","hermit::x86_64::mm","","","","","","hermit","hermit::kernel","hermit::kernel::acpi","","","","hermit::kernel","hermit::kernel::apic","","","","","","","","","","","","hermit::kernel","hermit::kernel::fuse","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hermit::kernel","hermit::kernel::gdt","","","","","","","hermit::kernel","hermit::kernel::idt","","","hermit::kernel","hermit::kernel::irq","","","","","","","","","","","","","","","","","hermit::kernel","hermit::kernel::pci","hermit::kernel::pci::error","","","","","","","hermit::kernel::pci","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hermit::kernel","hermit::kernel::percore","","","","","","","","","","","","","","","","","","hermit::kernel","hermit::kernel::pic","","","","","hermit::kernel","hermit::kernel::pit","","","hermit::kernel","hermit::kernel::processor","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hermit::kernel","hermit::kernel::scheduler","","","","","","","hermit::kernel","hermit::kernel::serial","","hermit::kernel","hermit::kernel::systemtime","","hermit::kernel","","","","","","","","","","","","","","","","","","","","","","","","","","","","hermit","hermit::mm","hermit::mm::paging","","","hermit::x86_64::mm::paging","","","hermit::mm::paging","","","","","","","","","","","","","","hermit::mm","hermit::mm::physicalmem","","","","","","hermit::mm","hermit::mm::virtualmem","","","","","","hermit::mm","","","","","","hermit","hermit::irq","","","","","","","","","","","","","","","","","hermit","hermit::percore","","","","","","","","","","","","","","","","","","hermit","hermit::processor","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hermit","hermit::scheduler","","","","","","","hermit","hermit::fs","","","","","","","","","","","","","","","","","","","","","","","","","","hermit::x86_64::kernel::acpi","","","hermit::x86_64::kernel::fuse","","","","","hermit::x86_64::kernel::irq","","hermit::x86_64::kernel::pci","","","hermit::x86_64::kernel::percore","","hermit::x86_64::kernel::processor","","","","","hermit::x86_64::kernel::scheduler","","","","","","","","","","","hermit::x86_64::kernel::serial","","","hermit::x86_64::mm::paging","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hermit","hermit::environment","","","","","","","","","","","","","","hermit::fs","","","","","","hermit","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hermit::x86_64::kernel::acpi","","","","","","","hermit::x86_64::kernel::fuse","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hermit::x86_64::kernel::irq","","","","","","","","","","","","","","","","hermit::x86_64::kernel::pci::error","","","","","","","hermit::x86_64::kernel::pci","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hermit::x86_64::kernel::percore","","","","","","","","","","","","","","hermit::x86_64::kernel::processor","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hermit::x86_64::kernel::scheduler","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hermit::x86_64::kernel::serial","","","","","","","hermit::x86_64::kernel","","","","","","","hermit::x86_64::mm::paging","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hermit::mm","","","","","","","","","","","","","","","","","","","","hermit::fs","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hermit","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hermit::mm","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hermit::x86_64::kernel::percore","","","","hermit::x86_64::kernel::fuse","","","","","","","","","","","","","","","","","","","","","","","","hermit::x86_64::kernel::irq","hermit::x86_64::kernel::pci","","","","","","hermit::x86_64::kernel::pci::error","hermit::x86_64::mm::paging","hermit::fs","","hermit","","","hermit::x86_64::kernel::pci","","hermit::x86_64::mm::paging","hermit::x86_64::kernel::pci","","hermit::x86_64::mm::paging","","","","hermit::fs","hermit::x86_64::mm::paging","","","","","","","","hermit::x86_64::kernel::acpi","hermit::x86_64::kernel::scheduler","","hermit::x86_64::mm::paging","","","","","","","hermit::x86_64::kernel::fuse","","","hermit::x86_64::kernel::irq","hermit::x86_64::kernel::pci","","","","","","hermit::x86_64::kernel::scheduler","","hermit::x86_64::mm::paging","","","","","hermit::fs","hermit","","","hermit::x86_64::kernel::fuse","","","","","","","","","","","","","","hermit::fs","hermit::x86_64::kernel::pci","","","","","","","","hermit::mm","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","A convenience structure to work with an ACPI table. Maps …","","","","","","","","","","","","Initialize the required entry.asm variables for the next …","Boot all Application Processors This algorithm is derived …","","Send an inter-processor interrupt to wake up a CPU Core …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Marker trait, which signals that a struct is a valid Fuse …","Marker trait, which signals that a struct is a valid Fuse …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Declare an IDT of 256 entries. Although not all entries …","","Set an entry in the IDT.","","Represents the exception stack frame pushed by the CPU on …","This value points to the instruction that should be …","The code segment selector, padded with zeros.","The flags register before the interrupt handler was …","The stack pointer at the time of the interrupt.","The stack segment descriptor at the time of the interrupt …","Enable Interrupts","Enable Interrupts and wait for the next interrupt (HLT …","Disable Interrupts","Disable IRQs (nested)","Enable IRQs (nested)","","","","","","","","A module containg PCI specifc errors","An enum of PciErrors typically carrying the device’s id …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Classes of PCI nodes.","","","","","","","","","","","","","","","","","","","Network Controller Sub Classes","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the value (indicated by bus, device and register) …","","","","","","","","","","Task State Segment (TSS) allocated for this CPU Core.","start address of the kernel stack","Interface to the interrupt counters","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","XSave Area for AMD Lightweight Profiling. Refer to AMD …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Search the most significant bit","The halt function stops the processor until the next …","Shutdown the system","","","","","","","","Delay execution by the given number of microseconds using …","Architecture dependent interface to initialize a task","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether HermitCore is running under the “uhyve” …","","Whether HermitCore is running alone (true) or …","","","Earliest initialization function called by the Boot …","","","Real Boot Processor initialization as soon as we have put …","Boots all available Application Processors on bare-metal …","Application Processor initialization","","","","Possible flags for an entry in either table (PML4, PDPT, …","An entry in either table (PML4, PDPT, PD, PT)","A generic interface to support all possible page sizes.","The page size in bytes.","The page table level at which a page of this size is …","Any extra flag that needs to be set to map a page of this …","A 4 KiB page mapped in the PT.","A 2 MiB page mapped in the PD.","A 1 GiB page mapped in the PDPT.","","","","Translate a virtual memory address to a physical one.","","","","","","","","","","","","","This function must only be called from mm::deallocate! …","","","","","","","","End of the virtual memory address space reserved for …","","A wrapper for a physical address.","","A wrapper for a virtual address.","","","","","A convenience structure to work with an ACPI table. Maps …","","","","","","","","","","","","Initialize the required entry.asm variables for the next …","Boot all Application Processors This algorithm is derived …","","Send an inter-processor interrupt to wake up a CPU Core …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Marker trait, which signals that a struct is a valid Fuse …","Marker trait, which signals that a struct is a valid Fuse …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Declare an IDT of 256 entries. Although not all entries …","","Set an entry in the IDT.","","Represents the exception stack frame pushed by the CPU on …","This value points to the instruction that should be …","The code segment selector, padded with zeros.","The flags register before the interrupt handler was …","The stack pointer at the time of the interrupt.","The stack segment descriptor at the time of the interrupt …","Enable Interrupts","Enable Interrupts and wait for the next interrupt (HLT …","Disable Interrupts","Disable IRQs (nested)","Enable IRQs (nested)","","","","","","","","A module containg PCI specifc errors","An enum of PciErrors typically carrying the device’s id …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Classes of PCI nodes.","","","","","","","","","","","","","","","","","","","Network Controller Sub Classes","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the value (indicated by bus, device and register) …","","","","","","","","","","Task State Segment (TSS) allocated for this CPU Core.","start address of the kernel stack","Interface to the interrupt counters","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","XSave Area for AMD Lightweight Profiling. Refer to AMD …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Search the most significant bit","The halt function stops the processor until the next …","Shutdown the system","","","","","","","","Delay execution by the given number of microseconds using …","Architecture dependent interface to initialize a task","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether HermitCore is running under the “uhyve” …","","Whether HermitCore is running alone (true) or …","","","Earliest initialization function called by the Boot …","","","Real Boot Processor initialization as soon as we have put …","Boots all available Application Processors on bare-metal …","Application Processor initialization","","","","Possible flags for an entry in either table (PML4, PDPT, …","An entry in either table (PML4, PDPT, PD, PT)","A generic interface to support all possible page sizes.","The page size in bytes.","The page table level at which a page of this size is …","Any extra flag that needs to be set to map a page of this …","A 4 KiB page mapped in the PT.","A 2 MiB page mapped in the PD.","A 1 GiB page mapped in the PDPT.","","","","Translate a virtual memory address to a physical one.","","","","","","","","","","","","","This function must only be called from mm::deallocate! …","","","","","","","","End of the virtual memory address space reserved for …","","A wrapper for a physical address.","","A wrapper for a virtual address.","","","","Represents the exception stack frame pushed by the CPU on …","This value points to the instruction that should be …","The code segment selector, padded with zeros.","The flags register before the interrupt handler was …","The stack pointer at the time of the interrupt.","The stack segment descriptor at the time of the interrupt …","Enable Interrupts","Enable Interrupts and wait for the next interrupt (HLT …","Disable Interrupts","Disable IRQs (nested)","Enable IRQs (nested)","","","","","","","","","","","Task State Segment (TSS) allocated for this CPU Core.","start address of the kernel stack","Interface to the interrupt counters","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","XSave Area for AMD Lightweight Profiling. Refer to AMD …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Search the most significant bit","The halt function stops the processor until the next …","Shutdown the system","","","","","","","","Delay execution by the given number of microseconds using …","Architecture dependent interface to initialize a task","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the bar at bar-register baridx.","Memory maps pci bar with specified index to identical …","","","","","","","","","","","","","","","","","","","","","","Set if this entry is valid and points to a page or table.","Set if memory referenced by this entry shall be writable.","Set if memory referenced by this entry shall be …","Set if Write-Through caching shall be enabled for memory …","Set if caching shall be disabled for memory referenced by …","Set if software has accessed this entry (for memory …","Only for page entries: Set if software has written to the …","Only for page entries in PDPT or PDT: Set if this entry …","Only for page entries: Set if this address translation is …","Set if code execution shall be disabled for memory …","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the …","","","","","","Return the stored physical address.","The page size in bytes.","The page table level at which a page of this size is …","Any extra flag that needs to be set to map a page of this …","Determining and providing information about the …","","","","","","","","Whether HermitCore is running alone (true) or …","Whether HermitCore is running under the “uhyve” …","Returns the cmdline argument passed in after “–”","Returns the first cmdline argument, if not otherwise …","","CPU Frequency in MHz if given through the -freq …","Whether HermitCore shall communicate with the “proxy” …","","Tries to open file at given path …","","Unlinks a file given by path","Create new backing-fs at mountpoint mntpath","Run closure on file referenced by file descriptor.","","Send an inter-processor interrupt to wake up a CPU Core …","Application Processor initialization","","","Boots all available Application Processors on bare-metal …","Real Boot Processor initialization as soon as we have put …","","Earliest initialization function called by the Boot …","","","","","","","See …","Sanity check for config parameters","","","","","","Returns the number of processors currently online. ","Returns the processor frequency in MHz. ","Create a cryptographicly secure 32bit random number with …","Create a cryptographicly secure 64bit random number with …","The function computes a sequence of pseudo-random integers…","The function sets its argument as the seed for a new …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Set the current task state to <code>blocked</code>","Wake up the task with the identifier <code>id</code>","Determine the priority of the current thread","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Interface to allocate memory from system heap","Shrink or grow a block of memory to the given <code>new_size</code>. …","Interface to deallocate a memory region from the system …","Print formatted text to our console.","Print formatted text to our console, followed by a …eturns the set difference of the two sets of flags.","","","","","","","","Disables all flags enabled in the set.","Returns the complement of this set of flags.","Returns the intersection between the two sets of flags.","Returns the union of the two sets of flags.","Returns the left flags, but with all the right flags …","Disables all flags disabled in the set.","Adds the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert to <code>u64</code>","Convert to <code>usize</code>","Physical Address zero.","Is zero?","Split <code>PAddr</code> into lower and higher 32-bits.","Offset within the 4 KiB page.","Offset within the 2 MiB page.","Offset within the 1 GiB page.","Return address of nearest 4 KiB page (lower or equal than …","Return address of nearest 2 MiB page (lower or equal than …","Return address of nearest 1 GiB page (lower or equal than …","Return address of nearest 4 KiB page (higher or equal …","Return address of nearest 2 MiB page (higher or equal …","Return address of nearest 1 GiB page (higher or equal …","Is this address aligned to a 4 KiB page?","Is this address aligned to a 2 MiB page?","Is this address aligned to a 1 GiB page?","Is this address aligned to <code>align</code>?","Convert from <code>u64</code>","Convert from <code>usize</code>","Convert to <code>u64</code>","Convert to <code>usize</code>","Convert to mutable pointer.","Convert to pointer.","Physical Address zero.","Is zero?","Offset within the 4 KiB page.","Offset within the 2 MiB page.","Offset within the 1 GiB page.","Return address of nearest 4 KiB page (lower or equal than …","Return address of nearest 2 MiB page (lower or equal than …","Return address of nearest 1 GiB page (lower or equal than …","Return address of nearest 4 KiB page (higher or equal …","Return address of nearest 2 MiB page (higher or equal …","Return address of nearest 1 GiB page (higher or equal …","Is this address aligned to a 4 KiB page?","Is this address aligned to a 2 MiB page?","Is this address aligned to a 1 GiB page?","Is this address aligned to <code>align</code>?"],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,0,4,4,4,0,5,5,5,5,0,6,6,6,6,6,6,6,6,6,0,7,7,7,7,7,7,7,0,0,0,8,8,8,8,8,8,8,0,9,9,0,0,10,10,0,11,11,11,0,0,12,12,12,12,0,0,0,13,0,14,14,14,14,14,14,14,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,16,0,0,0,17,17,17,17,17,0,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,19,19,19,0,0,0,0,0,0,0,0,0,0,20,0,0,0,21,21,21,21,21,21,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,0,23,23,23,23,23,23,23,23,23,23,0,24,24,24,24,24,24,24,24,24,0,25,25,0,26,26,26,0,27,27,27,27,27,0,28,28,28,0,0,0,0,0,0,0,0,0,0,0,0,0,29,29,29,0,0,30,30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,31,31,31,31,31,31,31,31,31,31,31,31,0,32,32,32,0,33,0,34,34,34,34,34,34,34,34,0,35,0,36,36,0,37,37,37,37,37,37,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38,38,0,0,0,0,39,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,40,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,41,0,42,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,0,4,4,4,0,5,5,5,5,0,6,6,6,6,6,6,6,6,6,0,7,7,7,7,7,7,7,0,0,0,8,8,8,8,8,8,8,0,9,9,0,0,10,10,0,11,11,11,0,0,12,12,12,12,0,0,0,13,0,14,14,14,14,14,14,14,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,16,0,0,0,17,17,17,17,17,0,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,19,19,19,0,0,0,0,0,0,0,0,0,0,20,0,0,0,21,21,21,21,21,21,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,0,23,23,23,23,23,23,23,23,23,23,0,24,24,24,24,24,24,24,24,24,0,25,25,0,26,26,26,0,27,27,27,27,27,0,28,28,28,0,0,0,0,0,0,0,0,0,0,0,0,0,29,29,29,0,0,30,30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,31,31,31,31,31,31,31,31,31,31,31,31,0,32,32,32,0,33,0,34,34,34,34,34,34,34,34,0,35,0,36,36,0,37,37,37,37,37,37,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38,38,0,0,0,0,39,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,40,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,41,0,42,0,0,0,19,19,19,19,19,0,0,0,0,0,0,0,0,0,0,20,0,0,0,0,29,29,29,0,0,30,30,0,0,0,0,0,0,0,0,0,0,31,31,31,31,31,31,31,31,31,31,31,31,31,0,32,32,32,0,33,0,34,34,34,34,34,34,34,34,0,35,0,36,36,0,37,37,37,37,37,37,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38,38,0,0,0,0,0,0,43,43,0,44,44,0,45,45,45,45,0,46,46,46,46,46,46,46,46,0,47,47,47,48,48,48,49,49,49,50,51,20,20,24,24,24,29,52,37,37,37,37,37,38,38,38,38,38,38,38,38,53,53,53,39,39,39,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,55,40,40,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,56,56,56,56,56,56,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,57,57,0,58,58,0,59,59,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,48,48,48,48,48,48,49,49,49,49,49,49,49,2,2,2,2,2,2,2,2,2,50,50,50,50,50,50,50,51,51,51,51,51,51,51,3,3,3,3,3,3,3,4,4,4,4,4,4,4,5,5,5,5,5,5,5,6,6,6,6,6,6,6,7,7,7,7,7,7,7,60,60,60,60,60,60,60,8,8,8,8,8,8,8,9,9,9,9,9,9,9,10,10,10,10,10,10,10,11,11,11,11,11,11,11,12,12,12,12,12,12,12,61,61,61,61,61,61,61,13,13,13,13,13,13,13,14,14,14,14,14,14,14,15,15,15,15,15,15,15,16,16,16,16,16,16,16,62,62,62,62,62,62,62,17,17,17,17,17,17,17,18,18,18,18,18,18,18,19,19,19,19,19,19,19,20,20,20,20,20,20,20,20,20,21,21,21,21,21,21,21,22,22,22,22,22,22,22,22,22,23,23,23,23,23,23,23,23,23,24,24,24,24,24,24,24,24,24,24,25,25,25,25,25,25,25,25,25,25,26,26,26,26,26,26,26,26,26,27,27,27,27,27,27,27,27,27,28,28,28,28,28,28,28,29,29,29,29,29,29,29,52,52,52,52,52,52,52,31,31,31,31,31,31,31,32,32,32,32,32,32,32,33,33,33,33,33,33,33,34,34,34,34,34,34,34,35,35,35,35,35,35,35,36,36,36,36,36,36,36,37,37,37,37,37,37,37,63,63,63,63,63,63,63,64,64,64,64,64,64,64,38,38,38,38,38,38,38,38,38,53,53,53,53,53,53,53,53,53,39,39,39,39,39,39,39,65,65,65,65,65,65,65,54,54,54,54,54,54,54,54,54,55,55,55,55,55,55,55,55,55,66,66,66,66,66,66,66,66,66,67,67,67,67,67,67,67,67,67,68,68,68,68,68,68,68,68,68,41,41,41,41,41,41,41,41,41,41,42,42,42,42,42,42,42,42,42,42,56,56,56,56,56,56,56,43,43,43,43,43,43,43,46,46,46,46,46,46,46,46,46,47,47,47,47,47,47,47,69,69,69,69,69,69,69,70,70,70,70,70,70,70,57,57,57,57,57,57,57,57,57,58,58,58,58,58,58,58,58,58,59,59,59,59,59,59,59,59,59,42,41,42,41,42,41,42,41,42,41,42,42,41,41,41,42,42,41,42,41,41,42,42,41,42,42,41,41,42,42,42,41,41,41,41,42,41,42,42,42,41,42,42,41,42,41,41,42,42,42,42,41,42,42,41,42,41,41,42,41,42,42,41,42,42,41,42,41,41,42,42,41,42,41,52,52,52,52,49,49,2,50,51,3,4,5,6,7,60,8,9,10,11,12,61,13,14,15,16,62,18,17,19,22,23,24,25,26,27,21,54,43,46,57,58,59,25,24,54,22,23,54,54,54,54,47,54,54,54,54,54,54,54,54,48,38,53,54,54,54,54,54,54,54,13,16,2,20,22,23,24,25,26,27,38,53,54,55,66,67,68,46,57,58,59,4,6,7,60,8,9,10,11,12,61,14,15,62,18,46,22,22,23,23,22,22,23,23,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42],"f":[null,null,null,null,null,null,[[],[["option",4],["acpitable",3]]],[[]],[[]],null,null,[[["u8",15]]],[[]],[[]],[[]],[[["option",4],["u64",15]]],[[]],[[["u32",15]]],[[]],[[]],[[["u32",15]]],[[]],null,null,[[["option",4],["cmd",3],["rsp",3]],[["option",4],["rsp",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["opcode",4]],["fuse_in_header",3]],[[]],[[["str",15]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["u32",15],["u64",15]]],null,null,null,null,null,null,null,null,null,null,null,[[["u64",15]]],null,null,null,null,null,null,null,[[["u32",15],["u64",15]]],null,null,null,null,null,null,[[["u64",15]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["str",15]]],null,null,null,null,null,null,null,null,null,[[["u32",15],["str",15]]],null,null,null,null,null,[[]],[[]],[[]],null,null,[[]],[[["usize",15],["u8",15]]],null,null,null,null,null,null,null,[[]],[[]],[[]],[[],["bool",15]],[[["bool",15]]],[[]],[[["u32",15],["usize",15]]],[[["u32",15],["str",15]]],[[["u32",15]],[["string",3],["option",4]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["pcidriver",4]]],[[],[["option",4],["spinlockirqsave",3]]],[[],[["spinlockirqsave",3],["option",4]]],[[["u32",15],["u8",15]],["u32",15]],[[["u32",15],["u8",15]]],[[["u16",15]],[["pciadapter",3],["option",4]]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,[[]],[[]],null,[[],["u32",15]],[[],["u64",15]],[[["u64",15]]],[[],["percorescheduler",3]],[[]],[[["usize",15]]],[[]],null,null,[[["u8",15]]],[[]],[[["u8",15]]],[[["u8",15]]],null,null,[[["u64",15]]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["bool",15]],[[]],[[]],[[]],[[]],[[],[["u32",15],["option",4]]],[[],[["option",4],["u64",15]]],[[],["u8",15]],[[],["u8",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["u64",15]],[["option",4],["u64",15]]],[[]],[[]],[[],["u64",15]],[[],["u16",15]],[[],["usize",15]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[],["u64",15]],[[["u64",15]]],null,null,null,null,null,null,null,[[]],null,null,null,null,[[],["u64",15]],[[]],null,[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["virtaddr",3]],[[],["usize",15]],[[],["usize",15]],[[],["virtaddr",3]],[[],["usize",15]],[[],["usize",15]],[[],["virtaddr",3]],[[],["u32",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["usize",15]],[[],["virtaddr",3]],[[]],[[["u8",15]]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,[[["exceptionstackframe",3],["u64",15]]],[[["virtaddr",3]],[["pagetableentry",3],["option",4]]],[[["virtaddr",3]],["physaddr",3]],[[["virtaddr",3]],["physaddr",3]],[[["virtaddr",3]],["physaddr",3]],[[["virtaddr",3],["physaddr",3],["usize",15],["pagetableentryflags",3]]],[[["virtaddr",3],["usize",15]]],[[["physaddr",3]]],[[],["usize",15]],[[]],[[]],null,[[]],[[],["usize",15]],[[["usize",15]],[["physaddr",3],["result",4]]],[[["usize",15]],[["physaddr",3],["result",4]]],[[["usize",15],["physaddr",3]]],[[]],null,[[]],[[["usize",15]],[["virtaddr",3],["result",4]]],[[["usize",15]],[["virtaddr",3],["result",4]]],[[["virtaddr",3],["usize",15]]],[[]],[[],["virtaddr",3]],[[]],null,null,null,null,[[]],null,null,null,[[],[["option",4],["acpitable",3]]],[[]],[[]],null,null,[[["u8",15]]],[[]],[[]],[[]],[[["option",4],["u64",15]]],[[]],[[["u32",15]]],[[]],[[]],[[["u32",15]]],[[]],null,null,[[["option",4],["cmd",3],["rsp",3]],[["option",4],["rsp",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["opcode",4]],["fuse_in_header",3]],[[]],[[["str",15]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["u32",15],["u64",15]]],null,null,null,null,null,null,null,null,null,null,null,[[["u64",15]]],null,null,null,null,null,null,null,[[["u32",15],["u64",15]]],null,null,null,null,null,null,[[["u64",15]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["str",15]]],null,null,null,null,null,null,null,null,null,[[["u32",15],["str",15]]],null,null,null,null,null,[[]],[[]],[[]],null,null,[[]],[[["usize",15],["u8",15]]],null,null,null,null,null,null,null,[[]],[[]],[[]],[[],["bool",15]],[[["bool",15]]],[[]],[[["u32",15],["usize",15]]],[[["u32",15],["str",15]]],[[["u32",15]],[["string",3],["option",4]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["pcidriver",4]]],[[],[["option",4],["spinlockirqsave",3]]],[[],[["spinlockirqsave",3],["option",4]]],[[["u32",15],["u8",15]],["u32",15]],[[["u32",15],["u8",15]]],[[["u16",15]],[["pciadapter",3],["option",4]]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,[[]],[[]],null,[[],["u32",15]],[[],["u64",15]],[[["u64",15]]],[[],["percorescheduler",3]],[[]],[[["usize",15]]],[[]],null,null,[[["u8",15]]],[[]],[[["u8",15]]],[[["u8",15]]],null,null,[[["u64",15]]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["bool",15]],[[]],[[]],[[]],[[]],[[],[["u32",15],["option",4]]],[[],[["option",4],["u64",15]]],[[],["u8",15]],[[],["u8",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["u64",15]],[["option",4],["u64",15]]],[[]],[[]],[[],["u64",15]],[[],["u16",15]],[[],["usize",15]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[],["u64",15]],[[["u64",15]]],null,null,null,null,null,null,null,[[]],null,null,null,null,[[],["u64",15]],[[]],null,[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["virtaddr",3]],[[],["usize",15]],[[],["usize",15]],[[],["virtaddr",3]],[[],["usize",15]],[[],["usize",15]],[[],["virtaddr",3]],[[],["u32",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["usize",15]],[[],["virtaddr",3]],[[]],[[["u8",15]]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,[[["exceptionstackframe",3],["u64",15]]],[[["virtaddr",3]],[["pagetableentry",3],["option",4]]],[[["virtaddr",3]],["physaddr",3]],[[["virtaddr",3]],["physaddr",3]],[[["virtaddr",3]],["physaddr",3]],[[["virtaddr",3],["physaddr",3],["usize",15],["pagetableentryflags",3]]],[[["virtaddr",3],["usize",15]]],[[["physaddr",3]]],[[],["usize",15]],[[]],[[]],null,[[]],[[],["usize",15]],[[["usize",15]],[["physaddr",3],["result",4]]],[[["usize",15]],[["physaddr",3],["result",4]]],[[["usize",15],["physaddr",3]]],[[]],null,[[]],[[["usize",15]],[["virtaddr",3],["result",4]]],[[["usize",15]],[["virtaddr",3],["result",4]]],[[["virtaddr",3],["usize",15]]],[[]],[[],["virtaddr",3]],[[]],null,null,null,null,[[]],null,null,null,null,null,null,null,[[]],[[]],[[]],[[],["bool",15]],[[["bool",15]]],[[]],[[["u32",15],["usize",15]]],[[["u32",15],["str",15]]],[[["u32",15]],[["string",3],["option",4]]],null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],null,[[],["u32",15]],[[],["u64",15]],[[["u64",15]]],[[],["percorescheduler",3]],[[]],[[["usize",15]]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["bool",15]],[[]],[[]],[[]],[[]],[[],[["u32",15],["option",4]]],[[],[["option",4],["u64",15]]],[[],["u8",15]],[[],["u8",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["u64",15]],[["option",4],["u64",15]]],[[]],[[]],[[],["u64",15]],[[],["u16",15]],[[],["usize",15]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[],["u64",15]],[[["u64",15]]],null,null,null,null,null,null,null,[[]],null,null,null,null,null,null,null,[[["fileperms",3],["str",15]],[["box",3],["fileerror",4],["result",4]]],[[["str",15]],[["result",4],["fileerror",4]]],null,[[],[["result",4],["fileerror",4]]],[[["u32",15]],[["fileerror",4],["vec",3],["result",4]]],[[],[["fileerror",4],["result",4],["u64",15]]],[[["isize",15],["seekwhence",4]],[["usize",15],["result",4],["fileerror",4]]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[["str",15]],[["option",4],["u64",15]]],[[],["vec",3]],[[],["vec",3]],[[]],[[["usize",15]]],[[]],[[["u8",15]],[["pcibar",4],["option",4]]],[[["bool",15],["u8",15]],["option",4]],[[["u32",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]],["taskstacks",4]],[[],["taskstacks",4]],[[],["usize",15]],[[],["virtaddr",3]],[[],["virtaddr",3]],[[],["usize",15]],[[],["virtaddr",3]],[[],["usize",15]],[[["usize",15]]],[[],["virtaddr",3]],[[],["virtaddr",3]],[[["u16",15]]],[[["u8",15]]],[[["u32",15]]],null,null,null,null,null,null,null,null,null,null,[[],["pagetableentryflags",3]],[[],["pagetableentryflags",3]],[[],["u64",15]],[[["u64",15]],[["option",4],["pagetableentryflags",3]]],[[["u64",15]],["pagetableentryflags",3]],[[["u64",15]],["pagetableentryflags",3]],[[],["bool",15]],[[],["bool",15]],[[["pagetableentryflags",3]],["bool",15]],[[["pagetableentryflags",3]],["bool",15]],[[["pagetableentryflags",3]]],[[["pagetableentryflags",3]]],[[["pagetableentryflags",3]]],[[["pagetableentryflags",3],["bool",15]]],[[]],[[]],[[]],[[]],[[]],[[],["physaddr",3]],null,null,null,null,[[],["virtaddr",3]],[[],["virtaddr",3]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["virtaddr",3]],[[],["bool",15]],[[],["bool",15]],[[],["option",4]],[[],[["str",15],["option",4]]],[[]],[[],["u16",15]],[[],["bool",15]],[[]],[[["fileperms",3],["str",15]],[["fileerror",4],["result",4],["u64",15]]],[[["u64",15]]],[[["str",15]],[["result",4],["fileerror",4]]],[[["posixfilesystem",8],["box",3],["str",15]],["result",4]],[[["u64",15]]],[[["option",4],["u64",15]]],[[["u32",15]]],[[]],[[]],[[],["u64",15]],[[]],[[]],[[],["u32",15]],[[]],[[]],[[["u8",15]]],null,null,null,null,null,[[]],[[["usize",15]],["i32",15]],[[["usize",15],["i32",15]],["i32",15]],[[["usize",15]],["i32",15]],[[["usize",15],["i64",15]],["i32",15]],[[["usize",15]],["i32",15]],[[],["usize",15]],[[],["u16",15]],[[],[["u32",15],["option",4]]],[[],[["option",4],["u64",15]]],[[],["u32",15]],[[["u32",15]]],[[]],[[],["i32",15]],[[],["i32",15]],[[],["i32",15]],[[],["i32",15]],[[["u32",15]],["i32",15]],[[],["i32",15]],[[],["i32",15]],[[],["i32",15]],[[["u32",15]],["i32",15]],[[["u32",15]],["i32",15]],null,null,[[],["i32",15]],[[],["i32",15]],[[],["i32",15]],[[],["i32",15]],[[],["i32",15]],[[],["i32",15]],[[],["i32",15]],[[],["i32",15]],[[],["i32",15]],null,[[],["tid",6]],[[],["i32",15]],[[["i32",15]],["i32",15]],[[["i32",15]]],[[["i32",15]]],[[]],[[["u64",15]]],[[["u64",15]]],[[["u32",15]]],[[],["i32",15]],[[]],[[["usize",15],["isize",15],["u8",15]],["tid",6]],[[["usize",15],["isize",15],["u8",15]],["i32",15]],[[["tid",6]],["i32",15]],[[]],[[["tid",6]]],[[],["u8",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["u64",15]],["i32",15]],[[["u64",15]],["i32",15]],[[["i32",15],["u64",15]],["i32",15]],[[["u64",15]],["i32",15]],[[["usize",15]],["i32",15]],[[["i32",15]],["i32",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[],["result",4]],[[],[["result",4],["u16",15]]],[[["usize",15]],["result",4]],[[["usize",15]],["result",4]],[[],["result",4]],[[["usize",15]],["result",4]],[[["usize",15],["option",4],["u64",15]]],[[["option",4],["u64",15]]],[[["i32",15]]],[[["i32",15]]],[[],["i32",15]],[[["i32",15]],["i32",15]],[[["i32",15]],["i32",15]],[[["usize",15],["i32",15]],["isize",15]],[[["usize",15],["i32",15]],["isize",15]],[[["isize",15],["i32",15]],["isize",15]],[[["usize",15]],["i32",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],null,null,[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[["vaddr",3]],["ordering",4]],[[["paddr",3]],["ordering",4]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[]],[[]],[[["usize",15]],["vaddr",3]],[[["u64",15]],["vaddr",3]],[[["i32",15]],["paddr",3]],[[["usize",15]],["paddr",3]],[[["u64",15]],["paddr",3]],[[["i32",15]],["vaddr",3]],[[["usize",15]]],[[["usize",15]]],[[["vaddr",3]]],[[["paddr",3]]],[[["u64",15]]],[[["u64",15]]],[[],["vaddr",3]],[[],["paddr",3]],[[["vaddr",3]],["bool",15]],[[["vaddr",3]],["bool",15]],[[["paddr",3]],["bool",15]],[[["paddr",3]],["bool",15]],[[["vaddr",3]]],[[]],[[]],[[["u64",15]]],[[["usize",15]]],[[["paddr",3]]],[[],["u64",15]],[[],["u64",15]],[[],["usize",15]],[[],["usize",15]],[[["u64",15]]],[[["i32",15]]],[[["u64",15]]],[[["usize",15]]],[[["vaddr",3]],[["ordering",4],["option",4]]],[[["paddr",3]],[["ordering",4],["option",4]]],[[["u64",15]]],[[["paddr",3]],["paddr",3]],[[["u64",15]]],[[["usize",15]]],[[["vaddr",3]]],[[["i32",15]]],[[["usize",15]]],[[["u64",15]]],[[["vaddr",3]]],[[["u64",15]]],[[["paddr",3]]],[[["vaddr",3]]],[[["u64",15]]],[[["paddr",3]]],[[["u64",15]]],[[["usize",15]]],[[["usize",15]]],[[["u64",15]]],[[["paddr",3]]],[[["usize",15]]],[[["vaddr",3]],["vaddr",3]],[[["u64",15]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[]],[[]],[[]],[[]],[[["fileperms",3],["str",15]],[["box",3],["fileerror",4],["result",4]]],[[["str",15]],[["result",4],["fileerror",4]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["pagetableentryflags",3]],["pagetableentryflags",3]],[[["pciclasscode",4]],["bool",15]],[[["pcinetworkcontrollersubclass",4]],["bool",15]],[[["pagetableentryflags",3]],["bool",15]],[[["pagetableentryflags",3]],["bool",15]],[[["pagetableentryflags",3]],["ordering",4]],[[["pagetableentryflags",3]],[["ordering",4],["option",4]]],[[["i32",15]],["result",4]],[[["pagetableentryflags",3]]],[[],["pagetableentryflags",3]],[[["pagetableentryflags",3]],["pagetableentryflags",3]],[[["pagetableentryflags",3]],["pagetableentryflags",3]],[[["pagetableentryflags",3]],["pagetableentryflags",3]],[[["pagetableentryflags",3]]],[[["pagetableentryflags",3]]],[[["pagetableentryflags",3]]],[[]],[[]],[[]],[[]],[[["intoiterator",8]],["pagetableentryflags",3]],[[["intoiterator",8]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["str",15]]],[[["str",15]]],[[],["opcode",4]],[[],["irqstatistics",3]],[[],["pciclasscode",4]],[[],["pcinetworkcontrollersubclass",4]],[[],["pciadapter",3]],[[],["pcibar",4]],[[],["iobar",3]],[[],["memorybar",3]],[[],["taskstacks",4]],[[]],[[],["pagetableentryflags",3]],[[],["pagetableentry",3]],[[],["basepagesize",4]],[[],["largepagesize",4]],[[],["hugepagesize",4]],[[],["fileperms",3]],[[],["itimerval",3]],[[],["timespec",3]],[[],["timeval",3]],[[],["fuse_out_header",3]],[[],["fuse_init_out",3]],[[],["fuse_read_in",3]],[[],["fuse_read_out",3]],[[],["fuse_write_in",3]],[[],["fuse_write_out",3]],[[],["fuse_open_in",3]],[[],["fuse_open_out",3]],[[],["fuse_release_in",3]],[[],["fuse_release_out",3]],[[],["fuse_entry_out",3]],[[],["fuse_attr",3]],[[],["fuse_unlink_out",3]],[[],["fuse_create_out",3]],[[],["fileperms",3]],[[],[["i64",15],["option",4]]],[[],[["option",4],["u64",15]]],[[],[["i64",15],["option",4]]],[[],[["option",4],["u64",15]]],[[["i64",15]],["option",4]],[[["u64",15]],["option",4]],[[["i64",15]],["option",4]],[[["u64",15]],["option",4]],[[],["u64",15]],[[],["usize",15]],[[],["paddr",3]],[[],["bool",15]],[[]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["paddr",3]],[[],["paddr",3]],[[],["paddr",3]],[[],["paddr",3]],[[],["paddr",3]],[[],["paddr",3]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["u64",15]],["vaddr",3]],[[["usize",15]],["vaddr",3]],[[],["u64",15]],[[],["usize",15]],[[]],[[]],[[],["vaddr",3]],[[],["bool",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["vaddr",3]],[[],["vaddr",3]],[[],["vaddr",3]],[[],["vaddr",3]],[[],["vaddr",3]],[[],["vaddr",3]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]]],"p":[[8,"FuseInterface"],[4,"Opcode"],[3,"fuse_in_header"],[3,"fuse_out_header"],[3,"fuse_init_in"],[3,"fuse_init_out"],[3,"fuse_read_in"],[3,"fuse_write_in"],[3,"fuse_write_out"],[3,"fuse_open_in"],[3,"fuse_open_out"],[3,"fuse_release_in"],[3,"fuse_lookup_in"],[3,"fuse_entry_out"],[3,"fuse_attr"],[3,"fuse_unlink_in"],[3,"fuse_create_in"],[3,"fuse_create_out"],[3,"ExceptionStackFrame"],[3,"IrqStatistics"],[4,"PciError"],[4,"PciClassCode"],[4,"PciNetworkControllerSubclass"],[3,"PciAdapter"],[4,"PciBar"],[3,"IOBar"],[3,"MemoryBar"],[4,"PciDriver"],[3,"PerCoreInnerVariables"],[8,"PerCoreVariableMethods"],[3,"XSaveLegacyRegion"],[3,"XSaveHeader"],[3,"XSaveAVXState"],[3,"XSaveLWPState"],[3,"XSaveBndregs"],[3,"XSaveBndcsr"],[3,"FPUState"],[4,"TaskStacks"],[3,"SerialPort"],[8,"PageSize"],[3,"PhysAddr"],[3,"VirtAddr"],[4,"FileError"],[8,"PosixFileSystem"],[8,"PosixFile"],[3,"FilePerms"],[4,"SeekWhence"],[3,"AcpiTable"],[3,"Fuse"],[3,"Cmd"],[3,"Rsp"],[3,"PerCoreVariable"],[3,"TaskTLS"],[3,"PageTableEntryFlags"],[3,"PageTableEntry"],[3,"Filesystem"],[3,"itimerval"],[3,"timespec"],[3,"timeval"],[3,"fuse_read_out"],[3,"fuse_release_out"],[3,"fuse_unlink_out"],[3,"BootStack"],[3,"CommonStack"],[3,"BootInfo"],[4,"BasePageSize"],[4,"LargePageSize"],[4,"HugePageSize"],[3,"SpinlockContainer"],[3,"SpinlockIrqSaveContainer"]]},\
"log":{"doc":"A lightweight logging facade.","t":[4,13,13,13,13,13,11,11,11,4,13,13,13,13,13,13,11,11,11,3,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,3,11,11,11,11,8,10,10,10,5,5,5,5,3,3,5,17,14,14,14,14,14,14,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Level","Error","Warn","Info","Debug","Trace","max","to_level_filter","as_str","LevelFilter","Off","Error","Warn","Info","Debug","Trace","max","to_level","as_str","Record","builder","args","metadata","level","target","module_path","module_path_static","file","file_static","line","RecordBuilder","new","args","metadata","level","target","module_path","module_path_static","file","file_static","line","build","Metadata","builder","level","target","MetadataBuilder","new","level","target","build","Log","enabled","log","flush","set_max_level","max_level","set_logger","set_logger_racy","SetLoggerError","ParseLevelError","logger","STATIC_MAX_LEVEL","log","error","warn","info","debug","trace","log_enabled","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","eq","eq","eq","eq","eq","ne","eq","ne","eq","ne","cmp","cmp","cmp","cmp","partial_cmp","lt","le","gt","ge","partial_cmp","lt","le","gt","ge","partial_cmp","lt","le","gt","ge","partial_cmp","lt","le","gt","ge","partial_cmp","partial_cmp","from_str","from_str","hash","hash","hash","hash","clone","clone","clone","clone"],"q":["log","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["An enum representing the available verbosity levels of …","The “error” level.","The “warn” level.","The “info” level.","The “debug” level.","The “trace” level.","Returns the most verbose logging level.","Converts the <code>Level</code> to the equivalent <code>LevelFilter</code>.","Returns the string representation of the <code>Level</code>.","An enum representing the available verbosity level …","A level lower than all log levels.","Corresponds to the <code>Error</code> log level.","Corresponds to the <code>Warn</code> log level.","Corresponds to the <code>Info</code> log level.","Corresponds to the <code>Debug</code> log level.","Corresponds to the <code>Trace</code> log level.","Returns the most verbose logging level filter.","Converts <code>self</code> to the equivalent <code>Level</code>.","Returns the string representation of the <code>LevelFilter</code>.","The “payload” of a log message.","Returns a new builder.","The message body.","Metadata about the log directive.","The verbosity level of the message.","The name of the target of the directive.","The module path of the message.","The module path of the message, if it is a <code>\'static</code> string.","The source file containing the message.","The module path of the message, if it is a <code>\'static</code> string.","The line containing the message.","Builder for <code>Record</code>.","Construct new <code>RecordBuilder</code>.","Set <code>args</code>.","Set <code>metadata</code>. Construct a <code>Metadata</code> object with …","Set <code>Metadata::level</code>.","Set <code>Metadata::target</code>","Set <code>module_path</code>","Set <code>module_path</code> to a <code>\'static</code> string","Set <code>file</code>","Set <code>file</code> to a <code>\'static</code> string.","Set <code>line</code>","Invoke the builder and return a <code>Record</code>","Metadata about a log message.","Returns a new builder.","The verbosity level of the message.","The name of the target of the directive.","Builder for <code>Metadata</code>.","Construct a new <code>MetadataBuilder</code>.","Setter for <code>level</code>.","Setter for <code>target</code>.","Returns a <code>Metadata</code> object.","A trait encapsulating the operations required of a logger.","Determines if a log message with the specified metadata …","Logs the <code>Record</code>.","Flushes any buffered records.","Sets the global maximum log level.","Returns the current maximum log level.","Sets the global logger to a <code>&\'static Log</code>.","A thread-unsafe version of <code>set_logger</code>.","The type returned by <code>set_logger</code> if <code>set_logger</code> has already …","The type returned by <code>from_str</code> when the string doesn’t …","Returns a reference to the logger.","The statically resolved maximum log level.","The standard logging macro.","Logs a message at the error level.","Logs a message at the warn level.","Logs a message at the info level.","Logs a message at the debug level.","Logs a message at the trace level.","Determines if a message logged at the specified level in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,1,1,1,1,1,1,1,1,0,2,2,2,2,2,2,2,2,2,0,3,3,3,3,3,3,3,3,3,3,0,4,4,4,4,4,4,4,4,4,4,4,0,5,5,5,0,6,6,6,6,0,7,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,2,2,2,2,2,2,2,3,3,3,3,3,3,3,4,4,4,4,4,4,4,5,5,5,5,5,5,5,6,6,6,6,6,6,6,8,8,8,8,8,8,8,9,9,9,9,9,9,9,1,2,3,4,5,6,8,9,1,2,8,9,1,1,2,2,5,5,6,6,9,9,1,2,5,6,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,5,6,1,2,1,2,5,6,1,2,3,5],"f":[null,null,null,null,null,null,[[],["level",4]],[[],["levelfilter",4]],[[],["str",15]],null,null,null,null,null,null,null,[[],["levelfilter",4]],[[],[["option",4],["level",4]]],[[],["str",15]],null,[[],["recordbuilder",3]],[[],["arguments",3]],[[],["metadata",3]],[[],["level",4]],[[],["str",15]],[[],[["str",15],["option",4]]],[[],[["str",15],["option",4]]],[[],[["str",15],["option",4]]],[[],[["str",15],["option",4]]],[[],[["u32",15],["option",4]]],null,[[],["recordbuilder",3]],[[["arguments",3]],["recordbuilder",3]],[[["metadata",3]],["recordbuilder",3]],[[["level",4]],["recordbuilder",3]],[[["str",15]],["recordbuilder",3]],[[["str",15],["option",4]],["recordbuilder",3]],[[["str",15],["option",4]],["recordbuilder",3]],[[["str",15],["option",4]],["recordbuilder",3]],[[["str",15],["option",4]],["recordbuilder",3]],[[["u32",15],["option",4]],["recordbuilder",3]],[[],["record",3]],null,[[],["metadatabuilder",3]],[[],["level",4]],[[],["str",15]],null,[[],["metadatabuilder",3]],[[["level",4]],["metadatabuilder",3]],[[["str",15]],["metadatabuilder",3]],[[],["metadata",3]],null,[[["metadata",3]],["bool",15]],[[["record",3]]],[[]],[[["levelfilter",4]]],[[],["levelfilter",4]],[[["log",8]],[["setloggererror",3],["result",4]]],[[["log",8]],[["setloggererror",3],["result",4]]],null,null,[[],["log",8]],null,null,null,null,null,null,null,null,[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["level",4]],["bool",15]],[[["levelfilter",4]],["bool",15]],[[["levelfilter",4]],["bool",15]],[[["level",4]],["bool",15]],[[["metadata",3]],["bool",15]],[[["metadata",3]],["bool",15]],[[["metadatabuilder",3]],["bool",15]],[[["metadatabuilder",3]],["bool",15]],[[["parselevelerror",3]],["bool",15]],[[["parselevelerror",3]],["bool",15]],[[["level",4]],["ordering",4]],[[["levelfilter",4]],["ordering",4]],[[["metadata",3]],["ordering",4]],[[["metadatabuilder",3]],["ordering",4]],[[["level",4]],[["ordering",4],["option",4]]],[[["level",4]],["bool",15]],[[["level",4]],["bool",15]],[[["level",4]],["bool",15]],[[["level",4]],["bool",15]],[[["levelfilter",4]],[["ordering",4],["option",4]]],[[["levelfilter",4]],["bool",15]],[[["levelfilter",4]],["bool",15]],[[["levelfilter",4]],["bool",15]],[[["levelfilter",4]],["bool",15]],[[["levelfilter",4]],[["ordering",4],["option",4]]],[[["levelfilter",4]],["bool",15]],[[["levelfilter",4]],["bool",15]],[[["levelfilter",4]],["bool",15]],[[["levelfilter",4]],["bool",15]],[[["level",4]],[["ordering",4],["option",4]]],[[["level",4]],["bool",15]],[[["level",4]],["bool",15]],[[["level",4]],["bool",15]],[[["level",4]],["bool",15]],[[["metadata",3]],[["ordering",4],["option",4]]],[[["metadatabuilder",3]],[["ordering",4],["option",4]]],[[["str",15]],[["result",4],["level",4]]],[[["str",15]],[["levelfilter",4],["result",4]]],[[]],[[]],[[]],[[]],[[],["level",4]],[[],["levelfilter",4]],[[],["record",3]],[[],["metadata",3]]],"p":[[4,"Level"],[4,"LevelFilter"],[3,"Record"],[3,"RecordBuilder"],[3,"Metadata"],[3,"MetadataBuilder"],[8,"Log"],[3,"SetLoggerError"],[3,"ParseLevelError"]]},\
"multiboot":{"doc":"Multiboot v1 library","t":[0,17,6,8,10,10,10,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,12,12,12,12,11,11,11,4,13,13,13,13,13,3,11,11,11,11,3,3,12,12,12,11,3,4,13,13,3,3,11,3,12,12,12,12,12,11,11,4,13,13,13,3,3,12,12,12,12,12,12,0,17,3,12,11,11,11,11,11,11,11,3,12,12,12,12,12,11,3,12,12,11,11,4,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["information","SIGNATURE_EAX","PAddr","MemoryManagement","paddr_to_slice","allocate","deallocate","Multiboot","MultibootInfo","from_ptr","from_ref","has_memory_bounds","has_boot_device","has_cmdline","has_modules","has_aout_symbols","has_elf_symbols","has_memory_map","has_drives","has_config_table","has_boot_loader_name","has_apm_table","has_vbe","has_framebuffer_table","lower_memory_bound","upper_memory_bound","set_memory_bounds","boot_device","command_line","set_command_line","boot_loader_name","set_boot_loader_name","modules","set_modules","symbols","set_symbols","memory_regions","set_memory_regions","find_highest_address","framebuffer_table","set_framebuffer_table","BootDevice","drive","partition1","partition2","partition3","partition1_is_valid","partition2_is_valid","partition3_is_valid","MemoryType","Available","Reserved","ACPI","NVS","Defect","MemoryEntry","new","base_address","length","memory_type","MemoryMapIter","Module","start","end","string","new","ModuleIter","SymbolType","AOut","Elf","AOutSymbols","ElfSymbols","from_addr","FramebufferTable","addr","pitch","width","height","bpp","new","color_info","ColorInfoType","Palette","Rgb","Text","ColorInfoPalette","ColorInfoRgb","red_field_position","red_mask_size","green_field_position","green_mask_size","blue_field_position","blue_mask_size","header","MULTIBOOT_HEADER_MAGIC","Header","header_start","from_slice","wants_modules_page_aligned","wants_memory_information","has_video_mode","has_multiboot_addresses","get_addresses","get_preferred_video_mode","MultibootAddresses","header_address","load_address","load_end_address","bss_end_address","entry_address","compute_load_offset","MultibootVideoMode","width","height","mode_type","depth","VideoModeType","LinearGraphics","TextMode","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","into_iter","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","into_iter","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","eq","eq","next","next","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","default","default","default","default","default","default"],"q":["multiboot","multiboot::information","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","multiboot","multiboot::header","","","","","","","","","","","","","","","","","","","","","","","","","multiboot::information","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","multiboot::header","","","","","","","","","","","","","","","","","","","","","","","","","","","","multiboot::information","","","","","","","","","","","multiboot::header","","","","multiboot::information","multiboot::header","multiboot::information","","","","","","","","","multiboot::header","","","","multiboot::information","","","","",""],"d":["This modules contains the pieces for parsing and creating …","Value found in %eax after multiboot jumps to our entry …","","Implement this trait to be able to get or set fields …","Translates physical addr + size into a kernel accessible …","Allocates <code>length</code> bytes.","Free the previously allocated memory.","Multiboot struct clients mainly interact with","Representation of Multiboot Information according to …","Initializes the multiboot structure from a passed address.","Initializes this struct from an already existing …","If true, then the <code>mem_upper</code> and <code>mem_lower</code> fields are …","If true, then the <code>boot_device</code> field is valid.","If true, then the <code>cmdline</code> field is valid.","If true, then the <code>mods_addr</code> and <code>mods_count</code> fields are …","If true, then the <code>syms</code> field is valid and contains AOut …","If true, then the <code>syms</code> field is valid and containts ELF …","If true, then the <code>mmap_addr</code> and <code>mmap_length</code> fields are …","If true, then the <code>drives_addr</code> and <code>drives_length</code> fields …","If true, then the <code>config_table</code> field is valid.","If true, then the <code>boot_loader_name</code> field is valid.","If true, then the <code>apm_table</code> field is valid.","If true, then the <code>vbe_*</code> fields are valid.","If true, then the framebuffer table is valid.","Indicate the amount of lower memory in kilobytes.","Indicate the amount of upper memory in kilobytes.","Sets the memory bounds (lower, upper).","Indicates which bios disk device the boot loader loaded …","Command line passed to the kernel.","Command line to be passed to the kernel.","Get the name of the bootloader.","Set the name of the bootloader.","Discover all additional modules in multiboot.","Publish modules to the kernel.","Get the symbols.","Set the symbols.","Discover all memory regions in the multiboot memory map.","Publish the memory regions to the kernel.","Return end address of multiboot image.","Return the framebuffer table, if it exists.","Set the framebuffer table, if it exists.","The ‘boot_device’ field.","Contains the bios drive number as understood by the bios …","Specifies the top-level partition number.","Specifies a sub-partition in the top-level partition","Specifies a sub-partition in the 2nd-level partition","Is partition1 a valid partition?","Is partition2 a valid partition?","Is partition3 a valid partition?","Types that define if the memory is usable or not.","memory, available to OS","reserved, not available (rom, mem map dev)","ACPI Reclaim Memory","ACPI NVS Memory","defective RAM modules","Multiboot format of the MMAP buffer.","Create a new entry from the given data.","Get base of memory region.","Get size of the memory region.","Is the region type valid RAM?","Used to iterate over all memory regions provided by …","Information about a module in multiboot.","Start address of module in physical memory.","End address of module in physic memory.","Name of the module.","","Used to iterate over all modules in multiboot.","Safe wrapper for either <code>AOutSymbols</code> or <code>ElfSymbols</code>","","","Multiboot format for AOut Symbols","Multiboot format for ELF Symbols","Uses a passed address for the symbols.","Contains the information about the framebuffer","","","","","","Create this table from a color info.","Get the color info from this table.","Safe wrapper for <code>ColorInfo</code>","","","","Information for indexed color mode","Information for direct RGB color mode","","","","","","","This module contains the pieces for parsing Multiboot …","","Multiboot struct bootloaders mainly interact with","the index at which the header starts","Get the header by parsing it from a slice.","If true, then the modules have to be page aligned.","If true, memory information must be passed.","If true, then the <code>mode_type</code>, <code>width</code>, <code>height</code> and <code>depth</code> …","If true, then the <code>header_addr</code>, <code>load_addr</code>, <code>load_end_addr</code>, …","Get the load addresses specified in the Multiboot header.","Get the preferred video mode specified in the Multiboot …","Addresses specified in the Multiboot header","","","","","","Compute the offset of the load address into the binary.","Preferred video mode specified in the Multiboot header","","","Get the preferred video mode type","Get the preferred depth, if possible.","Preferred video mode typeet the “default” memory entry. (It’s 0 bytes and …","","",""],"i":[0,0,0,0,1,1,1,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,3,3,3,3,3,3,3,0,4,4,4,4,4,0,5,5,5,5,0,0,6,6,6,6,0,0,7,7,0,0,8,0,9,9,9,9,9,9,9,0,10,10,10,0,0,11,11,11,11,11,11,0,0,0,12,12,12,12,12,12,12,12,0,13,13,13,13,13,13,0,14,14,14,14,0,15,15,2,2,2,2,2,2,2,16,16,16,16,16,16,16,3,3,3,3,3,3,3,4,4,4,4,4,4,4,5,5,5,5,5,5,5,17,17,17,17,17,17,17,17,6,6,6,6,6,6,6,18,18,18,18,18,18,18,18,7,7,7,7,7,7,7,19,19,19,19,19,19,19,8,8,8,8,8,8,8,9,9,9,9,9,9,9,10,10,10,10,10,10,10,20,20,20,20,20,20,20,11,11,11,11,11,11,11,12,12,12,12,12,12,12,13,13,13,13,13,13,13,14,14,14,14,14,14,14,15,15,15,15,15,15,15,3,4,5,6,7,19,8,9,10,20,11,12,13,14,15,4,15,17,18,3,5,7,19,8,20,11,12,13,14,15,16,3,5,19,8,9],"f":[null,null,null,null,[[["usize",15],["paddr",6]],["option",4]],[[["usize",15]],["option",4]],[[["paddr",6]]],null,null,[[["paddr",6],["memorymanagement",8]],[["option",4],["multiboot",3]]],[[["multibootinfo",3],["memorymanagement",8]]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],[["u32",15],["option",4]]],[[],[["u32",15],["option",4]]],[[["option",4]]],[[],[["option",4],["bootdevice",3]]],[[],[["str",15],["option",4]]],[[["option",4],["str",15]]],[[],[["str",15],["option",4]]],[[["option",4],["str",15]]],[[],[["option",4],["moduleiter",3]]],[[["option",4]]],[[],[["symboltype",4],["option",4]]],[[["symboltype",4],["option",4]]],[[],[["option",4],["memorymapiter",3]]],[[["option",4]]],[[],["paddr",6]],[[],[["framebuffertable",3],["option",4]]],[[["framebuffertable",3],["option",4]]],null,null,null,null,null,[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,null,null,null,null,null,null,[[["memorytype",4],["paddr",6]]],[[],["paddr",6]],[[],["u64",15]],[[],["memorytype",4]],null,null,null,null,null,[[["paddr",6],["str",15],["option",4]],["module",3]],null,null,null,null,null,null,[[["u32",15],["paddr",6]]],null,null,null,null,null,null,[[["u32",15],["colorinfotype",4],["u8",15],["u64",15]]],[[],[["colorinfotype",4],["option",4]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["option",4]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],[["multibootaddresses",3],["option",4]]],[[],[["multibootvideomode",3],["option",4]]],null,null,null,null,null,null,[[["u32",15]],["u32",15]],null,null,null,[[],[["videomodetype",4],["option",4]]],[[],[["u32",15],["option",4]]],null,null,null,[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["memorytype",4]],["bool",15]],[[["videomodetype",4]],["bool",15]],[[],[["option",4],["memoryentry",3]]],[[],[["option",4],["module",3]]],[[],["bootdevice",3]],[[],["memoryentry",3]],[[],["symboltype",4]],[[],["aoutsymbols",3]],[[],["elfsymbols",3]],[[],["colorinfopalette",3]],[[],["colorinforgb",3]],[[],["header",3]],[[],["multibootaddresses",3]],[[],["multibootvideomode",3]],[[],["videomodetype",4]],[[],["multibootinfo",3]],[[]],[[]],[[],["aoutsymbols",3]],[[],["elfsymbols",3]],[[],["framebuffertable",3]]],"p":[[8,"MemoryManagement"],[3,"Multiboot"],[3,"BootDevice"],[4,"MemoryType"],[3,"MemoryEntry"],[3,"Module"],[4,"SymbolType"],[3,"ElfSymbols"],[3,"FramebufferTable"],[4,"ColorInfoType"],[3,"ColorInfoRgb"],[3,"Header"],[3,"MultibootAddresses"],[3,"MultibootVideoMode"],[4,"VideoModeType"],[3,"MultibootInfo"],[3,"MemoryMapIter"],[3,"ModuleIter"],[3,"AOutSymbols"],[3,"ColorInfoPalette"]]},\
"num":{"doc":"A collection of numeric types and traits for Rust.","t":[0,3,12,12,6,6,3,0,8,10,10,11,10,10,11,11,11,10,10,10,10,10,11,11,11,3,12,12,12,5,5,5,5,5,5,5,5,3,5,5,8,10,11,11,5,5,5,8,10,10,5,5,0,3,5,3,5,3,5,3,5,3,5,3,5,0,0,8,10,10,0,8,11,11,11,11,10,11,11,11,11,11,10,11,11,11,8,11,11,11,11,10,11,11,11,11,11,10,11,11,11,5,8,10,8,10,0,8,10,10,10,10,10,10,10,10,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,8,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,0,8,10,11,10,8,10,11,11,5,5,0,8,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0,0,8,10,8,10,8,10,8,10,8,10,8,10,8,10,8,10,0,8,16,10,0,8,16,10,8,10,0,8,10,8,10,8,10,0,8,10,10,8,10,8,10,8,10,0,8,10,8,10,8,10,8,10,8,10,8,10,0,8,16,10,5,5,0,8,10,10,10,10,10,5,5,5,8,8,16,10,8,8,8,8,8,8,4,13,13,3,12,5,5,5,8,10,10,8,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,5,8,10,8,11,11,11,11,10,11,11,11,11,11,10,11,11,11,8,10,8,11,11,11,11,10,11,11,11,11,11,10,11,11,11,5,5,8,10,11,11,8,10,11,10,8,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,8,10,8,10,8,10,8,10,8,10,8,10,8,10,8,10,8,16,10,8,16,10,8,10,8,10,10,8,10,8,10,8,10,8,10,8,10,8,10,8,10,8,10,8,10,5,5,8,16,10,5,5,5,8,10,10,10,10,10,8,0,3,6,6,6,3,3,12,12,6,6,6,8,10,10,11,10,10,11,11,11,10,10,10,10,10,11,11,11,5,5,5,5,5,5,0,8,11,11,11,11,10,11,11,11,11,11,10,11,11,11,8,11,11,11,11,10,11,11,11,11,11,10,11,11,11,5,8,10,8,10,5,5,5,5,0,8,16,10,5,5,5,5,5,8,10,10,8,10,8,10,8,10,8,10,8,11,11,11,11,10,11,11,11,11,11,10,11,11,11,8,16,10,8,10,8,10,11,11,8,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,8,10,10,8,10,10,10,10,10,8,11,11,11,11,10,11,11,11,11,11,10,11,11,11,8,8,10,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["complex","Complex","re","im","Complex32","Complex64","ParseComplexError","integer","Integer","div_floor","mod_floor","div_ceil","gcd","lcm","gcd_lcm","extended_gcd","extended_gcd_lcm","divides","is_multiple_of","is_even","is_odd","div_rem","div_mod_floor","next_multiple_of","prev_multiple_of","ExtendedGcd","gcd","x","y","div_rem","div_floor","mod_floor","div_mod_floor","div_ceil","gcd","lcm","gcd_lcm","IterBinomial","binomial","multinomial","Roots","nth_root","sqrt","cbrt","cbrt","nth_root","sqrt","Average","average_ceil","average_floor","average_ceil","average_floor","iter","Range","range","RangeInclusive","range_inclusive","RangeStep","range_step","RangeStepInclusive","range_step_inclusive","RangeFrom","range_from","RangeStepFrom","range_step_from","traits","bounds","Bounded","min_value","max_value","cast","ToPrimitive","to_isize","to_i8","to_i16","to_i32","to_i64","to_i128","to_usize","to_u8","to_u16","to_u32","to_u64","to_u128","to_f32","to_f64","FromPrimitive","from_isize","from_i8","from_i16","from_i32","from_i64","from_i128","from_usize","from_u8","from_u16","from_u32","from_u64","from_u128","from_f32","from_f64","cast","NumCast","from","AsPrimitive","as_","float","FloatCore","infinity","neg_infinity","nan","neg_zero","min_value","min_positive_value","epsilon","max_value","is_nan","is_infinite","is_finite","is_normal","classify","floor","ceil","round","trunc","fract","abs","signum","is_sign_positive","is_sign_negative","min","max","recip","powi","to_degrees","to_radians","integer_decode","FloatConst","E","FRAC_1_PI","FRAC_1_SQRT_2","FRAC_2_PI","FRAC_2_SQRT_PI","FRAC_PI_2","FRAC_PI_3","FRAC_PI_4","FRAC_PI_6","FRAC_PI_8","LN_10","LN_2","LOG10_E","LOG2_E","PI","SQRT_2","TAU","LOG10_2","LOG2_10","identities","Zero","zero","set_zero","is_zero","One","one","set_one","is_one","zero","one","int","PrimInt","count_ones","count_zeros","leading_zeros","trailing_zeros","rotate_left","rotate_right","signed_shl","signed_shr","unsigned_shl","unsigned_shr","swap_bytes","from_be","from_le","to_be","to_le","pow","ops","checked","CheckedAdd","checked_add","CheckedSub","checked_sub","CheckedMul","checked_mul","CheckedDiv","checked_div","CheckedRem","checked_rem","CheckedNeg","checked_neg","CheckedShl","checked_shl","CheckedShr","checked_shr","inv","Inv","Output","inv","mul_add","MulAdd","Output","mul_add","MulAddAssign","mul_add_assign","overflowing","OverflowingAdd","overflowing_add","OverflowingSub","overflowing_sub","OverflowingMul","overflowing_mul","saturating","Saturating","saturating_add","saturating_sub","SaturatingAdd","saturating_add","SaturatingSub","saturating_sub","SaturatingMul","saturating_mul","wrapping","WrappingAdd","wrapping_add","WrappingSub","wrapping_sub","WrappingMul","wrapping_mul","WrappingNeg","wrapping_neg","WrappingShl","wrapping_shl","WrappingShr","wrapping_shr","pow","Pow","Output","pow","pow","checked_pow","sign","Signed","abs","abs_sub","signum","is_positive","is_negative","abs","abs_sub","signum","Unsigned","Num","FromStrRadixErr","from_str_radix","NumOps","NumRef","RefNum","NumAssignOps","NumAssign","NumAssignRef","FloatErrorKind","Empty","Invalid","ParseFloatError","kind","clamp","clamp_min","clamp_max","Bounded","min_value","max_value","FloatConst","E","FRAC_1_PI","FRAC_1_SQRT_2","FRAC_2_PI","FRAC_2_SQRT_PI","FRAC_PI_2","FRAC_PI_3","FRAC_PI_4","FRAC_PI_6","FRAC_PI_8","LN_10","LN_2","LOG10_E","LOG2_E","PI","SQRT_2","TAU","LOG10_2","LOG2_10","cast","AsPrimitive","as_","FromPrimitive","from_isize","from_i8","from_i16","from_i32","from_i64","from_i128","from_usize","from_u8","from_u16","from_u32","from_u64","from_u128","from_f32","from_f64","NumCast","from","ToPrimitive","to_isize","to_i8","to_i16","to_i32","to_i64","to_i128","to_usize","to_u8","to_u16","to_u32","to_u64","to_u128","to_f32","to_f64","one","zero","One","one","set_one","is_one","Zero","zero","set_zero","is_zero","PrimInt","count_ones","count_zeros","leading_zeros","trailing_zeros","rotate_left","rotate_right","signed_shl","signed_shr","unsigned_shl","unsigned_shr","swap_bytes","from_be","from_le","to_be","to_le","pow","CheckedAdd","checked_add","CheckedDiv","checked_div","CheckedMul","checked_mul","CheckedNeg","checked_neg","CheckedRem","checked_rem","CheckedShl","checked_shl","CheckedShr","checked_shr","CheckedSub","checked_sub","Inv","Output","inv","MulAdd","Output","mul_add","MulAddAssign","mul_add_assign","Saturating","saturating_add","saturating_sub","SaturatingAdd","saturating_add","SaturatingMul","saturating_mul","SaturatingSub","saturating_sub","WrappingAdd","wrapping_add","WrappingMul","wrapping_mul","WrappingNeg","wrapping_neg","WrappingShl","wrapping_shl","WrappingShr","wrapping_shr","WrappingSub","wrapping_sub","checked_pow","pow","Pow","Output","pow","abs","abs_sub","signum","Signed","abs","abs_sub","signum","is_positive","is_negative","Unsigned","rational","Ratio","Rational","Rational32","Rational64","ParseRatioError","Complex","re","im","Rational","Rational32","Rational64","Integer","div_floor","mod_floor","div_ceil","gcd","lcm","gcd_lcm","extended_gcd","extended_gcd_lcm","divides","is_multiple_of","is_even","is_odd","div_rem","div_mod_floor","next_multiple_of","prev_multiple_of","range","range_inclusive","range_step","range_step_inclusive","abs","abs_sub","cast","ToPrimitive","to_isize","to_i8","to_i16","to_i32","to_i64","to_i128","to_usize","to_u8","to_u16","to_u32","to_u64","to_u128","to_f32","to_f64","FromPrimitive","from_isize","from_i8","from_i16","from_i32","from_i64","from_i128","from_usize","from_u8","from_u16","from_u32","from_u64","from_u128","from_f32","from_f64","cast","NumCast","from","AsPrimitive","as_","cast","checked_pow","clamp","one","pow","Pow","Output","pow","pow","checked_pow","pow","signum","zero","Bounded","min_value","max_value","CheckedAdd","checked_add","CheckedDiv","checked_div","CheckedMul","checked_mul","CheckedSub","checked_sub","FromPrimitive","from_isize","from_i8","from_i16","from_i32","from_i64","from_i128","from_usize","from_u8","from_u16","from_u32","from_u64","from_u128","from_f32","from_f64","Num","FromStrRadixErr","from_str_radix","NumCast","from","One","one","set_one","is_one","PrimInt","count_ones","count_zeros","leading_zeros","trailing_zeros","rotate_left","rotate_right","signed_shl","signed_shr","unsigned_shl","unsigned_shr","swap_bytes","from_be","from_le","to_be","to_le","pow","Saturating","saturating_add","saturating_sub","Signed","abs","abs_sub","signum","is_positive","is_negative","ToPrimitive","to_isize","to_i8","to_i16","to_i32","to_i64","to_i128","to_usize","to_u8","to_u16","to_u32","to_u64","to_u128","to_f32","to_f64","Unsigned","Zero","zero","set_zero","is_zero","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","into_iter","borrow","borrow_mut","from","into","try_into","type_id","try_from","into_iter","borrow","borrow_mut","from","into","try_into","type_id","try_from","into_iter","borrow","borrow_mut","from","into","try_into","type_id","try_from","into_iter","borrow","borrow_mut","from","into","try_into","type_id","try_from","into_iter","borrow","borrow_mut","from","into","try_into","type_id","try_from","into_iter","borrow","borrow_mut","from","into","try_into","type_id","try_from","into_iter","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","from_usize","from_isize","from_u8","from_u16","from_u32","from_u64","from_i8","from_i16","from_i32","from_i64","from_u128","from_i128","from_f32","from_f64","div","div","div","div","fmt","fmt","default","fmt","fmt","mul_assign","mul_assign","mul_assign","mul_assign","hash","neg","fmt","add_assign","add_assign","add_assign","add_assign","from","from","sum","sum","sub","sub","sub","sub","clone","from_str","zero","is_zero","set_zero","add","add","add","add","div_assign","div_assign","div_assign","div_assign","eq","ne","eq","ne","fmt","from","fmt","rem_assign","rem_assign","rem_assign","rem_assign","rem","rem","rem","rem","mul_add","sub_assign","sub_assign","sub_assign","sub_assign","product","product","mul","mul","mul","mul","inv","to_usize","to_isize","to_u8","to_u16","to_u32","to_u64","to_i8","to_i16","to_i32","to_i64","to_u128","to_i128","to_f32","to_f64","from_str_radix","fmt","as_","one","is_one","set_one","fmt","fmt","mul_add_assign","mul_add_assign","fmt","fmt","fmt","cmp","div","div","div","div","partial_cmp","fmt","fmt","fmt","fmt","mul_assign","mul_assign","mul_assign","mul_assign","fmt","hash","neg","to_i64","to_i128","to_u64","to_u128","to_f64","to_i64","to_i128","to_u64","to_u128","to_f64","to_i64","to_i128","to_u64","to_u128","to_f64","to_i64","to_i128","to_u64","to_u128","to_f64","to_i64","to_i128","to_u64","to_u128","to_f64","to_i64","to_i128","to_u64","to_u128","to_f64","to_i64","to_i128","to_u64","to_u128","to_f64","to_i64","to_i128","to_u64","to_u128","to_f64","to_i64","to_i128","to_u64","to_u128","to_f64","to_i64","to_i128","to_u64","to_u128","to_f64","add_assign","add_assign","add_assign","add_assign","from","from","sum","sum","sub","sub","sub","sub","clone","clone","one","is_one","set_one","from_str","add","add","add","add","div_assign","div_assign","div_assign","div_assign","eq","ne","eq","fmt","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","fmt","rem_assign","rem_assign","rem_assign","rem_assign","rem","rem","rem","rem","from_i64","from_i128","from_u64","from_u128","from_f32","from_f64","from_i64","from_i128","from_u64","from_u128","from_f32","from_f64","from_i64","from_i128","from_u64","from_u128","from_f32","from_f64","from_i64","from_i128","from_u64","from_u128","from_f32","from_f64","from_i64","from_i128","from_u64","from_u128","from_f32","from_f64","from_i64","from_i128","from_u64","from_u128","from_f32","from_f64","from_i64","from_i128","from_u64","from_u128","from_f32","from_f64","from_i64","from_i128","from_u64","from_u128","from_f32","from_f64","from_i64","from_i128","from_u64","from_u128","from_f32","from_f64","from_i64","from_i128","from_u64","from_u128","from_f32","from_f64","from_i64","from_i128","from_u64","from_u128","from_f32","from_f64","from_i64","from_i128","from_u64","from_u128","from_f32","from_f64","sub_assign","sub_assign","sub_assign","sub_assign","into","checked_sub","product","product","mul","mul","mul","mul","checked_mul","from_str_radix","fmt","checked_add","zero","is_zero","set_zero","checked_div","abs","abs_sub","signum","is_positive","is_negative","fmt","fmt","inv","eq","ne","next","clone","fmt","next_back","next_back","next","size_hint","next","size_hint","next","size_hint","next","next","size_hint","next","clone","clone","clone","clone","clone","clone","new","i","norm_sqr","scale","unscale","powu","conj","inv","powi","l1_norm","is_nan","is_infinite","is_finite","is_normal","new","new_raw","numer","denom","new","from_integer","to_integer","is_integer","reduced","recip","floor","ceil","round","trunc","fract","pow","approximate_float"],"q":["num","num::complex","","","","","","num","num::integer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","num","num::iter","","","","","","","","","","","","num","num::traits","num::traits::bounds","","","num::traits","num::traits::cast","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","num::traits","num::traits::float","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","num::traits","num::traits::identities","","","","","","","","","","num::traits","num::traits::int","","","","","","","","","","","","","","","","","num::traits","num::traits::ops","num::traits::ops::checked","","","","","","","","","","","","","","","","num::traits::ops","num::traits::ops::inv","","","num::traits::ops","num::traits::ops::mul_add","","","","","num::traits::ops","num::traits::ops::overflowing","","","","","","num::traits::ops","num::traits::ops::saturating","","","","","","","","","num::traits::ops","num::traits::ops::wrapping","","","","","","","","","","","","num::traits","num::traits::pow","","","","","num::traits","num::traits::sign","","","","","","","","","","num::traits","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","num","num::rational","","","","","num","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","num::cast","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","num","","","","","num::pow","","","","","num","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","num::complex","","","","","","","num::integer","","","","","","","","","","","","","","","num::iter","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","num::traits","","","","","","","","","","","","","","num::rational","","","","","","","","","","","","","","num","","","","","","","","","","","","","","","","","","","","","","num::complex","num","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","num::complex","","num","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","num::complex","num","","num::traits","","","num::rationalnum::integer","","","","","num::iter","","","","","","","","","","","","","","","","","","num","","","","","","","","","","","","","","num::integer","num::rational","","","","","","","","","","","","","","",""],"d":["","A complex number in Cartesian form.","Real portion of the complex number","Imaginary portion of the complex number","","","","","","Floored integer division.","Floored integer modulo, satisfying:","Ceiled integer division.","Greatest Common Divisor (GCD).","Lowest Common Multiple (LCM).","Greatest Common Divisor (GCD) and Lowest Common Multiple …","Greatest common divisor and Bézout coefficients.","Greatest common divisor, least common multiple, and …","Deprecated, use <code>is_multiple_of</code> instead.","Returns <code>true</code> if <code>self</code> is a multiple of <code>other</code>.","Returns <code>true</code> if the number is even.","Returns <code>true</code> if the number is odd.","Simultaneous truncated integer division and modulus. …","Simultaneous floored integer division and modulus. …","Rounds up to nearest multiple of argument.","Rounds down to nearest multiple of argument.","Greatest common divisor and Bézout coefficients","","","","Simultaneous integer division and modulus","Floored integer division","Floored integer modulus","Simultaneous floored integer division and modulus","Ceiled integer division","Calculates the Greatest Common Divisor (GCD) of the …","Calculates the Lowest Common Multiple (LCM) of the number …","Calculates the Greatest Common Divisor (GCD) and Lowest …","An iterator over binomial coefficients.","Calculate the binomial coefficient.","Calculate the multinomial coefficient.","Provides methods to compute an integer’s square root, …","Returns the truncated principal <code>n</code>th root of an integer –…","Returns the truncated principal square root of an integer …","Returns the truncated principal cube root of an integer …","Returns the truncated principal cube root of an integer …","Returns the truncated principal <code>n</code>th root of an integer –…","Returns the truncated principal square root of an integer …","Provides methods to compute the average of two integers, …","Returns the ceiling value of the average of <code>self</code> and <code>other</code>…","Returns the floor value of the average of <code>self</code> and <code>other</code>. …","Returns the ceiling value of the average of <code>x</code> and <code>y</code> – …","Returns the floor value of the average of <code>x</code> and <code>y</code> – see …","","An iterator over the range [start, stop)","Returns an iterator over the given range [start, stop) …","An iterator over the range [start, stop]","Return an iterator over the range [start, stop]","An iterator over the range [start, stop) by <code>step</code>. It …","Return an iterator over the range [start, stop) by <code>step</code>. …","An iterator over the range [start, stop] by <code>step</code>. It …","Return an iterator over the range [start, stop] by <code>step</code>. …","An iterator over the infinite range starting at <code>start</code>","Return an iterator over the infinite range starting at …","An iterator over the infinite range starting at <code>start</code> by …","Return an iterator over the infinite range starting at …","","","Numbers which have upper and lower bounds","returns the smallest finite number this type can represent","returns the largest finite number this type can represent","","A generic trait for converting a value to a number.","Converts the value of <code>self</code> to an <code>isize</code>. If the value …","Converts the value of <code>self</code> to an <code>i8</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i16</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i32</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i64</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i128</code>. If the value …","Converts the value of <code>self</code> to a <code>usize</code>. If the value …","Converts the value of <code>self</code> to a <code>u8</code>. If the value cannot be…","Converts the value of <code>self</code> to a <code>u16</code>. If the value cannot …","Converts the value of <code>self</code> to a <code>u32</code>. If the value cannot …","Converts the value of <code>self</code> to a <code>u64</code>. If the value cannot …","Converts the value of <code>self</code> to a <code>u128</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>f32</code>. Overflows may map …","Converts the value of <code>self</code> to an <code>f64</code>. Overflows may map …","A generic trait for converting a number to a value.","Converts an <code>isize</code> to return an optional value of this …","Converts an <code>i8</code> to return an optional value of this type. …","Converts an <code>i16</code> to return an optional value of this type. …","Converts an <code>i32</code> to return an optional value of this type. …","Converts an <code>i64</code> to return an optional value of this type. …","Converts an <code>i128</code> to return an optional value of this …","Converts a <code>usize</code> to return an optional value of this …","Converts an <code>u8</code> to return an optional value of this type. …","Converts an <code>u16</code> to return an optional value of this type. …","Converts an <code>u32</code> to return an optional value of this type. …","Converts an <code>u64</code> to return an optional value of this type. …","Converts an <code>u128</code> to return an optional value of this …","Converts a <code>f32</code> to return an optional value of this type. …","Converts a <code>f64</code> to return an optional value of this type. …","Cast from one machine scalar to another.","An interface for casting between machine scalars.","Creates a number from another value that can be converted …","A generic interface for casting between machine scalars …","Convert a value to another, using the <code>as</code> operator.","","Generic trait for floating point numbers that works with …","Returns positive infinity.","Returns negative infinity.","Returns NaN.","Returns <code>-0.0</code>.","Returns the smallest finite value that this type can …","Returns the smallest positive, normalized value that this …","Returns epsilon, a small positive value.","Returns the largest finite value that this type can …","Returns <code>true</code> if the number is NaN.","Returns <code>true</code> if the number is infinite.","Returns <code>true</code> if the number is neither infinite or NaN.","Returns <code>true</code> if the number is neither zero, infinite, …","Returns the floating point category of the number. If …","Returns the largest integer less than or equal to a …","Returns the smallest integer greater than or equal to a …","Returns the nearest integer to a number. Round half-way …","Return the integer part of a number.","Returns the fractional part of a number.","Computes the absolute value of <code>self</code>. Returns …","Returns a number that represents the sign of <code>self</code>.","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code> and …","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code> and …","Returns the minimum of the two numbers.","Returns the maximum of the two numbers.","Returns the reciprocal (multiplicative inverse) of the …","Raise a number to an integer power.","Converts to degrees, assuming the number is in radians.","Converts to radians, assuming the number is in degrees.","Returns the mantissa, base 2 exponent, and sign as …","","Return Euler’s number.","Return <code>1.0 / π</code>.","Return <code>1.0 / sqrt(2.0)</code>.","Return <code>2.0 / π</code>.","Return <code>2.0 / sqrt(π)</code>.","Return <code>π / 2.0</code>.","Return <code>π / 3.0</code>.","Return <code>π / 4.0</code>.","Return <code>π / 6.0</code>.","Return <code>π / 8.0</code>.","Return <code>ln(10.0)</code>.","Return <code>ln(2.0)</code>.","Return <code>log10(e)</code>.","Return <code>log2(e)</code>.","Return Archimedes’ constant <code>π</code>.","Return <code>sqrt(2.0)</code>.","Return the full circle constant <code>τ</code>.","Return <code>log10(2.0)</code>.","Return <code>log2(10.0)</code>.","","Defines an additive identity element for <code>Self</code>.","Returns the additive identity element of <code>Self</code>, <code>0</code>.","Sets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.","Returns <code>true</code> if <code>self</code> is equal to the additive identity.","Defines a multiplicative identity element for <code>Self</code>.","Returns the multiplicative identity element of <code>Self</code>, <code>1</code>.","Sets <code>self</code> to the multiplicative identity element of <code>Self</code>, …","Returns <code>true</code> if <code>self</code> is equal to the multiplicative …","Returns the additive identity, <code>0</code>.","Returns the multiplicative identity, <code>1</code>.","","Generic trait for primitive integers.","Returns the number of ones in the binary representation …","Returns the number of zeros in the binary representation …","Returns the number of leading zeros in the binary …","Returns the number of trailing zeros in the binary …","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","Reverses the byte order of the integer.","Convert an integer from big endian to the target’s …","Convert an integer from little endian to the target’s …","Convert <code>self</code> to big endian from the target’s endianness.","Convert <code>self</code> to little endian from the target’s …","Raises self to the power of <code>exp</code>, using exponentiation by …","","","Performs addition that returns <code>None</code> instead of wrapping …","Adds two numbers, checking for overflow. If overflow …","Performs subtraction that returns <code>None</code> instead of …","Subtracts two numbers, checking for underflow. If …","Performs multiplication that returns <code>None</code> instead of …","Multiplies two numbers, checking for underflow or …","Performs division that returns <code>None</code> instead of panicking …","Divides two numbers, checking for underflow, overflow and …","Performs an integral remainder that returns <code>None</code> instead …","Finds the remainder of dividing two numbers, checking for …","Performs negation that returns <code>None</code> if the result can’t …","Negates a number, returning <code>None</code> for results that can’t …","Performs a left shift that returns <code>None</code> on shifts larger …","Checked shift left. Computes <code>self << rhs</code>, returning <code>None</code> …","Performs a right shift that returns <code>None</code> on shifts larger …","Checked shift right. Computes <code>self >> rhs</code>, returning <code>None</code> …","","Unary operator for retrieving the multiplicative inverse, …","The result after applying the operator.","Returns the multiplicative inverse of <code>self</code>.","","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …","The resulting type after applying the fused multiply-add.","Performs the fused multiply-add operation.","The fused multiply-add assignment operation.","Performs the fused multiply-add operation.","","Performs addition with a flag for overflow.","Returns a tuple of the sum along with a boolean …","Performs substraction with a flag for overflow.","Returns a tuple of the difference along with a boolean …","Performs multiplication with a flag for overflow.","Returns a tuple of the product along with a boolean …","","Saturating math operations. Deprecated, use <code>SaturatingAdd</code>…","Saturating addition operator. Returns a+b, saturating at …","Saturating subtraction operator. Returns a-b, saturating …","Performs addition that saturates at the numeric bounds …","Saturating addition. Computes <code>self + other</code>, saturating at …","Performs subtraction that saturates at the numeric bounds …","Saturating subtraction. Computes <code>self - other</code>, saturating …","Performs multiplication that saturates at the numeric …","Saturating multiplication. Computes <code>self * other</code>, …","","Performs addition that wraps around on overflow.","Wrapping (modular) addition. Computes <code>self + other</code>, …","Performs subtraction that wraps around on overflow.","Wrapping (modular) subtraction. Computes <code>self - other</code>, …","Performs multiplication that wraps around on overflow.","Wrapping (modular) multiplication. Computes <code>self * other</code>, …","Performs a negation that does not panic.","Wrapping (modular) negation. Computes <code>-self</code>, wrapping …","Performs a left shift that does not panic.","Panic-free bitwise shift-left; yields <code>self << mask(rhs)</code>, …","Performs a right shift that does not panic.","Panic-free bitwise shift-right; yields <code>self >> mask(rhs)</code>, …","","Binary operator for raising a value to a power.","The result after applying the operator.","Returns <code>self</code> to the power <code>rhs</code>.","Raises a value to the power of exp, using exponentiation …","Raises a value to the power of exp, returning <code>None</code> if an …","","Useful functions for signed numbers (i.e. numbers that …","Computes the absolute value.","The positive difference of two numbers.","Returns the sign of the number.","Returns true if the number is positive and false if the …","Returns true if the number is negative and false if the …","Computes the absolute value.","The positive difference of two numbers.","Returns the sign of the number.","A trait for values which cannot be negative","The base trait for numeric types, covering <code>0</code> and <code>1</code> values,…","","Convert from a string and radix (typically <code>2..=36</code>).","The trait for types implementing basic numeric operations","The trait for <code>Num</code> types which also implement numeric …","The trait for references which implement numeric …","The trait for types implementing numeric assignment …","The trait for <code>Num</code> types which also implement assignment …","The trait for <code>NumAssign</code> types which also implement …","","","","","","A value bounded by a minimum and a maximum","A value bounded by a minimum value","A value bounded by a maximum value","Numbers which have upper and lower bounds","returns the smallest finite number this type can represent","returns the largest finite number this type can represent","","Return Euler’s number.","Return <code>1.0 / π</code>.","Return <code>1.0 / sqrt(2.0)</code>.","Return <code>2.0 / π</code>.","Return <code>2.0 / sqrt(π)</code>.","Return <code>π / 2.0</code>.","Return <code>π / 3.0</code>.","Return <code>π / 4.0</code>.","Return <code>π / 6.0</code>.","Return <code>π / 8.0</code>.","Return <code>ln(10.0)</code>.","Return <code>ln(2.0)</code>.","Return <code>log10(e)</code>.","Return <code>log2(e)</code>.","Return Archimedes’ constant <code>π</code>.","Return <code>sqrt(2.0)</code>.","Return the full circle constant <code>τ</code>.","Return <code>log10(2.0)</code>.","Return <code>log2(10.0)</code>.","Cast from one machine scalar to another.","A generic interface for casting between machine scalars …","Convert a value to another, using the <code>as</code> operator.","A generic trait for converting a number to a value.","Converts an <code>isize</code> to return an optional value of this …","Converts an <code>i8</code> to return an optional value of this type. …","Converts an <code>i16</code> to return an optional value of this type. …","Converts an <code>i32</code> to return an optional value of this type. …","Converts an <code>i64</code> to return an optional value of this type. …","Converts an <code>i128</code> to return an optional value of this …","Converts a <code>usize</code> to return an optional value of this …","Converts an <code>u8</code> to return an optional value of this type. …","Converts an <code>u16</code> to return an optional value of this type. …","Converts an <code>u32</code> to return an optional value of this type. …","Converts an <code>u64</code> to return an optional value of this type. …","Converts an <code>u128</code> to return an optional value of this …","Converts a <code>f32</code> to return an optional value of this type. …","Converts a <code>f64</code> to return an optional value of this type. …","An interface for casting between machine scalars.","Creates a number from another value that can be converted …","A generic trait for converting a value to a number.","Converts the value of <code>self</code> to an <code>isize</code>. If the value …","Converts the value of <code>self</code> to an <code>i8</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i16</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i32</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i64</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i128</code>. If the value …","Converts the value of <code>self</code> to a <code>usize</code>. If the value …","Converts the value of <code>self</code> to a <code>u8</code>. If the value cannot be…","Converts the value of <code>self</code> to a <code>u16</code>. If the value cannot …","Converts the value of <code>self</code> to a <code>u32</code>. If the value cannot …","Converts the value of <code>self</code> to a <code>u64</code>. If the value cannot …","Converts the value of <code>self</code> to a <code>u128</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>f32</code>. Overflows may map …","Converts the value of <code>self</code> to an <code>f64</code>. Overflows may map …","Returns the multiplicative identity, <code>1</code>.","Returns the additive identity, <code>0</code>.","Defines a multiplicative identity element for <code>Self</code>.","Returns the multiplicative identity element of <code>Self</code>, <code>1</code>.","Sets <code>self</code> to the multiplicative identity element of <code>Self</code>, …","Returns <code>true</code> if <code>self</code> is equal to the multiplicative …","Defines an additive identity element for <code>Self</code>.","Returns the additive identity element of <code>Self</code>, <code>0</code>.","Sets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.","Returns <code>true</code> if <code>self</code> is equal to the additive identity.","Generic trait for primitive integers.","Returns the number of ones in the binary representation …","Returns the number of zeros in the binary representation …","Returns the number of leading zeros in the binary …","Returns the number of trailing zeros in the binary …","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","Reverses the byte order of the integer.","Convert an integer from big endian to the target’s …","Convert an integer from little endian to the target’s …","Convert <code>self</code> to big endian from the target’s endianness.","Convert <code>self</code> to little endian from the target’s …","Raises self to the power of <code>exp</code>, using exponentiation by …","Performs addition that returns <code>None</code> instead of wrapping …","Adds two numbers, checking for overflow. If overflow …","Performs division that returns <code>None</code> instead of panicking …","Divides two numbers, checking for underflow, overflow and …","Performs multiplication that returns <code>None</code> instead of …","Multiplies two numbers, checking for underflow or …","Performs negation that returns <code>None</code> if the result can’t …","Negates a number, returning <code>None</code> for results that can’t …","Performs an integral remainder that returns <code>None</code> instead …","Finds the remainder of dividing two numbers, checking for …","Performs a left shift that returns <code>None</code> on shifts larger …","Checked shift left. Computes <code>self << rhs</code>, returning <code>None</code> …","Performs a right shift that returns <code>None</code> on shifts larger …","Checked shift right. Computes <code>self >> rhs</code>, returning <code>None</code> …","Performs subtraction that returns <code>None</code> instead of …","Subtracts two numbers, checking for underflow. If …","Unary operator for retrieving the multiplicative inverse, …","The result after applying the operator.","Returns the multiplicative inverse of <code>self</code>.","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …","The resulting type after applying the fused multiply-add.","Performs the fused multiply-add operation.","The fused multiply-add assignment operation.","Performs the fused multiply-add operation.","Saturating math operations. Deprecated, use <code>SaturatingAdd</code>…","Saturating addition operator. Returns a+b, saturating at …","Saturating subtraction operator. Returns a-b, saturating …","Performs addition that saturates at the numeric bounds …","Saturating addition. Computes <code>self + other</code>, saturating at …","Performs multiplication that saturates at the numeric …","Saturating multiplication. Computes <code>self * other</code>, …","Performs subtraction that saturates at the numeric bounds …","Saturating subtraction. Computes <code>self - other</code>, saturating …","Performs addition that wraps around on overflow.","Wrapping (modular) addition. Computes <code>self + other</code>, …","Performs multiplication that wraps around on overflow.","Wrapping (modular) multiplication. Computes <code>self * other</code>, …","Performs a negation that does not panic.","Wrapping (modular) negation. Computes <code>-self</code>, wrapping …","Performs a left shift that does not panic.","Panic-free bitwise shift-left; yields <code>self << mask(rhs)</code>, …","Performs a right shift that does not panic.","Panic-free bitwise shift-right; yields <code>self >> mask(rhs)</code>, …","Performs subtraction that wraps around on overflow.","Wrapping (modular) subtraction. Computes <code>self - other</code>, …","Raises a value to the power of exp, returning <code>None</code> if an …","Raises a value to the power of exp, using exponentiation …","Binary operator for raising a value to a power.","The result after applying the operator.","Returns <code>self</code> to the power <code>rhs</code>.","Computes the absolute value.","The positive difference of two numbers.","Returns the sign of the number.","Useful functions for signed numbers (i.e. numbers that …","Computes the absolute value.","The positive difference of two numbers.","Returns the sign of the number.","Returns true if the number is positive and false if the …","Returns true if the number is negative and false if the …","A trait for values which cannot be negative","","Represents the ratio between two numbers.","Alias for a <code>Ratio</code> of machine-sized integers.","Alias for a <code>Ratio</code> of 32-bit-sized integers.","Alias for a <code>Ratio</code> of 64-bit-sized integers.","","A complex number in Cartesian form.","Real portion of the complex number","Imaginary portion of the complex number","Alias for a <code>Ratio</code> of machine-sized integers.","Alias for a <code>Ratio</code> of 32-bit-sized integers.","Alias for a <code>Ratio</code> of 64-bit-sized integers.","","Floored integer division.","Floored integer modulo, satisfying:","Ceiled integer division.","Greatest Common Divisor (GCD).","Lowest Common Multiple (LCM).","Greatest Common Divisor (GCD) and Lowest Common Multiple …","Greatest common divisor and Bézout coefficients.","Greatest common divisor, least common multiple, and …","Deprecated, use <code>is_multiple_of</code> instead.","Returns <code>true</code> if <code>self</code> is a multiple of <code>other</code>.","Returns <code>true</code> if the number is even.","Returns <code>true</code> if the number is odd.","Simultaneous truncated integer division and modulus. …","Simultaneous floored integer division and modulus. …","Rounds up to nearest multiple of argument.","Rounds down to nearest multiple of argument.","Returns an iterator over the given range [start, stop) …","Return an iterator over the range [start, stop]","Return an iterator over the range [start, stop) by <code>step</code>. …","Return an iterator over the range [start, stop] by <code>step</code>. …","Computes the absolute value.","The positive difference of two numbers.","","A generic trait for converting a value to a number.","Converts the value of <code>self</code> to an <code>isize</code>. If the value …","Converts the value of <code>self</code> to an <code>i8</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i16</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i32</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i64</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i128</code>. If the value …","Converts the value of <code>self</code> to a <code>usize</code>. If the value …","Converts the value of <code>self</code> to a <code>u8</code>. If the value cannot be…","Converts the value of <code>self</code> to a <code>u16</code>. If the value cannot …","Converts the value of <code>self</code> to a <code>u32</code>. If the value cannot …","Converts the value of <code>self</code> to a <code>u64</code>. If the value cannot …","Converts the value of <code>self</code> to a <code>u128</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>f32</code>. Overflows may map …","Converts the value of <code>self</code> to an <code>f64</code>. Overflows may map …","A generic trait for converting a number to a value.","Converts an <code>isize</code> to return an optional value of this …","Converts an <code>i8</code> to return an optional value of this type. …","Converts an <code>i16</code> to return an optional value of this type. …","Converts an <code>i32</code> to return an optional value of this type. …","Converts an <code>i64</code> to return an optional value of this type. …","Converts an <code>i128</code> to return an optional value of this …","Converts a <code>usize</code> to return an optional value of this …","Converts an <code>u8</code> to return an optional value of this type. …","Converts an <code>u16</code> to return an optional value of this type. …","Converts an <code>u32</code> to return an optional value of this type. …","Converts an <code>u64</code> to return an optional value of this type. …","Converts an <code>u128</code> to return an optional value of this …","Converts a <code>f32</code> to return an optional value of this type. …","Converts a <code>f64</code> to return an optional value of this type. …","Cast from one machine scalar to another.","An interface for casting between machine scalars.","Creates a number from another value that can be converted …","A generic interface for casting between machine scalars …","Convert a value to another, using the <code>as</code> operator.","Cast from one machine scalar to another.","Raises a value to the power of exp, returning <code>None</code> if an …","A value bounded by a minimum and a maximum","Returns the multiplicative identity, <code>1</code>.","","Binary operator for raising a value to a power.","The result after applying the operator.","Returns <code>self</code> to the power <code>rhs</code>.","Raises a value to the power of exp, using exponentiation …","Raises a value to the power of exp, returning <code>None</code> if an …","Raises a value to the power of exp, using exponentiation …","Returns the sign of the number.","Returns the additive identity, <code>0</code>.","Numbers which have upper and lower bounds","returns the smallest finite number this type can represent","returns the largest finite number this type can represent","Performs addition that returns <code>None</code> instead of wrapping …","Adds two numbers, checking for overflow. If overflow …","Performs division that returns <code>None</code> instead of panicking …","Divides two numbers, checking for underflow, overflow and …","Performs multiplication that returns <code>None</code> instead of …","Multiplies two numbers, checking for underflow or …","Performs subtraction that returns <code>None</code> instead of …","Subtracts two numbers, checking for underflow. If …","A generic trait for converting a number to a value.","Converts an <code>isize</code> to return an optional value of this …","Converts an <code>i8</code> to return an optional value of this type. …","Converts an <code>i16</code> to return an optional value of this type. …","Converts an <code>i32</code> to return an optional value of this type. …","Converts an <code>i64</code> to return an optional value of this type. …","Converts an <code>i128</code> to return an optional value of this …","Converts a <code>usize</code> to return an optional value of this …","Converts an <code>u8</code> to return an optional value of this type. …","Converts an <code>u16</code> to return an optional value of this type. …","Converts an <code>u32</code> to return an optional value of this type. …","Converts an <code>u64</code> to return an optional value of this type. …","Converts an <code>u128</code> to return an optional value of this …","Converts a <code>f32</code> to return an optional value of this type. …","Converts a <code>f64</code> to return an optional value of this type. …","The base trait for numeric types, covering <code>0</code> and <code>1</code> values,…","","Convert from a string and radix (typically <code>2..=36</code>).","An interface for casting between machine scalars.","Creates a number from another value that can be converted …","Defines a multiplicative identity element for <code>Self</code>.","Returns the multiplicative identity element of <code>Self</code>, <code>1</code>.","Sets <code>self</code> to the multiplicative identity element of <code>Self</code>, …","Returns <code>true</code> if <code>self</code> is equal to the multiplicative …","Generic trait for primitive integers.","Returns the number of ones in the binary representation …","Returns the number of zeros in the binary representation …","Returns the number of leading zeros in the binary …","Returns the number of trailing zeros in the binary …","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","Reverses the byte order of the integer.","Convert an integer from big endian to the target’s …","Convert an integer from little endian to the target’s …","Convert <code>self</code> to big endian from the target’s endianness.","Convert <code>self</code> to little endian from the target’s …","Raises self to the power of <code>exp</code>, using exponentiation by …","Saturating math operations. Deprecated, use <code>SaturatingAdd</code>…","Saturating addition operator. Returns a+b, saturating at …","Saturating subtraction operator. Returns a-b, saturating …","Useful functions for signed numbers (i.e. numbers that …","Computes the absolute value.","The positive difference of two numbers.","Returns the sign of the number.","Returns true if the number is positive and false if the …","Returns true if the number is negative and false if the …","A generic trait for converting a value to a number.","Converts the value of <code>self</code> to an <code>isize</code>. If the value …","Converts the value of <code>self</code> to an <code>i8</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i16</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i32</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i64</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i128</code>. If the value …","Converts the value of <code>self</code> to a <code>usize</code>. If the value …","Converts the value of <code>self</code> to a <code>u8</code>. If the value cannot be…","Converts the value of <code>self</code> to a <code>u16</code>. If the value cannot …","Converts the value of <code>self</code> to a <code>u32</code>. If the value cannot …","Converts the value of <code>self</code> to a <code>u64</code>. If the value cannot …","Converts the value of <code>self</code> to a <code>u128</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>f32</code>. Overflows may map …","Converts the value of <code>self</code> to an <code>f64</code>. Overflows may map …","A trait for values which cannot be negative","Defines an additive identity element for <code>Self</code>.","Returns the additive identity element of <code>Self</code>, <code>0</code>.","Sets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.","Returns <code>true</code> if <code>self</code> is equal to the additive identity.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Parses <code>a +/- bi</code>; <code>ai +/- b</code>; <code>a</code>; or <code>bi</code> where <code>a</code> and <code>b</code> are of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Parses <code>a +/- bi</code>; <code>ai +/- b</code>; <code>a</code>; or <code>bi</code> where <code>a</code> and <code>b</code> are of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Parses <code>numer/denom</code> or just <code>numer</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Parses <code>numer/denom</code> where the numbers are in base <code>radix</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a new Complex","Returns imaginary unit","Returns the square of the norm (since <code>T</code> doesn’t …","Multiplies <code>self</code> by the scalar <code>t</code>.","Divides <code>self</code> by the scalar <code>t</code>.","Raises <code>self</code> to an unsigned integer power.","Returns the complex conjugate. i.e. <code>re - i im</code>","Returns <code>1/self</code>","Raises <code>self</code> to a signed integer power.","Returns the L1 norm <code>|re| + |im|</code> – the Manhattan distance…","Checks if the given complex number is NaN","Checks if the given complex number is infinite","Checks if the given complex number is finite","Checks if the given complex number is normal","For a given n, iterate over all binomial coefficients …","Creates a <code>Ratio</code> without checking for <code>denom == 0</code> or …","Gets an immutable reference to the numerator.","Gets an immutable reference to the denominator.","Creates a new <code>Ratio</code>.","Creates a <code>Ratio</code> representing the integer <code>t</code>.","Converts to an integer, rounding towards zero.","Returns true if the rational number is an integer …","Returns a reduced copy of self.","Returns the reciprocal.","Rounds towards minus infinity.","Rounds towards plus infinity.","Rounds to the nearest integer. Rounds half-way cases away …","Rounds towards zero.","Returns the fractional part of a number, with division …","Raises the <code>Ratio</code> to the power of an exponent.",""],"i":[0,0,1,1,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,4,4,4,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,0,0,7,7,7,7,7,7,7,7,7,7,7,7,7,7,0,8,8,8,8,8,8,8,8,8,8,8,8,8,8,0,0,9,0,10,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,0,13,13,13,0,14,14,14,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,16,0,17,0,18,0,19,0,20,0,21,0,22,0,23,0,0,24,24,0,0,25,25,0,26,0,0,27,0,28,0,29,0,0,30,30,0,31,0,32,0,33,0,0,34,0,35,0,36,0,37,0,38,0,39,0,0,40,40,0,0,0,0,41,41,41,41,41,0,0,0,0,0,42,42,0,0,0,0,0,0,0,43,43,0,44,0,0,0,0,6,6,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,0,10,0,8,8,8,8,8,8,8,8,8,8,8,8,8,8,0,9,0,7,7,7,7,7,7,7,7,7,7,7,7,7,7,0,0,0,14,14,14,0,13,13,13,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,16,0,19,0,18,0,21,0,20,0,22,0,23,0,17,0,24,24,0,25,25,0,26,0,30,30,0,31,0,33,0,32,0,34,0,36,0,37,0,38,0,39,0,35,0,0,0,40,40,0,0,0,0,41,41,41,41,41,0,0,0,0,0,0,0,0,1,1,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0,7,7,7,7,7,7,7,7,7,7,7,7,7,7,0,8,8,8,8,8,8,8,8,8,8,8,8,8,8,0,0,9,0,10,0,0,0,0,0,0,40,40,0,0,0,0,0,0,6,6,0,16,0,19,0,18,0,17,0,8,8,8,8,8,8,8,8,8,8,8,8,8,8,0,42,42,0,9,0,14,14,14,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,30,30,0,41,41,41,41,41,0,7,7,7,7,7,7,7,7,7,7,7,7,7,7,0,0,13,13,13,1,1,1,1,1,1,1,45,45,45,45,45,45,45,3,3,3,3,3,3,3,46,46,46,46,46,46,46,46,47,47,47,47,47,47,47,47,48,48,48,48,48,48,48,48,49,49,49,49,49,49,49,49,50,50,50,50,50,50,50,50,51,51,51,51,51,51,51,51,52,52,52,52,52,52,52,52,43,43,43,43,43,43,43,44,44,44,44,44,44,44,53,53,53,53,53,53,53,54,54,54,54,54,54,54,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,45,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,45,45,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,45,1,1,44,43,44,53,53,53,53,53,53,53,53,54,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,54,53,53,53,53,53,53,53,53,53,53,53,53,54,54,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,54,53,3,3,46,3,3,48,47,48,48,52,52,51,51,49,47,47,50,48,49,50,47,52,51,1,1,1,1,1,1,1,1,1,1,1,1,1,1,46,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53],"f":[null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["extendedgcd",3]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[]],[[]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[]],null,[[["u32",15]]],[[]],[[]],[[]],[[["u32",15]]],[[]],null,[[]],[[]],[[]],[[]],null,null,[[],["range",3]],null,[[],["rangeinclusive",3]],null,[[],["rangestep",3]],null,[[],["rangestepinclusive",3]],null,[[],["rangefrom",3]],null,[[],["rangestepfrom",3]],null,null,null,[[]],[[]],null,null,[[],[["option",4],["isize",15]]],[[],[["option",4],["i8",15]]],[[],[["i16",15],["option",4]]],[[],[["option",4],["i32",15]]],[[],[["i64",15],["option",4]]],[[],[["option",4],["i128",15]]],[[],[["option",4],["usize",15]]],[[],[["option",4],["u8",15]]],[[],[["option",4],["u16",15]]],[[],[["u32",15],["option",4]]],[[],[["option",4],["u64",15]]],[[],[["u128",15],["option",4]]],[[],[["f32",15],["option",4]]],[[],[["f64",15],["option",4]]],null,[[["isize",15]],["option",4]],[[["i8",15]],["option",4]],[[["i16",15]],["option",4]],[[["i32",15]],["option",4]],[[["i64",15]],["option",4]],[[["i128",15]],["option",4]],[[["usize",15]],["option",4]],[[["u8",15]],["option",4]],[[["u16",15]],["option",4]],[[["u32",15]],["option",4]],[[["u64",15]],["option",4]],[[["u128",15]],["option",4]],[[["f32",15]],["option",4]],[[["f64",15]],["option",4]],[[],["option",4]],null,[[],["option",4]],null,[[]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["fpcategory",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[]],[[["i32",15]]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[]],[[]],[[],["bool",15]],null,[[]],[[]],[[],["bool",15]],[[]],[[]],null,null,[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[]],[[]],[[]],[[]],[[]],[[["u32",15]]],null,null,null,[[],["option",4]],null,[[],["option",4]],null,[[],["option",4]],null,[[],["option",4]],null,[[],["option",4]],null,[[],["option",4]],null,[[["u32",15]],["option",4]],null,[[["u32",15]],["option",4]],null,null,null,[[]],null,null,null,[[]],null,[[]],null,null,[[]],null,[[]],null,[[]],null,null,[[]],[[]],null,[[]],null,[[]],null,[[]],null,null,[[]],null,[[]],null,[[]],null,[[]],null,[[["u32",15]]],null,[[["u32",15]]],null,null,null,[[]],[[["usize",15]]],[[["usize",15]],["option",4]],null,null,[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[]],null,null,null,[[["u32",15],["str",15]],["result",4]],null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],null,[[]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["option",4]],null,[[]],null,[[["isize",15]],["option",4]],[[["i8",15]],["option",4]],[[["i16",15]],["option",4]],[[["i32",15]],["option",4]],[[["i64",15]],["option",4]],[[["i128",15]],["option",4]],[[["usize",15]],["option",4]],[[["u8",15]],["option",4]],[[["u16",15]],["option",4]],[[["u32",15]],["option",4]],[[["u64",15]],["option",4]],[[["u128",15]],["option",4]],[[["f32",15]],["option",4]],[[["f64",15]],["option",4]],null,[[],["option",4]],null,[[],[["option",4],["isize",15]]],[[],[["option",4],["i8",15]]],[[],[["i16",15],["option",4]]],[[],[["option",4],["i32",15]]],[[],[["i64",15],["option",4]]],[[],[["option",4],["i128",15]]],[[],[["option",4],["usize",15]]],[[],[["option",4],["u8",15]]],[[],[["option",4],["u16",15]]],[[],[["u32",15],["option",4]]],[[],[["option",4],["u64",15]]],[[],[["u128",15],["option",4]]],[[],[["f32",15],["option",4]]],[[],[["f64",15],["option",4]]],[[]],[[]],null,[[]],[[]],[[],["bool",15]],null,[[]],[[]],[[],["bool",15]],null,[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[]],[[]],[[]],[[]],[[]],[[["u32",15]]],null,[[],["option",4]],null,[[],["option",4]],null,[[],["option",4]],null,[[],["option",4]],null,[[],["option",4]],null,[[["u32",15]],["option",4]],null,[[["u32",15]],["option",4]],null,[[],["option",4]],null,null,[[]],null,null,[[]],null,[[]],null,[[]],[[]],null,[[]],null,[[]],null,[[]],null,[[]],null,[[]],null,[[]],null,[[["u32",15]]],null,[[["u32",15]]],null,[[]],[[["usize",15]],["option",4]],[[["usize",15]]],null,null,[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["extendedgcd",3]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["range",3]],[[],["rangeinclusive",3]],[[],["rangestep",3]],[[],["rangestepinclusive",3]],[[]],[[]],null,null,[[],[["option",4],["isize",15]]],[[],[["option",4],["i8",15]]],[[],[["i16",15],["option",4]]],[[],[["option",4],["i32",15]]],[[],[["i64",15],["option",4]]],[[],[["option",4],["i128",15]]],[[],[["option",4],["usize",15]]],[[],[["option",4],["u8",15]]],[[],[["option",4],["u16",15]]],[[],[["u32",15],["option",4]]],[[],[["option",4],["u64",15]]],[[],[["u128",15],["option",4]]],[[],[["f32",15],["option",4]]],[[],[["f64",15],["option",4]]],null,[[["isize",15]],["option",4]],[[["i8",15]],["option",4]],[[["i16",15]],["option",4]],[[["i32",15]],["option",4]],[[["i64",15]],["option",4]],[[["i128",15]],["option",4]],[[["usize",15]],["option",4]],[[["u8",15]],["option",4]],[[["u16",15]],["option",4]],[[["u32",15]],["option",4]],[[["u64",15]],["option",4]],[[["u128",15]],["option",4]],[[["f32",15]],["option",4]],[[["f64",15]],["option",4]],[[],["option",4]],null,[[],["option",4]],null,[[]],[[],["option",4]],[[["usize",15]],["option",4]],[[]],[[]],null,null,null,[[]],[[["usize",15]]],[[["usize",15]],["option",4]],[[["usize",15]]],[[]],[[]],null,[[]],[[]],null,[[],["option",4]],null,[[],["option",4]],null,[[],["option",4]],null,[[],["option",4]],null,[[["isize",15]],["option",4]],[[["i8",15]],["option",4]],[[["i16",15]],["option",4]],[[["i32",15]],["option",4]],[[["i64",15]],["option",4]],[[["i128",15]],["option",4]],[[["usize",15]],["option",4]],[[["u8",15]],["option",4]],[[["u16",15]],["option",4]],[[["u32",15]],["option",4]],[[["u64",15]],["option",4]],[[["u128",15]],["option",4]],[[["f32",15]],["option",4]],[[["f64",15]],["option",4]],null,null,[[["u32",15],["str",15]],["result",4]],null,[[],["option",4]],null,[[]],[[]],[[],["bool",15]],null,[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[]],[[]],[[]],[[]],[[]],[[["u32",15]]],null,[[]],[[]],null,[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],null,[[],[["option",4],["isize",15]]],[[],[["option",4],["i8",15]]],[[],[["i16",15],["option",4]]],[[],[["option",4],["i32",15]]],[[],[["i64",15],["option",4]]],[[],[["option",4],["i128",15]]],[[],[["option",4],["usize",15]]],[[],[["option",4],["u8",15]]],[[],[["option",4],["u16",15]]],[[],[["u32",15],["option",4]]],[[],[["option",4],["u64",15]]],[[],[["u128",15],["option",4]]],[[],[["f32",15],["option",4]]],[[],[["f64",15],["option",4]]],null,null,[[]],[[]],[[],["bool",15]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[["usize",15]],[["option",4],["complex",3]]],[[["isize",15]],[["option",4],["complex",3]]],[[["u8",15]],[["option",4],["complex",3]]],[[["u16",15]],[["option",4],["complex",3]]],[[["u32",15]],[["option",4],["complex",3]]],[[["u64",15]],[["option",4],["complex",3]]],[[["i8",15]],[["option",4],["complex",3]]],[[["i16",15]],[["option",4],["complex",3]]],[[["i32",15]],[["option",4],["complex",3]]],[[["i64",15]],[["option",4],["complex",3]]],[[["u128",15]],[["option",4],["complex",3]]],[[["i128",15]],[["option",4],["complex",3]]],[[["f32",15]],[["option",4],["complex",3]]],[[["f64",15]],[["option",4],["complex",3]]],[[]],[[]],[[["complex",3]]],[[["complex",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[],["complex",3]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[]],[[["complex",3]]],[[["complex",3]]],[[]],[[]],[[]],[[["formatter",3]],[["result",4],["error",3]]],[[["complex",3]]],[[["complex",3]]],[[]],[[]],[[],["complex",3]],[[],["complex",3]],[[],["complex",3]],[[],["complex",3]],[[["complex",3]]],[[]],[[["complex",3]]],[[]],[[],["complex",3]],[[["str",15]],[["result",4],["complex",3]]],[[],["complex",3]],[[],["bool",15]],[[]],[[["complex",3]]],[[["complex",3]]],[[]],[[]],[[["complex",3]]],[[]],[[["complex",3]]],[[]],[[["complex",3]],["bool",15]],[[["complex",3]],["bool",15]],[[["parsecomplexerror",3]],["bool",15]],[[["parsecomplexerror",3]],["bool",15]],[[["formatter",3]],[["result",4],["error",3]]],[[],[["option",4],["complex",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[]],[[]],[[["complex",3]]],[[["complex",3]]],[[["complex",3]]],[[]],[[["complex",3]]],[[]],[[["complex",3]],["complex",3]],[[]],[[["complex",3]]],[[["complex",3]]],[[]],[[],["complex",3]],[[],["complex",3]],[[["complex",3]]],[[]],[[]],[[["complex",3]]],[[]],[[],[["option",4],["usize",15]]],[[],[["option",4],["isize",15]]],[[],[["option",4],["u8",15]]],[[],[["option",4],["u16",15]]],[[],[["u32",15],["option",4]]],[[],[["option",4],["u64",15]]],[[],[["option",4],["i8",15]]],[[],[["i16",15],["option",4]]],[[],[["option",4],["i32",15]]],[[],[["i64",15],["option",4]]],[[],[["u128",15],["option",4]]],[[],[["option",4],["i128",15]]],[[],[["f32",15],["option",4]]],[[],[["f64",15],["option",4]]],[[["u32",15],["str",15]],[["result",4],["complex",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[]],[[],["complex",3]],[[],["bool",15]],[[]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["complex",3]]],[[["complex",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["ratio",3]],["ordering",4]],[[],["ratio",3]],[[],["ratio",3]],[[["ratio",3]],["ratio",3]],[[["ratio",3]],["ratio",3]],[[["ratio",3]],[["ordering",4],["option",4]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[]],[[]],[[["ratio",3]]],[[["ratio",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[]],[[],["ratio",3]],[[],[["i64",15],["option",4]]],[[],[["option",4],["i128",15]]],[[],[["option",4],["u64",15]]],[[],[["u128",15],["option",4]]],[[],[["f64",15],["option",4]]],[[],[["i64",15],["option",4]]],[[],[["option",4],["i128",15]]],[[],[["option",4],["u64",15]]],[[],[["u128",15],["option",4]]],[[],[["f64",15],["option",4]]],[[],[["i64",15],["option",4]]],[[],[["option",4],["i128",15]]],[[],[["option",4],["u64",15]]],[[],[["u128",15],["option",4]]],[[],[["f64",15],["option",4]]],[[],[["i64",15],["option",4]]],[[],[["option",4],["i128",15]]],[[],[["option",4],["u64",15]]],[[],[["u128",15],["option",4]]],[[],[["f64",15],["option",4]]],[[],[["i64",15],["option",4]]],[[],[["option",4],["i128",15]]],[[],[["option",4],["u64",15]]],[[],[["u128",15],["option",4]]],[[],[["f64",15],["option",4]]],[[],[["i64",15],["option",4]]],[[],[["option",4],["i128",15]]],[[],[["option",4],["u64",15]]],[[],[["u128",15],["option",4]]],[[],[["f64",15],["option",4]]],[[],[["i64",15],["option",4]]],[[],[["option",4],["i128",15]]],[[],[["option",4],["u64",15]]],[[],[["u128",15],["option",4]]],[[],[["f64",15],["option",4]]],[[],[["i64",15],["option",4]]],[[],[["option",4],["i128",15]]],[[],[["option",4],["u64",15]]],[[],[["u128",15],["option",4]]],[[],[["f64",15],["option",4]]],[[],[["i64",15],["option",4]]],[[],[["option",4],["i128",15]]],[[],[["option",4],["u64",15]]],[[],[["u128",15],["option",4]]],[[],[["f64",15],["option",4]]],[[],[["i64",15],["option",4]]],[[],[["option",4],["i128",15]]],[[],[["option",4],["u64",15]]],[[],[["u128",15],["option",4]]],[[],[["f64",15],["option",4]]],[[["ratio",3]]],[[["ratio",3]]],[[]],[[]],[[],["ratio",3]],[[],["ratio",3]],[[],["ratio",3]],[[],["ratio",3]],[[["ratio",3]],["ratio",3]],[[["ratio",3]],["ratio",3]],[[],["ratio",3]],[[],["ratio",3]],[[],["ratio",3]],[[],["parseratioerror",3]],[[],["ratio",3]],[[],["bool",15]],[[]],[[["str",15]],[["result",4],["ratio",3],["parseratioerror",3]]],[[["ratio",3]],["ratio",3]],[[],["ratio",3]],[[],["ratio",3]],[[["ratio",3]],["ratio",3]],[[["ratio",3]]],[[]],[[]],[[["ratio",3]]],[[["parseratioerror",3]],["bool",15]],[[["parseratioerror",3]],["bool",15]],[[["ratio",3]],["bool",15]],[[["formatter",3]],[["result",4],["error",3]]],[[["i8",15]],["ratio",3]],[[["u128",15]],["ratio",3]],[[["i8",15]],["ratio",3]],[[["i64",15]],["ratio",3]],[[["usize",15]],["ratio",3]],[[["i128",15]],["ratio",3]],[[["u16",15]],["ratio",3]],[[["i32",15]],["ratio",3]],[[["u128",15]],["ratio",3]],[[["i64",15]],["ratio",3]],[[["u32",15]],["ratio",3]],[[["u64",15]],["ratio",3]],[[["u64",15]],["ratio",3]],[[["u32",15]],["ratio",3]],[[["i32",15]],["ratio",3]],[[["isize",15]],["ratio",3]],[[["isize",15]],["ratio",3]],[[["u8",15]],["ratio",3]],[[["u8",15]],["ratio",3]],[[["i16",15]],["ratio",3]],[[["usize",15]],["ratio",3]],[[["i128",15]],["ratio",3]],[[["u16",15]],["ratio",3]],[[["i16",15]],["ratio",3]],[[["formatter",3]],[["result",4],["error",3]]],[[]],[[["ratio",3]]],[[]],[[["ratio",3]]],[[],["ratio",3]],[[["ratio",3]],["ratio",3]],[[],["ratio",3]],[[["ratio",3]],["ratio",3]],[[["i64",15]],[["option",4],["ratio",3]]],[[["i128",15]],[["option",4],["ratio",3]]],[[["u64",15]],[["option",4],["ratio",3]]],[[["u128",15]],[["option",4],["ratio",3]]],[[["f32",15]],[["option",4],["ratio",3]]],[[["f64",15]],[["option",4],["ratio",3]]],[[["i64",15]],[["option",4],["ratio",3]]],[[["i128",15]],[["option",4],["ratio",3]]],[[["u64",15]],[["option",4],["ratio",3]]],[[["u128",15]],[["option",4],["ratio",3]]],[[["f32",15]],[["option",4],["ratio",3]]],[[["f64",15]],[["option",4],["ratio",3]]],[[["i64",15]],[["ratio",3],["option",4]]],[[["i128",15]],[["ratio",3],["option",4]]],[[["u64",15]],[["ratio",3],["option",4]]],[[["u128",15]],[["ratio",3],["option",4]]],[[["f32",15]],[["ratio",3],["option",4]]],[[["f64",15]],[["ratio",3],["option",4]]],[[["i64",15]],[["option",4],["ratio",3]]],[[["i128",15]],[["option",4],["ratio",3]]],[[["u64",15]],[["option",4],["ratio",3]]],[[["u128",15]],[["option",4],["ratio",3]]],[[["f32",15]],[["option",4],["ratio",3]]],[[["f64",15]],[["option",4],["ratio",3]]],[[["i64",15]],[["option",4],["ratio",3]]],[[["i128",15]],[["option",4],["ratio",3]]],[[["u64",15]],[["option",4],["ratio",3]]],[[["u128",15]],[["option",4],["ratio",3]]],[[["f32",15]],[["option",4],["ratio",3]]],[[["f64",15]],[["option",4],["ratio",3]]],[[["i64",15]],[["option",4],["ratio",3]]],[[["i128",15]],[["option",4],["ratio",3]]],[[["u64",15]],[["option",4],["ratio",3]]],[[["u128",15]],[["option",4],["ratio",3]]],[[["f32",15]],[["option",4],["ratio",3]]],[[["f64",15]],[["option",4],["ratio",3]]],[[["i64",15]],[["option",4],["ratio",3]]],[[["i128",15]],[["option",4],["ratio",3]]],[[["u64",15]],[["option",4],["ratio",3]]],[[["u128",15]],[["option",4],["ratio",3]]],[[["f32",15]],[["option",4],["ratio",3]]],[[["f64",15]],[["option",4],["ratio",3]]],[[["i64",15]],[["ratio",3],["option",4]]],[[["i128",15]],[["ratio",3],["option",4]]],[[["u64",15]],[["ratio",3],["option",4]]],[[["u128",15]],[["ratio",3],["option",4]]],[[["f32",15]],[["ratio",3],["option",4]]],[[["f64",15]],[["ratio",3],["option",4]]],[[["i64",15]],[["option",4],["ratio",3]]],[[["i128",15]],[["option",4],["ratio",3]]],[[["u64",15]],[["option",4],["ratio",3]]],[[["u128",15]],[["option",4],["ratio",3]]],[[["f32",15]],[["option",4],["ratio",3]]],[[["f64",15]],[["option",4],["ratio",3]]],[[["i64",15]],[["option",4],["ratio",3]]],[[["i128",15]],[["option",4],["ratio",3]]],[[["u64",15]],[["option",4],["ratio",3]]],[[["u128",15]],[["option",4],["ratio",3]]],[[["f32",15]],[["option",4],["ratio",3]]],[[["f64",15]],[["option",4],["ratio",3]]],[[["i64",15]],[["option",4],["ratio",3]]],[[["i128",15]],[["option",4],["ratio",3]]],[[["u64",15]],[["option",4],["ratio",3]]],[[["u128",15]],[["option",4],["ratio",3]]],[[["f32",15]],[["option",4],["ratio",3]]],[[["f64",15]],[["option",4],["ratio",3]]],[[["i64",15]],[["ratio",3],["option",4]]],[[["i128",15]],[["ratio",3],["option",4]]],[[["u64",15]],[["ratio",3],["option",4]]],[[["u128",15]],[["ratio",3],["option",4]]],[[["f32",15]],[["ratio",3],["option",4]]],[[["f64",15]],[["ratio",3],["option",4]]],[[]],[[]],[[["ratio",3]]],[[["ratio",3]]],[[]],[[["ratio",3]],[["option",4],["ratio",3]]],[[],["ratio",3]],[[],["ratio",3]],[[],["ratio",3]],[[["ratio",3]],["ratio",3]],[[["ratio",3]],["ratio",3]],[[],["ratio",3]],[[["ratio",3]],[["option",4],["ratio",3]]],[[["u32",15],["str",15]],[["result",4],["ratio",3],["parseratioerror",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["ratio",3]],[["option",4],["ratio",3]]],[[],["ratio",3]],[[],["bool",15]],[[]],[[["ratio",3]],[["option",4],["ratio",3]]],[[],["ratio",3]],[[["ratio",3]],["ratio",3]],[[],["ratio",3]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[],["ratio",3]],[[["extendedgcd",3]],["bool",15]],[[["extendedgcd",3]],["bool",15]],[[],["option",4]],[[],["extendedgcd",3]],[[["formatter",3]],[["result",4],["error",3]]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[]],[[],["option",4]],[[]],[[],["option",4]],[[]],[[],["option",4]],[[],["option",4]],[[]],[[],["option",4]],[[],["rangeinclusive",3]],[[],["rangestep",3]],[[],["rangestepinclusive",3]],[[],["range",3]],[[],["rangestepfrom",3]],[[],["rangefrom",3]],[[],["complex",3]],[[],["complex",3]],[[]],[[],["complex",3]],[[],["complex",3]],[[["u32",15]],["complex",3]],[[],["complex",3]],[[],["complex",3]],[[["i32",15]],["complex",3]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["iterbinomial",3]],[[],["ratio",3]],[[]],[[]],[[],["ratio",3]],[[],["ratio",3]],[[]],[[],["bool",15]],[[],["ratio",3]],[[],["ratio",3]],[[],["ratio",3]],[[],["ratio",3]],[[],["ratio",3]],[[],["ratio",3]],[[],["ratio",3]],[[["i32",15]],["ratio",3]],[[],[["option",4],["ratio",3]]]],"p":[[3,"Complex"],[8,"Integer"],[3,"ExtendedGcd"],[8,"Roots"],[8,"Average"],[8,"Bounded"],[8,"ToPrimitive"],[8,"FromPrimitive"],[8,"NumCast"],[8,"AsPrimitive"],[8,"FloatCore"],[8,"FloatConst"],[8,"Zero"],[8,"One"],[8,"PrimInt"],[8,"CheckedAdd"],[8,"CheckedSub"],[8,"CheckedMul"],[8,"CheckedDiv"],[8,"CheckedRem"],[8,"CheckedNeg"],[8,"CheckedShl"],[8,"CheckedShr"],[8,"Inv"],[8,"MulAdd"],[8,"MulAddAssign"],[8,"OverflowingAdd"],[8,"OverflowingSub"],[8,"OverflowingMul"],[8,"Saturating"],[8,"SaturatingAdd"],[8,"SaturatingSub"],[8,"SaturatingMul"],[8,"WrappingAdd"],[8,"WrappingSub"],[8,"WrappingMul"],[8,"WrappingNeg"],[8,"WrappingShl"],[8,"WrappingShr"],[8,"Pow"],[8,"Signed"],[8,"Num"],[4,"FloatErrorKind"],[3,"ParseFloatError"],[3,"ParseComplexError"],[3,"IterBinomial"],[3,"Range"],[3,"RangeInclusive"],[3,"RangeStep"],[3,"RangeStepInclusive"],[3,"RangeFrom"],[3,"RangeStepFrom"],[3,"Ratio"],[3,"ParseRatioError"]]},\
"num_complex":{"doc":"Complex numbers.","t":[3,12,12,6,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Complex","re","im","Complex32","Complex64","new","i","norm_sqr","scale","unscale","powu","conj","inv","powi","l1_norm","is_nan","is_infinite","is_finite","is_normal","ParseComplexError","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","fmt","fmt","fmt","fmt","fmt","fmt","div","div","div","div","rem","rem","rem","rem","sub","sub","sub","sub","eq","ne","eq","ne","from_str","add","add","add","add","mul","mul","mul","mul","neg","add_assign","add_assign","add_assign","add_assign","sub_assign","sub_assign","sub_assign","sub_assign","mul_assign","mul_assign","mul_assign","mul_assign","div_assign","div_assign","div_assign","div_assign","rem_assign","rem_assign","rem_assign","rem_assign","hash","sum","sum","product","product","fmt","fmt","fmt","fmt","from","from","clone","default","to_usize","to_isize","to_u8","to_u16","to_u32","to_u64","to_i8","to_i16","to_i32","to_i64","to_u128","to_i128","to_f32","to_f64","from_usize","from_isize","from_u8","from_u16","from_u32","from_u64","from_i8","from_i16","from_i32","from_i64","from_u128","from_i128","from_f32","from_f64","from","as_","from_str_radix","zero","is_zero","set_zero","one","is_one","set_one","inv","mul_add","mul_add_assign","mul_add_assign"],"q":["num_complex","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A complex number in Cartesian form.","Real portion of the complex number","Imaginary portion of the complex number","","","Create a new Complex","Returns imaginary unit","Returns the square of the norm (since <code>T</code> doesn’t …","Multiplies <code>self</code> by the scalar <code>t</code>.","Divides <code>self</code> by the scalar <code>t</code>.","Raises <code>self</code> to an unsigned integer power.","Returns the complex conjugate. i.e. <code>re - i im</code>","Returns <code>1/self</code>","Raises <code>self</code> to a signed integer power.","Returns the L1 norm <code>|re| + |im|</code> – the Manhattan distance…","Checks if the given complex number is NaN","Checks if the given complex number is infinite","Checks if the given complex number is finite","Checks if the given complex number is normal","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Parses <code>a +/- bi</code>; <code>ai +/- b</code>; <code>a</code>; or <code>bi</code> where <code>a</code> and <code>b</code> are of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Parses <code>a +/- bi</code>; <code>ai +/- b</code>; <code>a</code>; or <code>bi</code> where <code>a</code> and <code>b</code> are of …","","","","","","","","","",""],"i":[0,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,2,2,2,2,2,2,2,1,2,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[["u32",15]]],[[]],[[]],[[["i32",15]]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["complex",3]]],[[]],[[]],[[]],[[["complex",3]]],[[]],[[]],[[]],[[["complex",3]]],[[]],[[]],[[]],[[["complex",3]],["bool",15]],[[["complex",3]],["bool",15]],[[["parsecomplexerror",3]],["bool",15]],[[["parsecomplexerror",3]],["bool",15]],[[["str",15]],["result",4]],[[["complex",3]]],[[]],[[]],[[]],[[["complex",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["complex",3]],[[],["complex",3]],[[],[["usize",15],["option",4]]],[[],[["isize",15],["option",4]]],[[],[["option",4],["u8",15]]],[[],[["u16",15],["option",4]]],[[],[["u32",15],["option",4]]],[[],[["option",4],["u64",15]]],[[],[["i8",15],["option",4]]],[[],[["i16",15],["option",4]]],[[],[["option",4],["i32",15]]],[[],[["i64",15],["option",4]]],[[],[["option",4],["u128",15]]],[[],[["option",4],["i128",15]]],[[],[["option",4],["f32",15]]],[[],[["f64",15],["option",4]]],[[["usize",15]],["option",4]],[[["isize",15]],["option",4]],[[["u8",15]],["option",4]],[[["u16",15]],["option",4]],[[["u32",15]],["option",4]],[[["u64",15]],["option",4]],[[["i8",15]],["option",4]],[[["i16",15]],["option",4]],[[["i32",15]],["option",4]],[[["i64",15]],["option",4]],[[["u128",15]],["option",4]],[[["i128",15]],["option",4]],[[["f32",15]],["option",4]],[[["f64",15]],["option",4]],[[["toprimitive",8]],["option",4]],[[]],[[["u32",15],["str",15]],["result",4]],[[]],[[],["bool",15]],[[]],[[]],[[],["bool",15]],[[]],[[]],[[["complex",3]],["complex",3]],[[["complex",3]]],[[["complex",3]]]],"p":[[3,"Complex"],[3,"ParseComplexError"]]},\
"num_integer":{"doc":"Integer trait and functions.","t":[8,10,11,11,5,5,5,8,10,10,5,5,8,10,10,11,10,10,11,11,11,10,10,10,10,10,11,11,11,3,12,12,12,5,5,5,5,5,5,5,5,3,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Roots","nth_root","sqrt","cbrt","cbrt","nth_root","sqrt","Average","average_ceil","average_floor","average_ceil","average_floor","Integer","div_floor","mod_floor","div_ceil","gcd","lcm","gcd_lcm","extended_gcd","extended_gcd_lcm","divides","is_multiple_of","is_even","is_odd","div_rem","div_mod_floor","next_multiple_of","prev_multiple_of","ExtendedGcd","gcd","x","y","div_rem","div_floor","mod_floor","div_mod_floor","div_ceil","gcd","lcm","gcd_lcm","IterBinomial","new","binomial","multinomial","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","into_iter","borrow","borrow_mut","from","into","try_into","type_id","fmt","eq","ne","next","clone","sqrt","cbrt"],"q":["num_integer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Provides methods to compute an integer’s square root, …","Returns the truncated principal <code>n</code>th root of an integer –…","Returns the truncated principal square root of an integer …","Returns the truncated principal cube root of an integer …","Returns the truncated principal cube root of an integer …","Returns the truncated principal <code>n</code>th root of an integer –…","Returns the truncated principal square root of an integer …","Provides methods to compute the average of two integers, …","Returns the ceiling value of the average of <code>self</code> and <code>other</code>…","Returns the floor value of the average of <code>self</code> and <code>other</code>. …","Returns the ceiling value of the average of <code>x</code> and <code>y</code> – …","Returns the floor value of the average of <code>x</code> and <code>y</code> – see …","","Floored integer division.","Floored integer modulo, satisfying:","Ceiled integer division.","Greatest Common Divisor (GCD).","Lowest Common Multiple (LCM).","Greatest Common Divisor (GCD) and Lowest Common Multiple …","Greatest common divisor and Bézout coefficients.","Greatest common divisor, least common multiple, and …","Deprecated, use <code>is_multiple_of</code> instead.","Returns <code>true</code> if <code>self</code> is a multiple of <code>other</code>.","Returns <code>true</code> if the number is even.","Returns <code>true</code> if the number is odd.","Simultaneous truncated integer division and modulus. …","Simultaneous floored integer division and modulus. …","Rounds up to nearest multiple of argument.","Rounds down to nearest multiple of argument.","Greatest common divisor and Bézout coefficients","","","","Simultaneous integer division and modulus","Floored integer division","Floored integer modulus","Simultaneous floored integer division and modulus","Ceiled integer division","Calculates the Greatest Common Divisor (GCD) of the …","Calculates the Lowest Common Multiple (LCM) of the number …","Calculates the Greatest Common Divisor (GCD) and Lowest …","An iterator over binomial coefficients.","For a given n, iterate over all binomial coefficients …","Calculate the binomial coefficient.","Calculate the multinomial coefficient.","","","","","","","","","","","","","","","","","","","","","Returns the truncated principal square root of an integer …","Returns the truncated principal cube root of an integer …"],"i":[0,1,1,1,0,0,0,0,2,2,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,4,4,4,0,0,0,0,0,0,0,0,0,5,0,0,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,4,4,4,5,4,1,1],"f":[null,[[["u32",15]]],[[]],[[]],[[["roots",8]],["roots",8]],[[["u32",15],["roots",8]],["roots",8]],[[["roots",8]],["roots",8]],null,[[]],[[]],[[["average",8]],["average",8]],[[["average",8]],["average",8]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["extendedgcd",3]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[]],[[]],null,null,null,null,[[["integer",8]]],[[["integer",8]],["integer",8]],[[["integer",8]],["integer",8]],[[["integer",8]]],[[["integer",8]],["integer",8]],[[["integer",8]],["integer",8]],[[["integer",8]],["integer",8]],[[["integer",8]]],null,[[],["iterbinomial",3]],[[["integer",8],["clone",8]],[["integer",8],["clone",8]]],[[],[["integer",8],["clone",8]]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[["formatter",3]],["result",6]],[[["extendedgcd",3]],["bool",15]],[[["extendedgcd",3]],["bool",15]],[[],["option",4]],[[],["extendedgcd",3]],[[]],[[]]],"p":[[8,"Roots"],[8,"Average"],[8,"Integer"],[3,"ExtendedGcd"],[3,"IterBinomial"]]},\
"num_iter":{"doc":"External iterators for generic mathematics","t":[3,5,3,5,3,5,3,5,3,5,3,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Range","range","RangeInclusive","range_inclusive","RangeStep","range_step","RangeStepInclusive","range_step_inclusive","RangeFrom","range_from","RangeStepFrom","range_step_from","try_from","into_iter","borrow","borrow_mut","from","into","try_into","type_id","try_from","into_iter","borrow","borrow_mut","from","into","try_into","type_id","try_from","into_iter","borrow","borrow_mut","from","into","try_into","type_id","try_from","into_iter","borrow","borrow_mut","from","into","try_into","type_id","try_from","into_iter","borrow","borrow_mut","from","into","try_into","type_id","try_from","into_iter","borrow","borrow_mut","from","into","try_into","type_id","next_back","next_back","next","size_hint","next","size_hint","next","next","next","size_hint","next","size_hint","clone","clone","clone","clone","clone","clone"],"q":["num_iter","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["An iterator over the range [start, stop)","Returns an iterator over the given range [start, stop) …","An iterator over the range [start, stop]","Return an iterator over the range [start, stop]","An iterator over the range [start, stop) by <code>step</code>. It …","Return an iterator over the range [start, stop) by <code>step</code>. …","An iterator over the range [start, stop] by <code>step</code>. It …","Return an iterator over the range [start, stop] by <code>step</code>. …","An iterator over the infinite range starting at <code>start</code>","Return an iterator over the infinite range starting at …","An iterator over the infinite range starting at <code>start</code> by …","Return an iterator over the infinite range starting at …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,1,2,1,1,2,2,3,4,5,5,6,6,1,2,3,4,5,6],"f":[null,[[],["range",3]],null,[[],["rangeinclusive",3]],null,[[],["rangestep",3]],null,[[],["rangestepinclusive",3]],null,[[],["rangefrom",3]],null,[[],["rangestepfrom",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[]],[[],["option",4]],[[]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[]],[[],["option",4]],[[]],[[],["range",3]],[[],["rangeinclusive",3]],[[],["rangestep",3]],[[],["rangestepinclusive",3]],[[],["rangefrom",3]],[[],["rangestepfrom",3]]],"p":[[3,"Range"],[3,"RangeInclusive"],[3,"RangeStep"],[3,"RangeStepInclusive"],[3,"RangeFrom"],[3,"RangeStepFrom"]]},\
"num_rational":{"doc":"Rational numbers","tn":["Ratio","Rational","Rational32","Rational64","new_raw","numer","denom","new","from_integer","to_integer","is_integer","reduced","recip","floor","ceil","round","trunc","fract","pow","ParseRatioError","approximate_float","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","fmt","fmt","fmt","fmt","fmt","fmt","div","div","div","div","rem","rem","rem","rem","sub","sub","sub","sub","eq","eq","ne","cmp","partial_cmp","from_str","add","add","add","add","mul","mul","mul","mul","neg","add_assign","add_assign","add_assign","add_assign","sub_assign","sub_assign","sub_assign","sub_assign","mul_assign","mul_assign","mul_assign","mul_assign","div_assign","div_assign","div_assign","div_assign","rem_assign","rem_assign","rem_assign","rem_assign","hash","sum","sum","product","product","fmt","fmt","fmt","fmt","from","from","into","clone","clone","to_i64","to_i128","to_u64","to_u128","to_f64","to_i64","to_i128","to_u64","to_u128","to_f64","to_i64","to_i128","to_u64","to_u128","to_f64","to_i64","to_i128","to_u64","to_u128","to_f64","to_i64","to_i128","to_u64","to_u128","to_f64","to_i64","to_i128","to_u64","to_u128","to_f64","to_i64","to_i128","to_u64","to_u128","to_f64","to_i64","to_i128","to_u64","to_u128","to_f64","to_i64","to_i128","to_u64","to_u128","to_f64","to_i64","to_i128","to_u64","to_u128","to_f64","from_i64","from_i128","from_u64","from_u128","from_f32","from_f64","from_i64","from_i128","from_u64","from_u128","from_f32","from_f64","from_i64","from_i128","from_u64","from_u128","from_f32","from_f64","from_i64","from_i128","from_u64","from_u128","from_f32","from_f64","from_i64","from_i128","from_u64","from_u128","from_f32","from_f64","from_i64","from_i128","from_u64","from_u128","from_f32","from_f64","from_i64","from_i128","from_u64","from_u128","from_f32","from_f64","from_i64","from_i128","from_u64","from_u128","from_f32","from_f64","from_i64","from_i128","from_u64","from_u128","from_f32","from_f64","from_i64","from_i128","from_u64","from_u128","from_f32","from_f64","from_i64","from_i128","from_u64","from_u128","from_f32","from_f64","from_i64","from_i128","from_u64","from_u128","from_f32","from_f64","from_str_radix","zero","is_zero","set_zero","one","is_one","set_one","checked_add","checked_sub","checked_mul","checked_div","inv","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","abs","abs_sub","signum","is_positive","is_negative"],"q":["num_rationald":["Represents the ratio between two numbers.","Alias for a <code>Ratio</code> of machine-sized integers.","Alias for a <code>Ratio</code> of 32-bit-sized integers.","Alias for a <code>Ratio</code> of 64-bit-sized integers.","Creates a <code>Ratio</code> without checking for <code>denom == 0</code> or …","Gets an immutable reference to the numerator.","Gets an immutable reference to the denominator.","Creates a new <code>Ratio</code>.","Creates a <code>Ratio</code> representing the integer <code>t</code>.","Converts to an integer, rounding towards zero.","Returns true if the rational number is an integer …","Returns a reduced copy of self.","Returns the reciprocal.","Rounds towards minus infinity.","Rounds towards plus infinity.","Rounds to the nearest integer. Rounds half-way cases away …","Rounds towards zero.","Returns the fractional part of a number, with division …","Raises the <code>Ratio</code> to the power of an exponent.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Parses <code>numer/denom</code> or just <code>numer</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Parses <code>numer/denom</code> where the numbers are in base <code>radix</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,1,2,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[null,null,null,null,[[],["ratio",3]],[[]],[[]],[[],["ratio",3]],[[],["ratio",3]],[[]],[[],["bool",15]],[[],["ratio",3]],[[],["ratio",3]],[[],["ratio",3]],[[],["ratio",3]],[[],["ratio",3]],[[],["ratio",3]],[[],["ratio",3]],[[["i32",15]],["ratio",3]],null,[[["floatcore",8],["numcast",8]],[["ratio",3],["option",4]]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["ratio",3]],["ratio",3]],[[],["ratio",3]],[[["ratio",3]],["ratio",3]],[[],["ratio",3]],[[["ratio",3]],["ratio",3]],[[],["ratio",3]],[[["ratio",3]],["ratio",3]],[[],["ratio",3]],[[["ratio",3]],["ratio",3]],[[],["ratio",3]],[[["ratio",3]],["ratio",3]],[[],["ratio",3]],[[],["bool",15]],[[["parseratioerror",3]],["bool",15]],[[["parseratioerror",3]],["bool",15]],[[],["ordering",4]],[[],[["ordering",4],["option",4]]],[[["str",15]],[["ratio",3],["result",4],["parseratioerror",3]]],[[["ratio",3]],["ratio",3]],[[],["ratio",3]],[[["ratio",3]],["ratio",3]],[[],["ratio",3]],[[["ratio",3]],["ratio",3]],[[],["ratio",3]],[[["ratio",3]],["ratio",3]],[[],["ratio",3]],[[],["ratio",3]],[[["ratio",3]]],[[]],[[["ratio",3]]],[[]],[[["ratio",3]]],[[]],[[["ratio",3]]],[[]],[[["ratio",3]]],[[]],[[["ratio",3]]],[[]],[[["ratio",3]]],[[]],[[["ratio",3]]],[[]],[[["ratio",3]]],[[]],[[["ratio",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[],["ratio",3]],[[],["ratio",3]],[[]],[[],["ratio",3]],[[],["parseratioerror",3]],[[],[["i64",15],["option",4]]],[[],[["option",4],["i128",15]]],[[],[["option",4],["u64",15]]],[[],[["option",4],["u128",15]]],[[],[["f64",15],["option",4]]],[[],[["i64",15],["option",4]]],[[],[["option",4],["i128",15]]],[[],[["option",4],["u64",15]]],[[],[["option",4],["u128",15]]],[[],[["f64",15],["option",4]]],[[],[["i64",15],["option",4]]],[[],[["option",4],["i128",15]]],[[],[["option",4],["u64",15]]],[[],[["option",4],["u128",15]]],[[],[["f64",15],["option",4]]],[[],[["i64",15],["option",4]]],[[],[["option",4],["i128",15]]],[[],[["option",4],["u64",15]]],[[],[["option",4],["u128",15]]],[[],[["f64",15],["option",4]]],[[],[["i64",15],["option",4]]],[[],[["option",4],["i128",15]]],[[],[["option",4],["u64",15]]],[[],[["option",4],["u128",15]]],[[],[["f64",15],["option",4]]],[[],[["i64",15],["option",4]]],[[],[["option",4],["i128",15]]],[[],[["option",4],["u64",15]]],[[],[["option",4],["u128",15]]],[[],[["f64",15],["option",4]]],[[],[["i64",15],["option",4]]],[[],[["option",4],["i128",15]]],[[],[["option",4],["u64",15]]],[[],[["option",4],["u128",15]]],[[],[["f64",15],["option",4]]],[[],[["i64",15],["option",4]]],[[],[["option",4],["i128",15]]],[[],[["option",4],["u64",15]]],[[],[["option",4],["u128",15]]],[[],[["f64",15],["option",4]]],[[],[["i64",15],["option",4]]],[[],[["option",4],["i128",15]]],[[],[["option",4],["u64",15]]],[[],[["option",4],["u128",15]]],[[],[["f64",15],["option",4]]],[[],[["i64",15],["option",4]]],[[],[["option",4],["i128",15]]],[[],[["option",4],["u64",15]]],[[],[["option",4],["u128",15]]],[[],[["f64",15],["option",4]]],[[["i64",15]],["option",4]],[[["i128",15]],["option",4]],[[["u64",15]],["option",4]],[[["u128",15]],["option",4]],[[["f32",15]],["option",4]],[[["f64",15]],["option",4]],[[["i64",15]],["option",4]],[[["i128",15]],["option",4]],[[["u64",15]],["option",4]],[[["u128",15]],["option",4]],[[["f32",15]],["option",4]],[[["f64",15]],["option",4]],[[["i64",15]],["option",4]],[[["i128",15]],["option",4]],[[["u64",15]],["option",4]],[[["u128",15]],["option",4]],[[["f32",15]],["option",4]],[[["f64",15]],["option",4]],[[["i64",15]],["option",4]],[[["i128",15]],["option",4]],[[["u64",15]],["option",4]],[[["u128",15]],["option",4]],[[["f32",15]],["option",4]],[[["f64",15]],["option",4]],[[["i64",15]],["option",4]],[[["i128",15]],["option",4]],[[["u64",15]],["option",4]],[[["u128",15]],["option",4]],[[["f32",15]],["option",4]],[[["f64",15]],["option",4]],[[["i64",15]],["option",4]],[[["i128",15]],["option",4]],[[["u64",15]],["option",4]],[[["u128",15]],["option",4]],[[["f32",15]],["option",4]],[[["f64",15]],["option",4]],[[["i64",15]],["option",4]],[[["i128",15]],["option",4]],[[["u64",15]],["option",4]],[[["u128",15]],["option",4]],[[["f32",15]],["option",4]],[[["f64",15]],["option",4]],[[["i64",15]],["option",4]],[[["i128",15]],["option",4]],[[["u64",15]],["option",4]],[[["u128",15]],["option",4]],[[["f32",15]],["option",4]],[[["f64",15]],["option",4]],[[["i64",15]],["option",4]],[[["i128",15]],["option",4]],[[["u64",15]],["option",4]],[[["u128",15]],["option",4]],[[["f32",15]],["option",4]],[[["f64",15]],["option",4]],[[["i64",15]],["option",4]],[[["i128",15]],["option",4]],[[["u64",15]],["option",4]],[[["u128",15]],["option",4]],[[["f32",15]],["option",4]],[[["f64",15]],["option",4]],[[["i64",15]],["option",4]],[[["i128",15]],["option",4]],[[["u64",15]],["option",4]],[[["u128",15]],["option",4]],[[["f32",15]],["option",4]],[[["f64",15]],["option",4]],[[["i64",15]],["option",4]],[[["i128",15]],["option",4]],[[["u64",15]],["option",4]],[[["u128",15]],["option",4]],[[["f32",15]],["option",4]],[[["f64",15]],["option",4]],[[["u32",15],["str",15]],[["ratio",3],["result",4],["parseratioerror",3]]],[[],["ratio",3]],[[],["bool",15]],[[]],[[],["ratio",3]],[[],["bool",15]],[[]],[[["ratio",3]],[["ratio",3],["option",4]]],[[["ratio",3]],[["ratio",3],["option",4]]],[[["ratio",3]],[["ratio",3],["option",4]]],[[["ratio",3]],[["ratio",3],["option",4]]],[[],["ratio",3]],[[["u8",15]],["ratio",3]],[[["u8",15]],["ratio",3]],[[["u16",15]],["ratio",3]],[[["u16",15]],["ratio",3]],[[["u32",15]],["ratio",3]],[[["u32",15]],["ratio",3]],[[["u64",15]],["ratio",3]],[[["u64",15]],["ratio",3]],[[["u128",15]],["ratio",3]],[[["u128",15]],["ratio",3]],[[["usize",15]],["ratio",3]],[[["usize",15]],["ratio",3]],[[["i8",15]],["ratio",3]],[[["i8",15]],["ratio",3]],[[["i16",15]],["ratio",3]],[[["i16",15]],["ratio",3]],[[["i32",15]],["ratio",3]],[[["i32",15]],["ratio",3]],[[["i64",15]],["ratio",3]],[[["i64",15]],["ratio",3]],[[["i128",15]],["ratio",3]],[[["i128",15]],["ratio",3]],[[["isize",15]],["ratio",3]],[[["isize",15]],["ratio",3]],[[],["ratio",3]],[[["ratio",3]],["ratio",3]],[[],["ratio",3]],[[],["bool",15]],[[],["bool",15]]],"p":[[3,"Ratio"],[3,"ParseRatioError"]]},\
"num_traits":{"doc":"Numeric traits for generic mathematics","t":[0,8,10,10,0,8,11,11,11,11,10,11,11,11,11,11,10,11,11,11,8,11,11,11,11,10,11,11,11,11,11,10,11,11,11,5,8,10,8,10,0,8,10,10,10,10,10,10,10,10,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,8,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,0,8,10,11,10,8,10,11,11,5,5,0,8,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0,0,8,10,8,10,8,10,8,10,8,10,8,10,8,10,8,10,0,8,16,10,0,8,16,10,8,10,0,8,10,8,10,8,10,0,8,10,10,8,10,8,10,8,10,0,8,10,8,10,8,10,8,10,8,10,8,10,0,8,16,10,5,5,0,8,10,10,10,10,10,5,5,5,8,8,16,10,8,8,8,8,8,8,4,13,13,3,12,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["bounds","Bounded","min_value","max_value","cast","ToPrimitive","to_isize","to_i8","to_i16","to_i32","to_i64","to_i128","to_usize","to_u8","to_u16","to_u32","to_u64","to_u128","to_f32","to_f64","FromPrimitive","from_isize","from_i8","from_i16","from_i32","from_i64","from_i128","from_usize","from_u8","from_u16","from_u32","from_u64","from_u128","from_f32","from_f64","cast","NumCast","from","AsPrimitive","as_","float","FloatCore","infinity","neg_infinity","nan","neg_zero","min_value","min_positive_value","epsilon","max_value","is_nan","is_infinite","is_finite","is_normal","classify","floor","ceil","round","trunc","fract","abs","signum","is_sign_positive","is_sign_negative","min","max","recip","powi","to_degrees","to_radians","integer_decode","FloatConst","E","FRAC_1_PI","FRAC_1_SQRT_2","FRAC_2_PI","FRAC_2_SQRT_PI","FRAC_PI_2","FRAC_PI_3","FRAC_PI_4","FRAC_PI_6","FRAC_PI_8","LN_10","LN_2","LOG10_E","LOG2_E","PI","SQRT_2","TAU","LOG10_2","LOG2_10","identities","Zero","zero","set_zero","is_zero","One","one","set_one","is_one","zero","one","int","PrimInt","count_ones","count_zeros","leading_zeros","trailing_zeros","rotate_left","rotate_right","signed_shl","signed_shr","unsigned_shl","unsigned_shr","swap_bytes","from_be","from_le","to_be","to_le","pow","ops","checked","CheckedAdd","checked_add","CheckedSub","checked_sub","CheckedMul","checked_mul","CheckedDiv","checked_div","CheckedRem","checked_rem","CheckedNeg","checked_neg","CheckedShl","checked_shl","CheckedShr","checked_shr","inv","Inv","Output","inv","mul_add","MulAdd","Output","mul_add","MulAddAssign","mul_add_assign","overflowing","OverflowingAdd","overflowing_add","OverflowingSub","overflowing_sub","OverflowingMul","overflowing_mul","saturating","Saturating","saturating_add","saturating_sub","SaturatingAdd","saturating_add","SaturatingSub","saturating_sub","SaturatingMul","saturating_mul","wrapping","WrappingAdd","wrapping_add","WrappingSub","wrapping_sub","WrappingMul","wrapping_mul","WrappingNeg","wrapping_neg","WrappingShl","wrapping_shl","WrappingShr","wrapping_shr","pow","Pow","Output","pow","pow","checked_pow","sign","Signed","abs","abs_sub","signum","is_positive","is_negative","abs","abs_sub","signum","Unsigned","Num","FromStrRadixErr","from_str_radix","NumOps","NumRef","RefNum","NumAssignOps","NumAssign","NumAssignRef","FloatErrorKind","Empty","Invalid","ParseFloatError","kind","clamp","clamp_min","clamp_max","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","fmt","fmt","fmt"],"q":["num_traits","num_traits::bounds","","","num_traits","num_traits::cast","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","num_traits","num_traits::float","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","num_traits","num_traits::identities","","","","","","","","","","num_traits","num_traits::int","","","","","","","","","","","","","","","","","num_traits","num_traits::ops","num_traits::ops::checked","","","","","","","","","","","","","","","","num_traits::ops","num_traits::ops::inv","","","num_traits::ops","num_traits::ops::mul_add","","","","","num_traits::ops","num_traits::ops::overflowing","","","","","","num_traits::ops","num_traits::ops::saturating","","","","","","","","","num_traits::ops","num_traits::ops::wrapping","","","","","","","","","","","","num_traits","num_traits::pow","","","","","num_traits","num_traits::sign","","","","","","","","","","num_traits","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","Numbers which have upper and lower bounds","returns the smallest finite number this type can represent","returns the largest finite number this type can represent","","A generic trait for converting a value to a number.","Converts the value of <code>self</code> to an <code>isize</code>. If the value …","Converts the value of <code>self</code> to an <code>i8</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i16</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i32</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i64</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i128</code>. If the value …","Converts the value of <code>self</code> to a <code>usize</code>. If the value …","Converts the value of <code>self</code> to a <code>u8</code>. If the value cannot be…","Converts the value of <code>self</code> to a <code>u16</code>. If the value cannot …","Converts the value of <code>self</code> to a <code>u32</code>. If the value cannot …","Converts the value of <code>self</code> to a <code>u64</code>. If the value cannot …","Converts the value of <code>self</code> to a <code>u128</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>f32</code>. Overflows may map …","Converts the value of <code>self</code> to an <code>f64</code>. Overflows may map …","A generic trait for converting a number to a value.","Converts an <code>isize</code> to return an optional value of this …","Converts an <code>i8</code> to return an optional value of this type. …","Converts an <code>i16</code> to return an optional value of this type. …","Converts an <code>i32</code> to return an optional value of this type. …","Converts an <code>i64</code> to return an optional value of this type. …","Converts an <code>i128</code> to return an optional value of this …","Converts a <code>usize</code> to return an optional value of this …","Converts an <code>u8</code> to return an optional value of this type. …","Converts an <code>u16</code> to return an optional value of this type. …","Converts an <code>u32</code> to return an optional value of this type. …","Converts an <code>u64</code> to return an optional value of this type. …","Converts an <code>u128</code> to return an optional value of this …","Converts a <code>f32</code> to return an optional value of this type. …","Converts a <code>f64</code> to return an optional value of this type. …","Cast from one machine scalar to another.","An interface for casting between machine scalars.","Creates a number from another value that can be converted …","A generic interface for casting between machine scalars …","Convert a value to another, using the <code>as</code> operator.","","Generic trait for floating point numbers that works with …","Returns positive infinity.","Returns negative infinity.","Returns NaN.","Returns <code>-0.0</code>.","Returns the smallest finite value that this type can …","Returns the smallest positive, normalized value that this …","Returns epsilon, a small positive value.","Returns the largest finite value that this type can …","Returns <code>true</code> if the number is NaN.","Returns <code>true</code> if the number is infinite.","Returns <code>true</code> if the number is neither infinite or NaN.","Returns <code>true</code> if the number is neither zero, infinite, …","Returns the floating point category of the number. If …","Returns the largest integer less than or equal to a …","Returns the smallest integer greater than or equal to a …","Returns the nearest integer to a number. Round half-way …","Return the integer part of a number.","Returns the fractional part of a number.","Computes the absolute value of <code>self</code>. Returns …","Returns a number that represents the sign of <code>self</code>.","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code> and …","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code> and …","Returns the minimum of the two numbers.","Returns the maximum of the two numbers.","Returns the reciprocal (multiplicative inverse) of the …","Raise a number to an integer power.","Converts to degrees, assuming the number is in radians.","Converts to radians, assuming the number is in degrees.","Returns the mantissa, base 2 exponent, and sign as …","","Return Euler’s number.","Return <code>1.0 / π</code>.","Return <code>1.0 / sqrt(2.0)</code>.","Return <code>2.0 / π</code>.","Return <code>2.0 / sqrt(π)</code>.","Return <code>π / 2.0</code>.","Return <code>π / 3.0</code>.","Return <code>π / 4.0</code>.","Return <code>π / 6.0</code>.","Return <code>π / 8.0</code>.","Return <code>ln(10.0)</code>.","Return <code>ln(2.0)</code>.","Return <code>log10(e)</code>.","Return <code>log2(e)</code>.","Return Archimedes’ constant <code>π</code>.","Return <code>sqrt(2.0)</code>.","Return the full circle constant <code>τ</code>.","Return <code>log10(2.0)</code>.","Return <code>log2(10.0)</code>.","","Defines an additive identity element for <code>Self</code>.","Returns the additive identity element of <code>Self</code>, <code>0</code>.","Sets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.","Returns <code>true</code> if <code>self</code> is equal to the additive identity.","Defines a multiplicative identity element for <code>Self</code>.","Returns the multiplicative identity element of <code>Self</code>, <code>1</code>.","Sets <code>self</code> to the multiplicative identity element of <code>Self</code>, …","Returns <code>true</code> if <code>self</code> is equal to the multiplicative …","Returns the additive identity, <code>0</code>.","Returns the multiplicative identity, <code>1</code>.","","Generic trait for primitive integers.","Returns the number of ones in the binary representation …","Returns the number of zeros in the binary representation …","Returns the number of leading zeros in the binary …","Returns the number of trailing zeros in the binary …","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","Reverses the byte order of the integer.","Convert an integer from big endian to the target’s …","Convert an integer from little endian to the target’s …","Convert <code>self</code> to big endian from the target’s endianness.","Convert <code>self</code> to little endian from the target’s …","Raises self to the power of <code>exp</code>, using exponentiation by …","","","Performs addition that returns <code>None</code> instead of wrapping …","Adds two numbers, checking for overflow. If overflow …","Performs subtraction that returns <code>None</code> instead of …","Subtracts two numbers, checking for underflow. If …","Performs multiplication that returns <code>None</code> instead of …","Multiplies two numbers, checking for underflow or …","Performs division that returns <code>None</code> instead of panicking …","Divides two numbers, checking for underflow, overflow and …","Performs an integral remainder that returns <code>None</code> instead …","Finds the remainder of dividing two numbers, checking for …","Performs negation that returns <code>None</code> if the result can’t …","Negates a number, returning <code>None</code> for results that can’t …","Performs a left shift that returns <code>None</code> on shifts larger …","Checked shift left. Computes <code>self << rhs</code>, returning <code>None</code> …","Performs a right shift that returns <code>None</code> on shifts larger …","Checked shift right. Computes <code>self >> rhs</code>, returning <code>None</code> …","","Unary operator for retrieving the multiplicative inverse, …","The result after applying the operator.","Returns the multiplicative inverse of <code>self</code>.","","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …","The resulting type after applying the fused multiply-add.","Performs the fused multiply-add operation.","The fused multiply-add assignment operation.","Performs the fused multiply-add operation.","","Performs addition with a flag for overflow.","Returns a tuple of the sum along with a boolean …","Performs substraction with a flag for overflow.","Returns a tuple of the difference along with a boolean …","Performs multiplication with a flag for overflow.","Returns a tuple of the product along with a boolean …","","Saturating math operations. Deprecated, use <code>SaturatingAdd</code>…","Saturating addition operator. Returns a+b, saturating at …","Saturating subtraction operator. Returns a-b, saturating …","Performs addition that saturates at the numeric bounds …","Saturating addition. Computes <code>self + other</code>, saturating at …","Performs subtraction that saturates at the numeric bounds …","Saturating subtraction. Computes <code>self - other</code>, saturating …","Performs multiplication that saturates at the numeric …","Saturating multiplication. Computes <code>self * other</code>, …","","Performs addition that wraps around on overflow.","Wrapping (modular) addition. Computes <code>self + other</code>, …","Performs subtraction that wraps around on overflow.","Wrapping (modular) subtraction. Computes <code>self - other</code>, …","Performs multiplication that wraps around on overflow.","Wrapping (modular) multiplication. Computes <code>self * other</code>, …","Performs a negation that does not panic.","Wrapping (modular) negation. Computes <code>-self</code>, wrapping …","Performs a left shift that does not panic.","Panic-free bitwise shift-left; yields <code>self << mask(rhs)</code>, …","Performs a right shift that does not panic.","Panic-free bitwise shift-right; yields <code>self >> mask(rhs)</code>, …","","Binary operator for raising a value to a power.","The result after applying the operator.","Returns <code>self</code> to the power <code>rhs</code>.","Raises a value to the power of exp, using exponentiation …","Raises a value to the power of exp, returning <code>None</code> if an …","","Useful functions for signed numbers (i.e. numbers that …","Computes the absolute value.","The positive difference of two numbers.","Returns the sign of the number.","Returns true if the number is positive and false if the …","Returns true if the number is negative and false if the …","Computes the absolute value.","The positive difference of two numbers.","Returns the sign of the number.","A trait for values which cannot be negative","The base trait for numeric types, covering <code>0</code> and <code>1</code> values,…","","Convert from a string and radix (typically <code>2..=36</code>).","The trait for types implementing basic numeric operations","The trait for <code>Num</code> types which also implement numeric …","The trait for references which implement numeric …","The trait for types implementing numeric assignment …","The trait for <code>Num</code> types which also implement assignment …","The trait for <code>NumAssign</code> types which also implement …","","","","","","A value bounded by a minimum and a maximum","A value bounded by a minimum value","A value bounded by a maximum value","","","","","","","","","","","","","","","","",""],"i":[0,0,1,1,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,4,0,5,0,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,0,0,8,8,8,0,9,9,9,0,0,0,0,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0,0,0,11,0,12,0,13,0,14,0,15,0,16,0,17,0,18,0,0,19,19,0,0,20,20,0,21,0,0,22,0,23,0,24,0,0,25,25,0,26,0,27,0,28,0,0,29,0,30,0,31,0,32,0,33,0,34,0,0,35,35,0,0,0,0,36,36,36,36,36,0,0,0,0,0,37,37,0,0,0,0,0,0,0,38,38,0,39,0,0,0,38,38,38,38,38,38,38,39,39,39,39,39,39,39,38,39,39],"f":[null,null,[[]],[[]],null,null,[[],[["isize",15],["option",4]]],[[],[["i8",15],["option",4]]],[[],[["i16",15],["option",4]]],[[],[["option",4],["i32",15]]],[[],[["i64",15],["option",4]]],[[],[["option",4],["i128",15]]],[[],[["usize",15],["option",4]]],[[],[["option",4],["u8",15]]],[[],[["u16",15],["option",4]]],[[],[["u32",15],["option",4]]],[[],[["option",4],["u64",15]]],[[],[["option",4],["u128",15]]],[[],[["option",4],["f32",15]]],[[],[["f64",15],["option",4]]],null,[[["isize",15]],["option",4]],[[["i8",15]],["option",4]],[[["i16",15]],["option",4]],[[["i32",15]],["option",4]],[[["i64",15]],["option",4]],[[["i128",15]],["option",4]],[[["usize",15]],["option",4]],[[["u8",15]],["option",4]],[[["u16",15]],["option",4]],[[["u32",15]],["option",4]],[[["u64",15]],["option",4]],[[["u128",15]],["option",4]],[[["f32",15]],["option",4]],[[["f64",15]],["option",4]],[[["numcast",8]],[["numcast",8],["option",4]]],null,[[["toprimitive",8]],["option",4]],null,[[]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["fpcategory",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[]],[[["i32",15]]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[]],[[]],[[],["bool",15]],null,[[]],[[]],[[],["bool",15]],[[],["zero",8]],[[],["one",8]],null,null,[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[]],[[]],[[]],[[]],[[]],[[["u32",15]]],null,null,null,[[],["option",4]],null,[[],["option",4]],null,[[],["option",4]],null,[[],["option",4]],null,[[],["option",4]],null,[[],["option",4]],null,[[["u32",15]],["option",4]],null,[[["u32",15]],["option",4]],null,null,null,[[]],null,null,null,[[]],null,[[]],null,null,[[]],null,[[]],null,[[]],null,null,[[]],[[]],null,[[]],null,[[]],null,[[]],null,null,[[]],null,[[]],null,[[]],null,[[]],null,[[["u32",15]]],null,[[["u32",15]]],null,null,null,[[]],[[["usize",15],["one",8],["clone",8],["mul",8]],[["mul",8],["one",8],["clone",8]]],[[["usize",15],["checkedmul",8],["clone",8],["one",8]],[["one",8],["option",4],["clone",8],["checkedmul",8]]],null,null,[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[["signed",8]],["signed",8]],[[["signed",8]],["signed",8]],[[["signed",8]],["signed",8]],null,null,null,[[["u32",15],["str",15]],["result",4]],null,null,null,null,null,null,null,null,null,null,null,[[["partialord",8]],["partialord",8]],[[["partialord",8]],["partialord",8]],[[["partialord",8]],["partialord",8]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]]],"p":[[8,"Bounded"],[8,"ToPrimitive"],[8,"FromPrimitive"],[8,"NumCast"],[8,"AsPrimitive"],[8,"FloatCore"],[8,"FloatConst"],[8,"Zero"],[8,"One"],[8,"PrimInt"],[8,"CheckedAdd"],[8,"CheckedSub"],[8,"CheckedMul"],[8,"CheckedDiv"],[8,"CheckedRem"],[8,"CheckedNeg"],[8,"CheckedShl"],[8,"CheckedShr"],[8,"Inv"],[8,"MulAdd"],[8,"MulAddAssign"],[8,"OverflowingAdd"],[8,"OverflowingSub"],[8,"OverflowingMul"],[8,"Saturating"],[8,"SaturatingAdd"],[8,"SaturatingSub"],[8,"SaturatingMul"],[8,"WrappingAdd"],[8,"WrappingSub"],[8,"WrappingMul"],[8,"WrappingNeg"],[8,"WrappingShl"],[8,"WrappingShr"],[8,"Pow"],[8,"Signed"],[8,"Num"],[4,"FloatErrorKind"],[3,"ParseFloatError"]]},\
"raw_cpuid":{"doc":"","t":[0,5,3,3,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,3,4,13,13,13,13,13,13,3,12,12,11,17,3,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,4,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,4,13,13,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,12,11,11,11,11,11,3,11,11,11,3,11,11,11,11,11,3,11,11,11,11,11,11,3,11,11,11,11,3,11,11,11,3,11,11,11,3,11,11,11,11,11,11,11,11,11,3,4,13,3,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,3,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,4,13,13,13,13,13,3,11,11,11,11,11,3,3,11,3,4,13,13,13,13,13,11,11,11,3,4,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["native_cpuid","cpuid_count","CpuId","CpuIdResult","eax","ebx","ecx","edx","new","get_vendor_info","get_feature_info","get_cache_info","get_processor_serial","get_cache_parameters","get_monitor_mwait_info","get_thermal_power_info","get_extended_feature_info","get_direct_cache_access_info","get_performance_monitoring_info","get_extended_topology_info","get_extended_state_info","get_rdt_monitoring_info","get_rdt_allocation_info","get_sgx_info","get_processor_trace_info","get_tsc_info","get_processor_frequency_info","deterministic_address_translation_info","get_soc_vendor_info","get_hypervisor_info","get_extended_function_info","get_memory_encryption_info","VendorInfo","as_string","CacheInfoIter","CacheInfoType","General","Cache","TLB","STLB","DTLB","Prefetch","CacheInfo","num","typ","desc","CACHE_INFO_TABLE","ProcessorSerial","serial_lower","serial_middle","serial","FeatureInfo","extended_family_id","extended_model_id","family_id","model_id","stepping_id","brand_index","cflush_cache_line_size","initial_local_apic_id","max_logical_processor_ids","has_sse3","has_pclmulqdq","has_ds_area","has_monitor_mwait","has_cpl","has_vmx","has_smx","has_eist","has_tm2","has_ssse3","has_cnxtid","has_fma","has_cmpxchg16b","has_pdcm","has_pcid","has_dca","has_sse41","has_sse42","has_x2apic","has_movbe","has_popcnt","has_tsc_deadline","has_aesni","has_xsave","has_oxsave","has_avx","has_f16c","has_rdrand","has_hypervisor","has_fpu","has_vme","has_de","has_pse","has_tsc","has_msr","has_pae","has_mce","has_cmpxchg8b","has_apic","has_sysenter_sysexit","has_mtrr","has_pge","has_mca","has_cmov","has_pat","has_pse36","has_psn","has_clflush","has_ds","has_acpi","has_mmx","has_fxsave_fxstor","has_sse","has_sse2","has_ss","has_htt","has_tm","has_pbe","CacheParametersIter","CacheParameter","CacheType","Null","Data","Instruction","Unified","Reserved","cache_type","level","is_self_initializing","is_fully_associative","max_cores_for_cache","max_cores_for_package","coherency_line_size","physical_line_partitions","associativity","sets","is_write_back_invalidate","is_inclusive","has_complex_indexing","MonitorMwaitInfo","smallest_monitor_line","largest_monitor_line","extensions_supported","interrupts_as_break_event","supported_c0_states","supported_c1_states","supported_c2_states","supported_c3_states","supported_c4_states","supported_c5_states","supported_c6_states","supported_c7_states","ThermalPowerInfo","dts_irq_threshold","has_dts","has_turbo_boost","has_arat","has_pln","has_ecmd","has_ptm","has_hwp","has_hwp_notification","has_hwp_activity_window","has_hwp_energy_performance_preference","has_hwp_package_level_request","has_hdc","has_turbo_boost3","has_hwp_capabilities","has_hwp_peci_override","has_flexible_hwp","has_hwp_fast_access_mode","has_ignore_idle_processor_hwp_request","has_hw_coord_feedback","has_energy_bias_pref","ExtendedFeatures","has_fsgsbase","has_tsc_adjust_msr","has_bmi1","has_hle","has_avx2","has_fdp","has_smep","has_bmi2","has_rep_movsb_stosb","has_invpcid","has_rtm","has_rdtm","has_fpu_cs_ds_deprecated","has_mpx","has_rdta","has_rdseed","has_rdseet","has_adx","has_smap","has_clflushopt","has_processor_trace","has_sha","has_sgx","has_avx512f","has_avx512dq","has_avx512_ifma","has_avx512pf","has_avx512er","has_avx512cd","has_avx512bw","has_avx512vl","has_clwb","has_prefetchwt1","has_umip","has_pku","has_ospke","has_rdpid","has_sgx_lc","mawau_value","DirectCacheAccessInfo","get_dca_cap_value","PerformanceMonitoringInfo","version_id","number_of_counters","counter_bit_width","ebx_length","fixed_function_counters","fixed_function_counters_bit_width","has_any_thread_deprecation","is_core_cyc_ev_unavailable","is_inst_ret_ev_unavailable","is_ref_cycle_ev_unavailable","is_cache_ref_ev_unavailable","is_ll_cache_miss_ev_unavailable","is_branch_inst_ret_ev_unavailable","is_branch_midpred_ev_unavailable","ExtendedTopologyIter","ExtendedTopologyLevel","processors","level_number","level_type","x2apic_id","shift_right_for_next_apic_id","TopologyType","Invalid","SMT","Core","ExtendedStateInfo","xcr0_supports_legacy_x87","xcr0_supports_sse_128","xcr0_supports_avx_256","xcr0_supports_mpx_bndregs","xcr0_supports_mpx_bndcsr","xcr0_supports_avx512_opmask","xcr0_supports_avx512_zmm_hi256","xcr0_supports_avx512_zmm_hi16","xcr0_supports_pkru","ia32_xss_supports_pt","ia32_xss_supports_hdc","xsave_area_size_enabled_features","xsave_area_size_supported_features","has_xsaveopt","has_xsavec","has_xgetbv","has_xsaves_xrstors","xsave_size","iter","ExtendedStateIter","ExtendedState","subleaf","size","offset","is_in_ia32_xss","is_in_xcr0","is_compacted_format","RdtMonitoringInfo","rmid_range","has_l3_monitoring","l3_monitoring","L3MonitoringInfo","conversion_factor","maximum_rmid_range","has_occupancy_monitoring","has_total_bandwidth_monitoring","has_local_bandwidth_monitoring","RdtAllocationInfo","has_l3_cat","has_l2_cat","has_memory_bandwidth_allocation","l3_cat","l2_cat","memory_bandwidth_allocation","L3CatInfo","capacity_mask_length","isolation_bitmap","highest_cos","has_code_data_prioritization","L2CatInfo","capacity_mask_length","isolation_bitmap","highest_cos","MemBwAllocationInfo","max_hba_throttling","highest_cos","has_linear_response_delay","SgxInfo","has_sgx1","has_sgx2","has_enclv_leaves_einvirtchild_edecvirtchild_esetcontext","has_encls_leaves_etrackc_erdinfo_eldbc_elduc","miscselect","max_enclave_size_non_64bit","max_enclave_size_64bit","secs_attributes","iter","SgxSectionIter","SgxSectionInfo","Epc","EpcSection","physical_base","size","ProcessorTraceInfo","has_rtit_cr3_match","has_configurable_psb_and_cycle_accurate_mode","has_ip_tracestop_filtering","has_mtc_timing_packet_coefi_suppression","has_ptwrite","has_power_event_trace","has_topa","has_topa_maximum_entries","has_single_range_output_scheme","has_trace_transport_subsystem","has_lip_with_cs_base","configurable_address_ranges","supported_mtc_period_encodings","supported_cycle_threshold_value_encodings","supported_psb_frequency_encodings","TscInfo","denominator","numerator","nominal_frequency","tsc_frequency","ProcessorFrequencyInfo","processor_base_frequency","processor_max_frequency","bus_frequency","DatIter","DatInfo","has_4k_entries","has_2mb_entries","has_4mb_entries","has_1gb_entries","is_fully_associative","partitioning","ways","sets","cache_type","cache_level","max_addressable_ids","DatType","Null","DataTLB","InstructionTLB","UnifiedTLB","Unknown","SoCVendorInfo","get_soc_vendor_id","get_project_id","get_stepping_id","get_vendor_brand","get_vendor_attributes","SoCVendorAttributesIter","SoCVendorBrand","as_string","HypervisorInfo","Hypervisor","Xen","VMware","HyperV","KVM","Unknown","identify","tsc_frequency","apic_frequency","ExtendedFunctionInfo","L2Associativity","Disabled","DirectMapped","TwoWay","FourWay","EightWay","SixteenWay","FullyAssiciative","Unknown","processor_brand_string","extended_signature","cache_line_size","l2_associativity","cache_size","physical_address_bits","linear_address_bits","has_invariant_tsc","has_lahf_sahf","has_lzcnt","has_prefetchw","has_syscall_sysret","has_execute_disable","has_1gib_pages","has_rdtscp","has_64bit_mode","MemoryEncryptionInfo","has_sme","has_sev","has_page_flush_msr","has_sev_es","physical_address_reduction","c_bit_position","max_encrypted_guests","min_sev_no_es_asid","cpuid","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","into_iter","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","into_iter","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","into_iter","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","into_iter","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","into_iter","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","into_iter","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","into_iter","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","eq","eq","eq","ne","eq","next","next","next","next","next","next","next","clone","clone","clone","clone","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default"],"q":["raw_cpuid","raw_cpuid::native_cpuid","raw_cpuidd":["Uses Rust’s <code>cpuid</code> function from the <code>arch</code> module.","","Main type used to query for information about the CPU we…","Low-level data-structure to store result of cpuid …","Return value EAX register","Return value EBX register","Return value ECX register","Return value EDX register","Return new CPUID struct.","Return information about vendor. This is typically a …","Query a set of features that are available on this CPU.","Query basic information about caches. This will just …","Retrieve serial number of processor.","Retrieve more elaborate information about caches (as …","Information about how monitor/mwait works on this CPU.","Query information about thermal and power management …","Find out about more features supported by this CPU.","Direct cache access info.","Info about performance monitoring (how many counters …","Information about topology (how many cores and what kind …","Information for saving/restoring extended register state.","Quality of service informations.","Quality of service enforcement information.","","Intel Processor Trace Enumeration Information.","Time Stamp Counter/Core Crystal Clock Information.","Processor Frequency Information.","","","","Extended functionality of CPU described here (including …","","","Return vendor identification as human readable string.","Used to iterate over cache information contained in cpuid …","What type of cache are we dealing with?","","","","","","","Describes any kind of cache (TLB, Data and Instruction …","Number as retrieved from cpuid","Cache type","Description of the cache (from Intel Manual)","This table is taken from Intel manual (Section CPUID …","","Bits 00-31 of 96 bit processor serial number. (Available …","Bits 32-63 of 96 bit processor serial number. (Available …","","","Version Information: Extended Family","Version Information: Extended Model","Version Information: Family","Version Information: Model","Version Information: Stepping ID","Brand Index","CLFLUSH line size (Value ∗ 8 = cache line size in bytes)","Initial APIC ID","Maximum number of addressable IDs for logical processors …","Streaming SIMD Extensions 3 (SSE3). A value of 1 …","PCLMULQDQ. A value of 1 indicates the processor supports …","64-bit DS Area. A value of 1 indicates the processor …","MONITOR/MWAIT. A value of 1 indicates the processor …","CPL Qualified Debug Store. A value of 1 indicates the …","Virtual Machine Extensions. A value of 1 indicates that …","Safer Mode Extensions. A value of 1 indicates that the …","Enhanced Intel SpeedStep® technology. A value of 1 …","Thermal Monitor 2. A value of 1 indicates whether the …","A value of 1 indicates the presence of the Supplemental …","L1 Context ID. A value of 1 indicates the L1 data cache …","A value of 1 indicates the processor supports FMA …","CMPXCHG16B Available. A value of 1 indicates that the …","Perfmon and Debug Capability: A value of 1 indicates the …","Process-context identifiers. A value of 1 indicates that …","A value of 1 indicates the processor supports the ability …","A value of 1 indicates that the processor supports SSE4.1.","A value of 1 indicates that the processor supports SSE4.2.","A value of 1 indicates that the processor supports x2APIC …","A value of 1 indicates that the processor supports MOVBE …","A value of 1 indicates that the processor supports the …","A value of 1 indicates that the processors local APIC …","A value of 1 indicates that the processor supports the …","A value of 1 indicates that the processor supports the …","A value of 1 indicates that the OS has enabled …","A value of 1 indicates the processor supports the AVX …","A value of 1 indicates that processor supports 16-bit …","A value of 1 indicates that processor supports RDRAND …","A value of 1 indicates the indicates the presence of a …","Floating Point Unit On-Chip. The processor contains an …","Virtual 8086 Mode Enhancements. Virtual 8086 mode …","Debugging Extensions. Support for I/O breakpoints, …","Page Size Extension. Large pages of size 4 MByte are …","Time Stamp Counter. The RDTSC instruction is supported, …","Model Specific Registers RDMSR and WRMSR Instructions. …","Physical Address Extension. Physical addresses greater …","Machine Check Exception. Exception 18 is defined for …","CMPXCHG8B Instruction. The compare-and-exchange 8 bytes …","APIC On-Chip. The processor contains an Advanced …","SYSENTER and SYSEXIT Instructions. The SYSENTER and …","Memory Type Range Registers. MTRRs are supported. The …","Page Global Bit. The global bit is supported in …","Machine Check Architecture. A value of 1 indicates the …","Conditional Move Instructions. The conditional move …","Page Attribute Table. Page Attribute Table is supported. …","36-Bit Page Size Extension. 4-MByte pages addressing …","Processor Serial Number. The processor supports the …","CLFLUSH Instruction. CLFLUSH Instruction is supported.","Debug Store. The processor supports the ability to write …","Thermal Monitor and Software Controlled Clock Facilities. …","Intel MMX Technology. The processor supports the Intel …","FXSAVE and FXRSTOR Instructions. The FXSAVE and FXRSTOR …","SSE. The processor supports the SSE extensions.","SSE2. The processor supports the SSE2 extensions.","Self Snoop. The processor supports the management of …","Max APIC IDs reserved field is Valid. A value of 0 for …","Thermal Monitor. The processor implements the thermal …","Pending Break Enable. The processor supports the use of …","","","","Null - No more caches","Data cache","Instruction cache","Data and Instruction cache","4-31 = Reserved","Cache Type","Cache Level (starts at 1)","Self Initializing cache level (does not need SW …","Fully Associative cache","Maximum number of addressable IDs for logical processors …","Maximum number of addressable IDs for processor cores in …","System Coherency Line Size (Bits 11-00)","Physical Line partitions (Bits 21-12)","Ways of associativity (Bits 31-22)","Number of Sets (Bits 31-00)","Write-Back Invalidate/Invalidate (Bit 0) False: …","Cache Inclusiveness (Bit 1) False: Cache is not inclusive …","Complex Cache Indexing (Bit 2) False: Direct mapped cache.…","","Smallest monitor-line size in bytes (default is processor…","Largest monitor-line size in bytes (default is processor…","Enumeration of Monitor-Mwait extensions (beyond EAX and …","Supports treating interrupts as break-event for MWAIT, …","Number of C0 sub C-states supported using MWAIT (Bits 03 …","Number of C1 sub C-states supported using MWAIT (Bits 07 …","Number of C2 sub C-states supported using MWAIT (Bits 11 …","Number of C3 sub C-states supported using MWAIT (Bits 15 …","Number of C4 sub C-states supported using MWAIT (Bits 19 …","Number of C5 sub C-states supported using MWAIT (Bits 23 …","Number of C6 sub C-states supported using MWAIT (Bits 27 …","Number of C7 sub C-states supported using MWAIT (Bits 31 …","","Number of Interrupt Thresholds in Digital Thermal Sensor","Digital temperature sensor is supported if set.","Intel Turbo Boost Technology Available (see description …","ARAT. APIC-Timer-always-running feature is supported if …","PLN. Power limit notification controls are supported if …","ECMD. Clock modulation duty cycle extension is supported …","PTM. Package thermal management is supported if set.","HWP. HWP base registers (IA32_PM_ENABLE[bit 0], …","HWP Notification. IA32_HWP_INTERRUPT MSR is supported if …","HWP Activity Window. IA32_HWP_REQUEST[bits 41:32] is …","HWP Energy Performance Preference. IA32_HWP_REQUEST[bits …","HWP Package Level Request. IA32_HWP_REQUEST_PKG MSR is …","HDC. HDC base registers IA32_PKG_HDC_CTL, IA32_PM_CTL1, …","Intel® Turbo Boost Max Technology 3.0 available.","HWP Capabilities. Highest Performance change is supported …","HWP PECI override is supported if set.","Flexible HWP is supported if set.","Fast access mode for the IA32_HWP_REQUEST MSR is …","Ignoring Idle Logical Processor HWP request is supported …","Hardware Coordination Feedback Capability (Presence of …","The processor supports performance-energy bias preference …","","FSGSBASE. Supports RDFSBASE/RDGSBASE/WRFSBASE/WRGSBASE if …","IA32_TSC_ADJUST MSR is supported if 1.","BMI1","HLE","AVX2","FDP_EXCPTN_ONLY. x87 FPU Data Pointer updated only on x87 …","SMEP. Supports Supervisor-Mode Execution Prevention if 1.","BMI2","Supports Enhanced REP MOVSB/STOSB if 1.","INVPCID. If 1, supports INVPCID instruction for system …","RTM","Supports Intel Resource Director Technology (RDT) …","Deprecates FPU CS and FPU DS values if 1.","MPX. Supports Intel Memory Protection Extensions if 1.","Supports Intel Resource Director Technology (RDT) …","Supports RDSEED.","Supports RDSEED (deprecated alias).","Supports ADX.","SMAP. Supports Supervisor-Mode Access Prevention (and the …","Supports CLFLUSHOPT.","Supports Intel Processor Trace.","Supports SHA Instructions.","Supports Intel® Software Guard Extensions (Intel® SGX …","Supports AVX512F.","Supports AVX512DQ.","AVX512_IFMA","AVX512PF","AVX512ER","AVX512CD","AVX512BW","AVX512VL","CLWB","Has PREFETCHWT1 (Intel® Xeon Phi™ only).","Supports user-mode instruction prevention if 1.","Supports protection keys for user-mode pages.","OS has set CR4.PKE to enable protection keys (and the …","RDPID and IA32_TSC_AUX are available.","Supports SGX Launch Configuration.","The value of MAWAU used by the BNDLDX and BNDSTX …","","Value of bits [31:0] of IA32_PLATFORM_DCA_CAP MSR …","","Version ID of architectural performance monitoring. (Bits …","Number of general-purpose performance monitoring counter …","Bit width of general-purpose, performance monitoring …","Length of EBX bit vector to enumerate architectural …","Number of fixed-function performance counters (if Version …","Bit width of fixed-function performance counters (if …","AnyThread deprecation","Core cycle event not available if 1.","Instruction retired event not available if 1.","Reference cycles event not available if 1.","Last-level cache reference event not available if 1.","Last-level cache misses event not available if 1.","Branch instruction retired event not available if 1.","Branch mispredict retired event not available if 1.","Iterates over the system topology in order to retrieve …","Gives detailed information about the current level in the …","Number of logical processors at this level type. The …","Level number.","","x2APIC ID the current logical processor. (Bits 31-00)","Number of bits to shift right on x2APIC ID to get a …","What type of core we have at this level in the topology …","","Hyper-thread (Simultaneous multithreading)","","","Support for legacy x87 in XCR0.","Support for SSE 128-bit in XCR0.","Support for AVX 256-bit in XCR0.","Support for MPX BNDREGS in XCR0.","Support for MPX BNDCSR in XCR0.","Support for AVX512 OPMASK in XCR0.","Support for AVX512 ZMM Hi256 XCR0.","Support for AVX512 ZMM Hi16 in XCR0.","Support for PKRU in XCR0.","Support for PT in IA32_XSS.","Support for HDC in IA32_XSS.","Maximum size (bytes, from the beginning of the …","Maximum size (bytes, from the beginning of the …","CPU has xsaveopt feature.","Supports XSAVEC and the compacted form of XRSTOR if set.","Supports XGETBV with ECX = 1 if set.","Supports XSAVES/XRSTORS and IA32_XSS if set.","The size in bytes of the XSAVE area containing all states …","Iterator over extended state enumeration levels >= 2.","","","","The size in bytes (from the offset specified in EBX) of …","The offset in bytes of this extended state components …","True if the bit n (corresponding to the sub-leaf index) …","True if bit n is supported in XCR0.","Returns true when the compacted format of an XSAVE area …","","Maximum range (zero-based) of RMID within this physical …","Supports L3 Cache Intel RDT Monitoring.","L3 Cache Monitoring.","","Conversion factor from reported IA32_QM_CTR value to …","Maximum range (zero-based) of RMID of L3.","Supports occupancy monitoring.","Supports total bandwidth monitoring.","Supports local bandwidth monitoring.","","Supports L3 Cache Allocation.","Supports L2 Cache Allocation.","Supports Memory Bandwidth Allocation.","L3 Cache Allocation Information.","L2 Cache Allocation Information.","Memory Bandwidth Allocation Information.","L3 Cache Allocation Technology Enumeration Sub-leaf (EAX …","Length of the capacity bit mask using minus-one notation.","Bit-granular map of isolation/contention of allocation …","Highest COS number supported for this Leaf.","Is Code and Data Prioritization Technology supported?","L2 Cache Allocation Technology Enumeration Sub-leaf (EAX …","Length of the capacity bit mask using minus-one notation.","Bit-granular map of isolation/contention of allocation …","Highest COS number supported for this Leaf.","Memory Bandwidth Allocation Enumeration Sub-leaf (EAX = …","Reports the maximum MBA throttling value supported for …","Highest COS number supported for this Leaf.","Reports whether the response of the delay values is …","Intel SGX Capability Enumeration Leaf, sub-leaf 0 (EAX = …","Has SGX1 support.","Has SGX2 support.","Supports ENCLV instruction leaves EINCVIRTCHILD, …","Supports ENCLS instruction leaves ETRACKC, ERDINFO, …","Bit vector of supported extended SGX features.","The maximum supported enclave size in non-64-bit mode is …","The maximum supported enclave size in 64-bit mode is …","Reports the valid bits of SECS.ATTRIBUTES[127:0] that …","Iterator over SGX sub-leafs.","Iterator over the SGX sub-leafs (ECX >= 2).","Intel SGX EPC Enumeration Leaf, sub-leaves (EAX = 12H, …","","EBX:EAX and EDX:ECX provide information on the Enclave …","The physical address of the base of the EPC section","Size of the corresponding EPC section within the …","","If true, Indicates that IA32_RTIT_CTL.CR3Filter can be …","If true, Indicates support of Configurable PSB and …","If true, Indicates support of IP Filtering, TraceStop …","If true, Indicates support of MTC timing packet and …","Indicates support of PTWRITE. Writes can set IA32_RTIT_CTL…","Support of Power Event Trace. Writes can set IA32_RTIT_CTL…","If true, Tracing can be enabled with IA32_RTIT_CTL.ToPA = …","If true, ToPA tables can hold any number of output …","If true, Indicates support of Single-Range Output scheme.","If true, Indicates support of output to Trace Transport …","If true, Generated packets which contain IP payloads have …","Number of configurable Address Ranges for filtering (Bits …","Bitmap of supported MTC period encodings (Bit 31:16).","Bitmap of supported Cycle Threshold value encodings (Bits …","Bitmap of supported Configurable PSB frequency encodings …","Time Stamp Counter and Nominal Core Crystal Clock …","An unsigned integer which is the denominator of the …","An unsigned integer which is the numerator of the …","An unsigned integer which is the nominal frequency of the …","“TSC frequency” = “core crystal clock frequency” …","Processor Frequency Information","Processor Base Frequency (in MHz).","Maximum Frequency (in MHz).","Bus (Reference) Frequency (in MHz).","Deterministic Address Translation Structure Iterator","Deterministic Address Translation Structure","4K page size entries supported by this structure","2MB page size entries supported by this structure","4MB page size entries supported by this structure","1GB page size entries supported by this structure","Fully associative structure","Partitioning (0: Soft partitioning between the logical …","Ways of associativity.","Number of Sets.","Translation cache type field.","Translation cache level (starts at 1)","Maximum number of addressable IDs for logical processors …","Deterministic Address Translation cache type (EDX bits 04 …","Null (indicates this sub-leaf is not valid).","","","Some unified TLBs will allow a single TLB entry to …","","","","","","","","","","","Information about Hypervisor …","Identifies the different Hypervisor products.","","","","","","","TSC frequency in kHz.","(Virtual) Bus (local apic timer) frequency in kHz.","","","","","","","","","","","Retrieve processor brand string.","Extended Processor Signature and Feature Bits.","Cache Line size in bytes","L2 Associativity field","Cache size in 1K units","#Physical Address Bits","#Linear Address Bits","Is Invariant TSC available?","Is LAHF/SAHF available in 64-bit mode?","Is LZCNT available?","Is PREFETCHW available?","Are fast system calls available.","Is there support for execute disable bit.","Is there support for 1GiB pages.","Check support for rdtscp instruction.","Check support for 64-bit mode.","","Secure Memory Encryption is supported if set.","Secure Encrypted Virtualization is supported if set.","The Page Flush MSR is available if set.","SEV Encrypted State is supported if set.","","","","","Macro which queries cpuid directlyterate over all cache information.","Iterate over all caches for this CPU. Note: cpuid is …","","","","Iterate over each sub-leaf with an  address translation …","Iterate over all SoC vendor specific attributes.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,3,0,0,4,4,4,4,4,4,0,5,5,5,0,0,6,6,6,0,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,0,0,0,8,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,9,0,10,10,10,10,10,10,10,10,10,10,10,10,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,13,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,15,15,15,15,15,0,16,16,16,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,0,18,18,18,18,18,18,0,19,19,19,0,20,20,20,20,20,0,21,21,21,21,21,21,0,22,22,22,22,0,23,23,23,0,24,24,24,0,25,25,25,25,25,25,25,25,25,0,0,26,0,27,27,0,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,0,29,29,29,29,0,30,30,30,0,0,31,31,31,31,31,31,31,31,31,31,31,0,32,32,32,32,32,0,33,33,33,33,33,0,0,34,0,0,35,35,35,35,35,36,36,36,0,0,37,37,37,37,37,37,37,37,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,0,39,39,39,39,39,39,39,39,0,2,2,2,2,2,2,2,1,1,1,1,1,1,1,3,3,3,3,3,3,3,40,40,40,40,40,40,40,40,4,4,4,4,4,4,4,5,5,5,5,5,5,5,6,6,6,6,6,6,6,7,7,7,7,7,7,7,41,41,41,41,41,41,41,41,9,9,9,9,9,9,9,8,8,8,8,8,8,8,10,10,10,10,10,10,10,11,11,11,11,11,11,11,12,12,12,12,12,12,12,13,13,13,13,13,13,13,14,14,14,14,14,14,14,42,42,42,42,42,42,42,42,15,15,15,15,15,15,15,16,16,16,16,16,16,16,17,17,17,17,17,17,17,43,43,43,43,43,43,43,43,18,18,18,18,18,18,18,19,19,19,19,19,19,19,20,20,20,20,20,20,20,21,21,21,21,21,21,21,22,22,22,22,22,22,22,23,23,23,23,23,23,23,24,24,24,24,24,24,24,25,25,25,25,25,25,25,44,44,44,44,44,44,44,44,26,26,26,26,26,26,26,27,27,27,27,27,27,27,28,28,28,28,28,28,28,29,29,29,29,29,29,29,30,30,30,30,30,30,30,45,45,45,45,45,45,45,45,31,31,31,31,31,31,31,32,32,32,32,32,32,32,33,33,33,33,33,33,33,46,46,46,46,46,46,46,46,34,34,34,34,34,34,34,36,36,36,36,36,36,36,35,35,35,35,35,35,35,38,38,38,38,38,38,38,37,37,37,37,37,37,37,39,39,39,39,39,39,39,2,1,3,40,4,5,6,7,41,9,8,10,11,12,13,14,42,15,16,17,43,18,19,20,21,22,23,24,25,44,26,27,28,29,30,45,31,32,33,46,34,36,35,38,37,39,5,3,34,8,16,35,35,37,40,41,42,43,44,45,46,1,4,5,9,2,1,3,40,4,5,6,7,41,9,8,10,11,12,13,14,42,15,16,17,43,18,19,20,21,22,23,24,25,44,26,27,28,29,30,45,31,32,33,46,34,38,37,39],"f":[null,[[["u32",15]],["cpuidresult",3]],null,null,null,null,null,null,[[],["cpuid",3]],[[],[["option",4],["vendorinfo",3]]],[[],[["featureinfo",3],["option",4]]],[[],[["option",4],["cacheinfoiter",3]]],[[],[["processorserial",3],["option",4]]],[[],[["cacheparametersiter",3],["option",4]]],[[],[["option",4],["monitormwaitinfo",3]]],[[],[["thermalpowerinfo",3],["option",4]]],[[],[["extendedfeatures",3],["option",4]]],[[],[["option",4],["directcacheaccessinfo",3]]],[[],[["option",4],["performancemonitoringinfo",3]]],[[],[["extendedtopologyiter",3],["option",4]]],[[],[["option",4],["extendedstateinfo",3]]],[[],[["rdtmonitoringinfo",3],["option",4]]],[[],[["option",4],["rdtallocationinfo",3]]],[[],[["sgxinfo",3],["option",4]]],[[],[["processortraceinfo",3],["option",4]]],[[],[["tscinfo",3],["option",4]]],[[],[["option",4],["processorfrequencyinfo",3]]],[[],[["option",4],["datiter",3]]],[[],[["socvendorinfo",3],["option",4]]],[[],[["option",4],["hypervisorinfo",3]]],[[],[["option",4],["extendedfunctioninfo",3]]],[[],[["option",4],["memoryencryptioninfo",3]]],null,[[],["str",15]],null,null,null,null,null,null,null,null,null,null,null,[[],["str",15]],null,null,[[],["u32",15]],[[],["u32",15]],[[],["u64",15]],null,[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,null,null,null,null,null,null,null,[[],["cachetype",4]],[[],["u8",15]],[[],["bool",15]],[[],["bool",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,[[],["u16",15]],[[],["u16",15]],[[],["bool",15]],[[],["bool",15]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],null,[[],["u8",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["u8",15]],null,[[],["u32",15]],null,[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,null,[[],["u16",15]],[[],["u8",15]],[[],["topologytype",4]],[[],["u32",15]],[[],["u32",15]],null,null,null,null,null,[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["u32",15]],[[],["u32",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["u32",15]],[[],["extendedstateiter",3]],null,null,null,[[],["u32",15]],[[],["u32",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,[[],["u32",15]],[[],["bool",15]],[[],[["option",4],["l3monitoringinfo",3]]],null,[[],["u32",15]],[[],["u32",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],[["option",4],["l3catinfo",3]]],[[],[["option",4],["l2catinfo",3]]],[[],[["option",4],["membwallocationinfo",3]]],null,[[],["u8",15]],[[],["u32",15]],[[],["u16",15]],[[],["bool",15]],null,[[],["u8",15]],[[],["u32",15]],[[],["u16",15]],null,[[],["u16",15]],[[],["u16",15]],[[],["bool",15]],null,[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["u32",15]],[[],["u8",15]],[[],["u8",15]],[[]],[[],["sgxsectioniter",3]],null,null,null,null,[[],["u64",15]],[[],["u64",15]],null,[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["u8",15]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],null,[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],[["option",4],["u64",15]]],null,[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],null,null,[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["u8",15]],[[],["u16",15]],[[],["u32",15]],[[],["dattype",4]],[[],["u8",15]],[[],["u16",15]],null,null,null,null,null,null,null,[[],["u16",15]],[[],["u32",15]],[[],["u32",15]],[[],["socvendorbrand",3]],[[],[["option",4],["socvendorattributesiter",3]]],null,null,[[],["str",15]],null,null,null,null,null,null,null,[[],["hypervisor",4]],[[],[["u32",15],["option",4]]],[[],[["u32",15],["option",4]]],null,null,null,null,null,null,null,null,null,null,[[],[["str",15],["option",4]]],[[],[["u32",15],["option",4]]],[[],[["option",4],["u8",15]]],[[],[["l2associativity",4],["option",4]]],[[],[["u16",15],["option",4]]],[[],[["option",4],["u8",15]]],[[],[["option",4],["u8",15]]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["u8",15]],[[],["u8",15]],[[],["u32",15]],[[],["u32",15]],null,[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["cachetype",4]],["bool",15]],[[["topologytype",4]],["bool",15]],[[["hypervisor",4]],["bool",15]],[[["hypervisor",4]],["bool",15]],[[["l2associativity",4]],["bool",15]],[[],[["cacheinfo",3],["option",4]]],[[],[["option",4],["cacheparameter",3]]],[[],[["option",4],["extendedtopologylevel",3]]],[[],[["option",4],["extendedstate",3]]],[[],[["option",4],["sgxsectioninfo",4]]],[[],[["datinfo",3],["option",4]]],[[],[["option",4],["cpuidresult",3]]],[[],["cpuidresult",3]],[[],["cacheinfotype",4]],[[],["cacheinfo",3]],[[],["cacheparameter",3]],[[],["cpuid",3]],[[],["cpuidresult",3]],[[],["vendorinfo",3]],[[],["cacheinfoiter",3]],[[],["cacheinfotype",4]],[[],["cacheinfo",3]],[[],["processorserial",3]],[[],["featureinfo",3]],[[],["cacheparametersiter",3]],[[],["cacheparameter",3]],[[],["cachetype",4]],[[],["monitormwaitinfo",3]],[[],["thermalpowerinfo",3]],[[],["extendedfeatures",3]],[[],["directcacheaccessinfo",3]],[[],["performancemonitoringinfo",3]],[[],["extendedtopologyiter",3]],[[],["extendedtopologylevel",3]],[[],["topologytype",4]],[[],["extendedstateinfo",3]],[[],["extendedstateiter",3]],[[],["extendedstate",3]],[[],["rdtmonitoringinfo",3]],[[],["l3monitoringinfo",3]],[[],["rdtallocationinfo",3]],[[],["l3catinfo",3]],[[],["l2catinfo",3]],[[],["membwallocationinfo",3]],[[],["sgxinfo",3]],[[],["sgxsectioniter",3]],[[],["sgxsectioninfo",4]],[[],["epcsection",3]],[[],["processortraceinfo",3]],[[],["tscinfo",3]],[[],["processorfrequencyinfo",3]],[[],["datiter",3]],[[],["datinfo",3]],[[],["dattype",4]],[[],["socvendorinfo",3]],[[],["socvendorattributesiter",3]],[[],["socvendorbrand",3]],[[],["extendedfunctioninfo",3]],[[],["l2associativity",4]],[[],["memoryencryptioninfo",3]]],"p":[[3,"CpuIdResult"],[3,"CpuId"],[3,"VendorInfo"],[4,"CacheInfoType"],[3,"CacheInfo"],[3,"ProcessorSerial"],[3,"FeatureInfo"],[4,"CacheType"],[3,"CacheParameter"],[3,"MonitorMwaitInfo"],[3,"ThermalPowerInfo"],[3,"ExtendedFeatures"],[3,"DirectCacheAccessInfo"],[3,"PerformanceMonitoringInfo"],[3,"ExtendedTopologyLevel"],[4,"TopologyType"],[3,"ExtendedStateInfo"],[3,"ExtendedState"],[3,"RdtMonitoringInfo"],[3,"L3MonitoringInfo"],[3,"RdtAllocationInfo"],[3,"L3CatInfo"],[3,"L2CatInfo"],[3,"MemBwAllocationInfo"],[3,"SgxInfo"],[4,"SgxSectionInfo"],[3,"EpcSection"],[3,"ProcessorTraceInfo"],[3,"TscInfo"],[3,"ProcessorFrequencyInfo"],[3,"DatInfo"],[4,"DatType"],[3,"SoCVendorInfo"],[3,"SoCVendorBrand"],[4,"Hypervisor"],[3,"HypervisorInfo"],[4,"L2Associativity"],[3,"ExtendedFunctionInfo"],[3,"MemoryEncryptionInfo"],[3,"CacheInfoIter"],[3,"CacheParametersIter"],[3,"ExtendedTopologyIter"],[3,"ExtendedStateIter"],[3,"SgxSectionIter"],[3,"DatIter"],[3,"SoCVendorAttributesIter"]]},\
"scopeguard":{"doc":"A scope guard will run a given closure when it goes out …","t":[8,10,4,3,11,11,5,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Strategy","should_run","Always","ScopeGuard","with_strategy","into_inner","guard","defer","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","should_run","deref","deref_mut","fmt","fmt","drop"],"q":["scopeguard","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Controls in which cases the associated code should be run","Return <code>true</code> if the guard’s associated code should run …","Always run on scope exit.","<code>ScopeGuard</code> is a scope guard that may own a protected …","Create a <code>ScopeGuard</code> that owns <code>v</code> (accessible through …","“Defuse” the guard and extract the value without …","Create a new <code>ScopeGuard</code> owning <code>v</code> and with deferred …","Macro to create a <code>ScopeGuard</code> (always run).","","","","","","","","","","","","","","","","","","","",""],"i":[0,1,0,0,2,2,0,0,3,3,3,3,3,3,3,2,2,2,2,2,2,2,3,2,2,3,2,2],"f":[null,[[],["bool",15]],null,null,[[],["scopeguard",3]],[[]],[[],[["always",4],["scopeguard",3]]],null,[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]]],"p":[[8,"Strategy"],[3,"ScopeGuard"],[4,"Always"]]},\
"x86":{"doc":"","t":[0,0,0,0,3,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,0,0,3,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,0,0,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,17,17,17,17,17,17,3,3,3,17,17,6,6,6,6,5,5,5,5,3,18,18,18,18,18,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,12,11,11,11,11,11,11,11,11,11,11,3,18,18,18,18,18,18,18,18,18,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,12,11,11,11,11,11,11,11,11,11,11,11,11,3,18,18,18,18,18,18,18,18,18,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,18,18,18,18,18,18,18,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,12,11,11,11,11,11,11,11,11,11,11,11,11,0,5,5,5,0,3,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,0,3,18,11,11,11,5,5,5,5,5,5,5,5,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,5,5,5,5,5,5,5,0,3,12,12,12,12,12,12,12,11,11,11,0,5,5,5,5,5,5,5,5,5,0,0,3,11,11,11,11,11,11,0,3,11,11,11,11,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,3,11,11,11,4,13,13,13,13,13,13,13,4,13,13,4,13,13,4,13,13,4,13,13,4,13,13,13,13,3,11,11,11,11,4,13,13,11,11,11,8,10,10,10,10,10,10,10,10,10,10,10,0,3,18,18,18,18,18,18,18,18,18,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,18,18,18,18,18,18,18,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,5,5,5,5,0,3,12,12,11,11,5,5,5,5,5,5,0,5,5,5,5,5,5,0,3,12,12,12,12,12,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,7,3,18,18,18,18,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,0,5,5,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,5,5,5,8,10,5,5,5,5,8,10,5,0,3,18,18,18,18,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,4,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,8,10,10,10,10,8,10,8,10,10,8,10,8,10,3,11,11,11,11,11,11,11,3,12,12,18,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,5,5,5,5,5,0,5,5,0,5,5,0,5,5,0,0,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,3,18,18,18,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,18,18,18,18,18,18,18,18,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,18,18,18,18,18,18,18,18,18,18,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,6,4,13,13,0,0,0,5,3,3,12,12,12,12,3,3,4,13,13,13,13,13,13,3,12,12,17,3,3,3,3,4,13,13,13,13,13,3,3,3,3,3,3,3,4,13,13,13,3,3,3,12,3,3,3,3,3,3,3,3,4,13,3,3,3,3,3,3,4,13,13,13,13,13,3,3,3,3,4,13,13,13,13,13,3,4,13,13,13,13,13,13,13,13,3,14,4,13,13,13,13,5,5,14,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["bits16","segmentation","bits32","eflags","EFlags","FLAGS_ID","FLAGS_VIP","FLAGS_VIF","FLAGS_AC","FLAGS_VM","FLAGS_RF","FLAGS_NT","FLAGS_IOPL0","FLAGS_IOPL1","FLAGS_IOPL2","FLAGS_IOPL3","FLAGS_OF","FLAGS_DF","FLAGS_IF","FLAGS_TF","FLAGS_SF","FLAGS_ZF","FLAGS_AF","FLAGS_PF","FLAGS_A1","FLAGS_CF","empty","all","bits","from_bits","from_bits_truncate","from_bits_unchecked","is_empty","is_all","intersects","contains","insert","remove","toggle","set","new","from_priv","clac","stac","segmentation","task","TaskStateSegment","link","esp0","ss0","esp1","ss1","esp2","ss2","cr3","eip","eflags","eax","ecx","edx","ebx","esp","ebp","esi","edi","es","cs","ss","ds","fs","gs","ldtr","iobp_offset","new","bits64","paging","PAddr","0","as_u64","as_usize","zero","is_zero","split","base_page_offset","large_page_offset","huge_page_offset","align_down_to_base_page","align_down_to_large_page","align_down_to_huge_page","align_up_to_base_page","align_up_to_large_page","align_up_to_huge_page","is_base_page_aligned","is_large_page_aligned","is_huge_page_aligned","is_aligned","VAddr","0","from_u64","from_usize","as_u64","as_usize","as_mut_ptr","as_ptr","zero","is_zero","base_page_offset","large_page_offset","huge_page_offset","align_down_to_base_page","align_down_to_large_page","align_down_to_huge_page","align_up_to_base_page","align_up_to_large_page","align_up_to_huge_page","is_base_page_aligned","is_large_page_aligned","is_huge_page_aligned","is_aligned","BASE_PAGE_SHIFT","BASE_PAGE_SIZE","LARGE_PAGE_SIZE","HUGE_PAGE_SIZE","PML4_SLOT_SIZE","CACHE_LINE_SIZE","Page","LargePage","HugePage","MAXPHYADDR","PAGE_SIZE_ENTRIES","PML4","PDPT","PD","PT","pml4_index","pdpt_index","pd_index","pt_index","PML4Flags","P","RW","US","PWT","PCD","A","XD","empty","all","bits","from_bits","from_bits_truncate","from_bits_unchecked","is_empty","is_all","intersects","contains","insert","remove","toggle","set","PML4Entry","0","new","address","flags","is_present","is_writeable","is_user_mode_allowed","is_page_write_through","is_page_level_cache_disabled","is_accessed","is_instruction_fetching_disabled","PDPTFlags","P","RW","US","PWT","PCD","A","D","PS","G","PAT","XD","empty","all","bits","from_bits","from_bits_truncate","from_bits_unchecked","is_empty","is_all","intersects","contains","insert","remove","toggle","set","PDPTEntry","0","new","address","flags","is_present","is_writeable","is_user_mode_allowed","is_page_write_through","is_page_level_cache_disabled","is_accessed","is_pat","is_instruction_fetching_disabled","is_page","PDFlags","P","RW","US","PWT","PCD","A","D","PS","G","PAT","XD","empty","all","bits","from_bits","from_bits_truncate","from_bits_unchecked","is_empty","is_all","intersects","contains","insert","remove","toggle","set","PDEntry","0","new","address","flags","is_present","is_writeable","is_user_mode_allowed","is_page_write_through","is_page_level_cache_disabled","is_accessed","is_dirty","is_page","is_global","is_pat","is_instruction_fetching_disabled","PTFlags","P","RW","US","PWT","PCD","A","D","G","XD","empty","all","bits","from_bits","from_bits_truncate","from_bits_unchecked","is_empty","is_all","intersects","contains","insert","remove","toggle","set","PTEntry","0","new","address","flags","is_present","is_writeable","is_user_mode_allowed","is_page_write_through","is_page_level_cache_disabled","is_accessed","is_dirty","is_global","is_instruction_fetching_disabled","registers","rip","rsp","rbp","rflags","RFlags","FLAGS_ID","FLAGS_VIP","FLAGS_VIF","FLAGS_AC","FLAGS_VM","FLAGS_RF","FLAGS_NT","FLAGS_IOPL0","FLAGS_IOPL1","FLAGS_IOPL2","FLAGS_IOPL3","FLAGS_OF","FLAGS_DF","FLAGS_IF","FLAGS_TF","FLAGS_SF","FLAGS_ZF","FLAGS_AF","FLAGS_PF","FLAGS_A1","FLAGS_CF","empty","all","bits","from_bits","from_bits_truncate","from_bits_unchecked","is_empty","is_all","intersects","contains","insert","remove","toggle","set","new","from_priv","from_raw","read","set","segmentation","Descriptor64","NULL","set_base_limit","set_selector_offset","set_ist","load_cs","wrgsbase","wrfsbase","rdgsbase","rdfsbase","fs_deref","gs_deref","swapgs","sgx","encls_eadd","encls_eaug","encls_eblock","encls_create","encls_edbgrd","encls_edbgwr","encls_eextend","encls_einit","encls_eldb","encls_eldu","encls_emodpr","encls_emodt","encls_epa","encls_eremove","encls_etrack","encls_ewb","enclu_eaccept","enclu_eacceptcopy","enclu_eenter","enclu_eexit","enclu_egetkey","enclu_emodepe","enclu_ereport","enclu_eresume","syscall","syscall0","syscall1","syscall2","syscall3","syscall4","syscall5","syscall6","task","TaskStateSegment","reserved","rsp","reserved2","ist","reserved3","reserved4","iomap_base","new","set_rsp","set_ist","vmx","vmxon","vmxoff","vmclear","vmptrld","vmptrst","vmread","vmwrite","vmlaunch","vmresume","apic","ioapic","IoApic","new","disable_all","enable","id","version","supported_interrupts","x2apic","X2APIC","new","attach","detach","send_self_ipi","xapic","XAPIC_ID","XAPIC_VERSION","XAPIC_TPR","XAPIC_PPR","XAPIC_EOI","XAPIC_LDR","XAPIC_SVR","XAPIC_ISR0","XAPIC_ISR1","XAPIC_ISR2","XAPIC_ISR3","XAPIC_ISR4","XAPIC_ISR5","XAPIC_ISR6","XAPIC_ISR7","XAPIC_TMR0","XAPIC_TMR1","XAPIC_TMR2","XAPIC_TMR3","XAPIC_TMR4","XAPIC_TMR5","XAPIC_TMR6","XAPIC_TMR7","XAPIC_IRR0","XAPIC_IRR1","XAPIC_IRR2","XAPIC_IRR3","XAPIC_IRR4","XAPIC_IRR5","XAPIC_IRR6","XAPIC_IRR7","XAPIC_ESR","XAPIC_LVT_CMCI","XAPIC_ICR0","XAPIC_ICR1","XAPIC_LVT_TIMER","XAPIC_LVT_THERMAL","XAPIC_LVT_PMI","XAPIC_LVT_LINT0","XAPIC_LVT_LINT1","XAPIC_LVT_ERROR","XAPIC_TIMER_INIT_COUNT","XAPIC_TIMER_CURRENT_COUNT","XAPIC_TIMER_DIV_CONF","XAPIC","new","attach","detach","DeliveryMode","Fixed","LowestPriority","SMI","_Reserved","NMI","Init","StartUp","DestinationMode","Physical","Logical","DeliveryStatus","Idle","SendPending","Level","Deassert","Assert","TriggerMode","Edge","Level","DestinationShorthand","NoShorthand","Myself","AllIncludingSelf","AllExcludingSelf","Icr","for_x2apic","for_xapic","lower","upper","ApicId","XApic","X2Apic","x2apic_logical_id","x2apic_logical_cluster_address","x2apic_logical_cluster_id","ApicControl","bsp","id","logical_id","version","eoi","tsc_enable","tsc_set","ipi_init","ipi_init_deassert","ipi_startup","send_ipi","controlregs","Cr0","CR0_ENABLE_PAGING","CR0_CACHE_DISABLE","CR0_NOT_WRITE_THROUGH","CR0_ALIGNMENT_MASK","CR0_WRITE_PROTECT","CR0_NUMERIC_ERROR","CR0_EXTENSION_TYPE","CR0_TASK_SWITCHED","CR0_EMULATE_COPROCESSOR","CR0_MONITOR_COPROCESSOR","CR0_PROTECTED_MODE","empty","all","bits","from_bits","from_bits_truncate","from_bits_unchecked","is_empty","is_all","intersects","contains","insert","remove","toggle","set","Cr4","CR4_ENABLE_PROTECTION_KEY","CR4_ENABLE_SMAP","CR4_ENABLE_SMEP","CR4_ENABLE_OS_XSAVE","CR4_ENABLE_PCID","CR4_ENABLE_FSGSBASE","CR4_ENABLE_SMX","CR4_ENABLE_VMX","CR4_ENABLE_LA57","CR4_ENABLE_UMIP","CR4_UNMASKED_SSE","CR4_ENABLE_SSE","CR4_ENABLE_PPMC","CR4_ENABLE_GLOBAL_PAGES","CR4_ENABLE_MACHINE_CHECK","CR4_ENABLE_PAE","CR4_ENABLE_PSE","CR4_DEBUGGING_EXTENSIONS","CR4_TIME_STAMP_DISABLE","CR4_VIRTUAL_INTERRUPTS","CR4_ENABLE_VME","empty","all","bits","from_bits","from_bits_truncate","from_bits_unchecked","is_empty","is_all","intersects","contains","insert","remove","toggle","set","Xcr0","XCR0_PKRU_STATE","XCR0_HI16_ZMM_STATE","XCR0_ZMM_HI256_STATE","XCR0_OPMASK_STATE","XCR0_BNDCSR_STATE","XCR0_BNDREG_STATE","XCR0_AVX_STATE","XCR0_SSE_STATE","XCR0_FPU_MMX_STATE","empty","all","bits","from_bits","from_bits_truncate","from_bits_unchecked","is_empty","is_all","intersects","contains","insert","remove","toggle","set","cr0","cr0_write","cr2","cr2_write","cr3","cr3_write","cr4","cr4_write","xcr0","xcr0_write","dtables","DescriptorTablePointer","limit","base","new","new_from_slice","lgdt","sgdt","load_ldtr","ldtr","lidt","sidt","io","outb","inb","outw","inw","outl","inl","irq","InterruptDescription","vector","mnemonic","description","irqtype","source","DIVIDE_ERROR_VECTOR","DEBUG_VECTOR","NONMASKABLE_INTERRUPT_VECTOR","BREAKPOINT_VECTOR","OVERFLOW_VECTOR","BOUND_RANGE_EXCEEDED_VECTOR","INVALID_OPCODE_VECTOR","DEVICE_NOT_AVAILABLE_VECTOR","DOUBLE_FAULT_VECTOR","COPROCESSOR_SEGMENT_OVERRUN_VECTOR","INVALID_TSS_VECTOR","SEGMENT_NOT_PRESENT_VECTOR","STACK_SEGEMENT_FAULT_VECTOR","GENERAL_PROTECTION_FAULT_VECTOR","PAGE_FAULT_VECTOR","X87_FPU_VECTOR","ALIGNMENT_CHECK_VECTOR","MACHINE_CHECK_VECTOR","SIMD_FLOATING_POINT_VECTOR","VIRTUALIZATION_VECTOR","EXCEPTIONS","PageFaultError","P","WR","US","RSVD","ID","PK","empty","all","bits","from_bits","from_bits_truncate","from_bits_unchecked","is_empty","is_all","intersects","contains","insert","remove","toggle","set","enable","disable","msr","wrmsr","rdmsr","P5_MC_ADDR","IA32_P5_MC_ADDR","P5_MC_TYPE","IA32_P5_MC_TYPE","IA32_MONITOR_FILTER_SIZE","IA32_MONITOR_FILTER_LINE_SIZE","IA32_TIME_STAMP_COUNTER","TSC","MSR_PLATFORM_ID","IA32_PLATFORM_ID","APIC_BASE","IA32_APIC_BASE","EBL_CR_POWERON","MSR_EBL_CR_POWERON","MSR_EBC_HARD_POWERON","MSR_EBC_SOFT_POWERON","MSR_EBC_FREQUENCY_ID","TEST_CTL","MSR_SMI_COUNT","IA32_FEATURE_CONTROL","IA32_TSC_ADJUST","MSR_LASTBRANCH_0_FROM_IP","MSR_LASTBRANCH_1","MSR_LASTBRANCH_1_FROM_IP","MSR_LASTBRANCH_2_FROM_IP","MSR_LASTBRANCH_3_FROM_IP","MSR_LASTBRANCH_4","MSR_LASTBRANCH_4_FROM_IP","MSR_LASTBRANCH_5","MSR_LASTBRANCH_5_FROM_IP","MSR_LASTBRANCH_6","MSR_LASTBRANCH_6_FROM_IP","MSR_LASTBRANCH_7","MSR_LASTBRANCH_7_FROM_IP","MSR_LASTBRANCH_0_TO_IP","MSR_LASTBRANCH_1_TO_IP","MSR_LASTBRANCH_2_TO_IP","MSR_LASTBRANCH_3_TO_IP","MSR_LASTBRANCH_4_TO_IP","MSR_LASTBRANCH_5_TO_IP","MSR_LASTBRANCH_6_TO_IP","MSR_LASTBRANCH_7_TO_IP","IA32_BIOS_UPDT_TRIG","BIOS_UPDT_TRIG","IA32_BIOS_SIGN_ID","IA32_SMM_MONITOR_CTL","IA32_SMBASE","MSR_SMRR_PHYSMASK","IA32_PMC0","IA32_PMC1","IA32_PMC2","IA32_PMC3","IA32_PMC4","IA32_PMC5","IA32_PMC6","IA32_PMC7","MSR_FSB_FREQ","MSR_PLATFORM_INFO","MSR_PKG_CST_CONFIG_CONTROL","MSR_PMG_IO_CAPTURE_BASE","IA32_MPERF","IA32_APERF","IA32_MTRRCAP","MSR_BBL_CR_CTL","MSR_BBL_CR_CTL3","MSR_IA32_TSX_CTRL","IA32_SYSENTER_CS","SYSENTER_CS_MSR","IA32_SYSENTER_ESP","SYSENTER_ESP_MSR","IA32_SYSENTER_EIP","SYSENTER_EIP_MSR","MCG_CAP","IA32_MCG_CAP","IA32_MCG_STATUS","MCG_STATUS","MCG_CTL","IA32_MCG_CTL","MSR_SMM_MCA_CAP","MSR_ERROR_CONTROL","MSR_MCG_RAX","MSR_MCG_RBX","MSR_MCG_RCX","MSR_MCG_RDX","MSR_MCG_RSI","MSR_MCG_RDI","MSR_MCG_RBP","IA32_PERFEVTSEL0","IA32_PERFEVTSEL1","IA32_PERFEVTSEL2","MSR_MCG_RFLAGS","IA32_PERFEVTSEL3","MSR_MCG_RIP","MSR_MCG_MISC","IA32_PERFEVTSEL4","IA32_PERFEVTSEL5","IA32_PERFEVTSEL6","IA32_PERFEVTSEL7","MSR_MCG_R8","MSR_MCG_R9","MSR_MCG_R10","MSR_MCG_R11","MSR_MCG_R12","MSR_MCG_R13","MSR_MCG_R14","MSR_PERF_STATUS","IA32_PERF_STATUS","IA32_PERF_CTL","IA32_CLOCK_MODULATION","IA32_THERM_INTERRUPT","IA32_THERM_STATUS","MSR_THERM2_CTL","IA32_MISC_ENABLE","MSR_PLATFORM_BRV","MSR_TEMPERATURE_TARGET","MSR_OFFCORE_RSP_0","MSR_OFFCORE_RSP_1","MSR_MISC_PWR_MGMT","MSR_TURBO_POWER_CURRENT_LIMIT","MSR_TURBO_RATIO_LIMIT","IA32_ENERGY_PERF_BIAS","IA32_PACKAGE_THERM_STATUS","IA32_PACKAGE_THERM_INTERRUPT","MSR_LBR_SELECT","MSR_LASTBRANCH_TOS","DEBUGCTLMSR","MSR_DEBUGCTLA","MSR_DEBUGCTLB","IA32_DEBUGCTL","LASTBRANCHFROMIP","MSR_LASTBRANCH_0","LASTBRANCHTOIP","LASTINTFROMIP","MSR_LASTBRANCH_2","MSR_LER_FROM_LIP","LASTINTTOIP","MSR_LASTBRANCH_3","MSR_LER_TO_LIP","ROB_CR_BKUPTMPDR6","IA32_SMRR_PHYSBASE","IA32_SMRR_PHYSMASK","IA32_PLATFORM_DCA_CAP","IA32_CPU_DCA_CAP","IA32_DCA_0_CAP","MSR_POWER_CTL","IA32_MTRR_PHYSBASE0","IA32_MTRR_PHYSMASK0","IA32_MTRR_PHYSBASE1","IA32_MTRR_PHYSMASK1","IA32_MTRR_PHYSBASE2","IA32_MTRR_PHYSMASK2","IA32_MTRR_PHYSBASE3","IA32_MTRR_PHYSMASK3","IA32_MTRR_PHYSBASE4","IA32_MTRR_PHYSMASK4","IA32_MTRR_PHYSBASE5","IA32_MTRR_PHYSMASK5","IA32_MTRR_PHYSBASE6","IA32_MTRR_PHYSMASK6","IA32_MTRR_PHYSBASE7","IA32_MTRR_PHYSMASK7","IA32_MTRR_PHYSBASE8","IA32_MTRR_PHYSMASK8","IA32_MTRR_PHYSBASE9","IA32_MTRR_PHYSMASK9","IA32_MTRR_FIX64K_00000","IA32_MTRR_FIX16K_80000","IA32_MTRR_FIX16K_A0000","IA32_MTRR_FIX4K_C0000","IA32_MTRR_FIX4K_C8000","IA32_MTRR_FIX4K_D0000","IA32_MTRR_FIX4K_D8000","IA32_MTRR_FIX4K_E0000","IA32_MTRR_FIX4K_E8000","IA32_MTRR_FIX4K_F0000","IA32_MTRR_FIX4K_F8000","IA32_PAT","IA32_MC0_CTL2","IA32_MC1_CTL2","IA32_MC2_CTL2","IA32_MC3_CTL2","IA32_MC4_CTL2","MSR_MC4_CTL2","IA32_MC5_CTL2","IA32_MC6_CTL2","IA32_MC7_CTL2","IA32_MC8_CTL2","IA32_MC9_CTL2","IA32_MC10_CTL2","IA32_MC11_CTL2","IA32_MC12_CTL2","IA32_MC13_CTL2","IA32_MC14_CTL2","IA32_MC15_CTL2","IA32_MC16_CTL2","IA32_MC17_CTL2","IA32_MC18_CTL2","IA32_MC19_CTL2","IA32_MC20_CTL2","IA32_MC21_CTL2","IA32_MTRR_DEF_TYPE","MSR_BPU_COUNTER0","MSR_GQ_SNOOP_MESF","MSR_BPU_COUNTER1","MSR_BPU_COUNTER2","MSR_BPU_COUNTER3","MSR_MS_COUNTER0","MSR_MS_COUNTER1","MSR_MS_COUNTER2","MSR_MS_COUNTER3","MSR_FLAME_COUNTER0","MSR_PERF_FIXED_CTR0","IA32_FIXED_CTR0","MSR_FLAME_COUNTER1","MSR_PERF_FIXED_CTR1","IA32_FIXED_CTR1","MSR_FLAME_COUNTER2","MSR_PERF_FIXED_CTR2","IA32_FIXED_CTR2","MSR_FLAME_COUNTER3","MSR_IQ_COUNTER4","MSR_IQ_COUNTER5","IA32_PERF_CAPABILITIES","MSR_PERF_CAPABILITIES","MSR_BPU_CCCR0","MSR_BPU_CCCR1","MSR_BPU_CCCR2","MSR_BPU_CCCR3","MSR_MS_CCCR0","MSR_MS_CCCR1","MSR_MS_CCCR2","MSR_MS_CCCR3","MSR_FLAME_CCCR0","MSR_FLAME_CCCR1","MSR_FLAME_CCCR2","MSR_FLAME_CCCR3","MSR_IQ_CCCR0","MSR_IQ_CCCR1","MSR_IQ_CCCR2","MSR_IQ_CCCR3","MSR_IQ_CCCR4","MSR_IQ_CCCR5","MSR_PERF_FIXED_CTR_CTRL","IA32_FIXED_CTR_CTRL","MSR_PERF_GLOBAL_STAUS","IA32_PERF_GLOBAL_STAUS","MSR_PERF_GLOBAL_CTRL","IA32_PERF_GLOBAL_CTRL","MSR_PERF_GLOBAL_OVF_CTRL","IA32_PERF_GLOBAL_OVF_CTRL","MSR_UNCORE_PERF_GLOBAL_CTRL","MSR_UNC_PERF_GLOBAL_CTRL","MSR_UNCORE_PERF_GLOBAL_STATUS","MSR_UNC_PERF_GLOBAL_STATUS","MSR_UNCORE_PERF_GLOBAL_OVF_CTRL","MSR_UNCORE_FIXED_CTR0","MSR_W_PMON_FIXED_CTR","MSR_UNC_PERF_FIXED_CTRL","MSR_UNCORE_FIXED_CTR_CTRL","MSR_W_PMON_FIXED_CTR_CTL","MSR_UNC_PERF_FIXED_CTR","MSR_UNCORE_ADDR_OPCODE_MATCH","MSR_UNC_CBO_CONFIG","MSR_PEBS_NUM_ALT","MSR_BSU_ESCR0","MSR_BSU_ESCR1","MSR_FSB_ESCR0","MSR_FSB_ESCR1","MSR_FIRM_ESCR0","MSR_FIRM_ESCR1","MSR_FLAME_ESCR0","MSR_FLAME_ESCR1","MSR_DAC_ESCR0","MSR_DAC_ESCR1","MSR_MOB_ESCR0","MSR_MOB_ESCR1","MSR_PMH_ESCR0","MSR_PMH_ESCR1","MSR_SAAT_ESCR0","MSR_SAAT_ESCR1","MSR_U2L_ESCR0","MSR_UNCORE_PMC0","MSR_UNC_ARB_PER_CTR0","MSR_U2L_ESCR1","MSR_UNCORE_PMC1","MSR_UNC_ARB_PER_CTR1","MSR_BPU_ESCR0","MSR_UNCORE_PMC2","MSR_UNC_ARB_PERFEVTSEL0","MSR_BPU_ESCR1","MSR_UNCORE_PMC3","MSR_UNC_ARB_PERFEVTSEL1","MSR_IS_ESCR0","MSR_UNCORE_PMC4","MSR_IS_ESCR1","MSR_UNCORE_PMC5","MSR_ITLB_ESCR0","MSR_UNCORE_PMC6","MSR_ITLB_ESCR1","MSR_UNCORE_PMC7","MSR_CRU_ESCR0","MSR_CRU_ESCR1","MSR_IQ_ESCR0","MSR_IQ_ESCR1","MSR_RAT_ESCR0","MSR_RAT_ESCR1","MSR_SSU_ESCR0","MSR_MS_ESCR0","MSR_UNCORE_PERFEVTSEL0","MSR_MS_ESCR1","MSR_UNCORE_PERFEVTSEL1","MSR_TBPU_ESCR0","MSR_UNCORE_PERFEVTSEL2","MSR_TBPU_ESCR1","MSR_UNCORE_PERFEVTSEL3","MSR_TC_ESCR0","MSR_UNCORE_PERFEVTSEL4","MSR_TC_ESCR1","MSR_UNCORE_PERFEVTSEL5","MSR_UNCORE_PERFEVTSEL6","MSR_UNCORE_PERFEVTSEL7","MSR_IX_ESCR0","MSR_ALF_ESCR0","MSR_ALF_ESCR1","MSR_CRU_ESCR2","MSR_CRU_ESCR3","MSR_CRU_ESCR4","MSR_CRU_ESCR5","IA32_PEBS_ENABLE","MSR_PEBS_ENABLE","MSR_PEBS_MATRIX_VERT","MSR_PEBS_LD_LAT","MSR_PKG_C3_RESIDENCY","MSR_PKG_C2_RESIDENCY","MSR_PKG_C6C_RESIDENCY","MSR_PKG_C4_RESIDENCY","MSR_PKG_C7_RESIDENCY","MSR_PKG_C6_RESIDENCY","MSR_CORE_C3_RESIDENCY","MSR_CORE_C4_RESIDENCY","MSR_CORE_C6_RESIDENCY","MSR_CORE_C7_RESIDENCY","MC0_CTL","IA32_MC0_CTL","MC0_STATUS","IA32_MC0_STATUS","MC0_ADDR","IA32_MC0_ADDR1","IA32_MC0_ADDR","MC0_MISC","IA32_MC0_MISC","MSR_MC0_MISC","MC1_CTL","IA32_MC1_CTL","MC1_STATUS","IA32_MC1_STATUS","MC1_ADDR","IA32_MC1_ADDR2","IA32_MC1_ADDR","MC1_MISC","IA32_MC1_MISC","MSR_MC1_MISC","MC2_CTL","IA32_MC2_CTL","MC2_STATUS","IA32_MC2_STATUS","MC2_ADDR","IA32_MC2_ADDR1","IA32_MC2_ADDR","MC2_MISC","IA32_MC2_MISC","MSR_MC2_MISC","MC4_CTL","IA32_MC3_CTL","MSR_MC4_CTL","MC4_STATUS","IA32_MC3_STATUS","MSR_MC4_STATUS","MC4_ADDR","IA32_MC3_ADDR1","IA32_MC3_ADDR","MSR_MC4_ADDR","MC4_MISC","IA32_MC3_MISC","MC3_CTL","IA32_MC4_CTL","MSR_MC3_CTL","MC3_STATUS","IA32_MC4_STATUS","MSR_MC3_STATUS","MC3_ADDR","IA32_MC4_ADDR1","IA32_MC4_ADDR","MSR_MC3_ADDR","MSR_MC3_MISC","MC3_MISC","IA32_MC4_MISC","MSR_MC4_MISC","MSR_MC5_CTL","IA32_MC5_CTL","MSR_MC5_STATUS","IA32_MC5_STATUS","MSR_MC5_ADDR","IA32_MC5_ADDR1","MSR_MC5_MISC","IA32_MC5_MISC","IA32_MC6_CTL","MSR_MC6_CTL","IA32_MC6_STATUS","MSR_MC6_STATUS","IA32_MC6_ADDR1","MSR_MC6_ADDR","IA32_MC6_MISC","MSR_MC6_MISC","IA32_MC7_CTL","MSR_MC7_CTL","IA32_MC7_STATUS","MSR_MC7_STATUS","IA32_MC7_ADDR1","MSR_MC7_ADDR","IA32_MC7_MISC","MSR_MC7_MISC","IA32_MC8_CTL","MSR_MC8_CTL","IA32_MC8_STATUS","MSR_MC8_STATUS","IA32_MC8_ADDR1","MSR_MC8_ADDR","IA32_MC8_MISC","MSR_MC8_MISC","IA32_MC9_CTL","MSR_MC9_CTL","IA32_MC9_STATUS","MSR_MC9_STATUS","IA32_MC9_ADDR1","MSR_MC9_ADDR","IA32_MC9_MISC","MSR_MC9_MISC","IA32_MC10_CTL","MSR_MC10_CTL","IA32_MC10_STATUS","MSR_MC10_STATUS","IA32_MC10_ADDR1","MSR_MC10_ADDR","IA32_MC10_MISC","MSR_MC10_MISC","IA32_MC11_CTL","MSR_MC11_CTL","IA32_MC11_STATUS","MSR_MC11_STATUS","IA32_MC11_ADDR1","MSR_MC11_ADDR","IA32_MC11_MISC","MSR_MC11_MISC","IA32_MC12_CTL","MSR_MC12_CTL","IA32_MC12_STATUS","MSR_MC12_STATUS","IA32_MC12_ADDR1","MSR_MC12_ADDR","IA32_MC12_MISC","MSR_MC12_MISC","IA32_MC13_CTL","MSR_MC13_CTL","IA32_MC13_STATUS","MSR_MC13_STATUS","IA32_MC13_ADDR1","MSR_MC13_ADDR","IA32_MC13_MISC","MSR_MC13_MISC","IA32_MC14_CTL","MSR_MC14_CTL","IA32_MC14_STATUS","MSR_MC14_STATUS","IA32_MC14_ADDR1","MSR_MC14_ADDR","IA32_MC14_MISC","MSR_MC14_MISC","IA32_MC15_CTL","MSR_MC15_CTL","IA32_MC15_STATUS","MSR_MC15_STATUS","IA32_MC15_ADDR1","MSR_MC15_ADDR","IA32_MC15_MISC","MSR_MC15_MISC","IA32_MC16_CTL","MSR_MC16_CTL","IA32_MC16_STATUS","MSR_MC16_STATUS","IA32_MC16_ADDR1","MSR_MC16_ADDR","IA32_MC16_MISC","MSR_MC16_MISC","IA32_MC17_CTL","MSR_MC17_CTL","IA32_MC17_STATUS","MSR_MC17_STATUS","IA32_MC17_ADDR1","MSR_MC17_ADDR","IA32_MC17_MISC","MSR_MC17_MISC","IA32_MC18_CTL","MSR_MC18_CTL","IA32_MC18_STATUS","MSR_MC18_STATUS","IA32_MC18_ADDR1","MSR_MC18_ADDR","IA32_MC18_MISC","MSR_MC18_MISC","IA32_MC19_CTL","MSR_MC19_CTL","IA32_MC19_STATUS","MSR_MC19_STATUS","IA32_MC19_ADDR1","MSR_MC19_ADDR","IA32_MC19_MISC","MSR_MC19_MISC","IA32_MC20_CTL","MSR_MC20_CTL","IA32_MC20_STATUS","MSR_MC20_STATUS","IA32_MC20_ADDR1","MSR_MC20_ADDR","IA32_MC20_MISC","MSR_MC20_MISC","IA32_MC21_CTL","MSR_MC21_CTL","IA32_MC21_STATUS","MSR_MC21_STATUS","IA32_MC21_ADDR1","MSR_MC21_ADDR","IA32_MC21_MISC","MSR_MC21_MISC","MSR_MC22_CTL","MSR_MC22_STATUS","MSR_MC22_ADDR","MSR_MC22_MISC","MSR_MC23_CTL","MSR_MC23_STATUS","MSR_MC23_ADDR","MSR_MC23_MISC","MSR_MC24_CTL","MSR_MC24_STATUS","MSR_MC24_ADDR","MSR_MC24_MISC","MSR_MC25_CTL","MSR_MC25_STATUS","MSR_MC25_ADDR","MSR_MC25_MISC","MSR_MC26_CTL","MSR_MC26_STATUS","MSR_MC26_ADDR","MSR_MC26_MISC","IA32_VMX_BASIC","IA32_VMX_PINBASED_CTLS","IA32_VMX_PROCBASED_CTLS","IA32_VMX_EXIT_CTLS","IA32_VMX_ENTRY_CTLS","IA32_VMX_MISC","IA32_VMX_CR0_FIXED0","IA32_VMX_CRO_FIXED0","IA32_VMX_CR0_FIXED1","IA32_VMX_CRO_FIXED1","IA32_VMX_CR4_FIXED0","IA32_VMX_CR4_FIXED1","IA32_VMX_VMCS_ENUM","IA32_VMX_PROCBASED_CTLS2","IA32_VMX_EPT_VPID_ENUM","IA32_VMX_EPT_VPID_CAP","IA32_VMX_TRUE_PINBASED_CTLS","IA32_VMX_TRUE_PROCBASED_CTLS","IA32_VMX_TRUE_EXIT_CTLS","IA32_VMX_TRUE_ENTRY_CTLS","IA32_VMX_FMFUNC","IA32_VMX_VMFUNC","IA32_A_PMC0","IA32_A_PMC1","IA32_A_PMC2","IA32_A_PMC3","IA32_A_PMC4","IA32_A_PMC5","IA32_A_PMC6","IA32_A_PMC7","MSR_SMM_FEATURE_CONTROL","MSR_SMM_DELAYED","MSR_SMM_BLOCKED","MSR_IA32_RTIT_OUTPUT_BASE","MSR_IA32_RTIT_OUTPUT_MASK_PTRS","MSR_IA32_RTIT_CTL","MSR_IA32_RTIT_STATUS","MSR_IA32_CR3_MATCH","MSR_IA32_ADDR0_START","MSR_IA32_ADDR0_END","MSR_IA32_ADDR1_START","MSR_IA32_ADDR1_END","MSR_IA32_ADDR2_START","MSR_IA32_ADDR2_END","MSR_IA32_ADDR3_START","MSR_IA32_ADDR3_END","IA32_DS_AREA","MSR_RAPL_POWER_UNIT","MSR_PKGC3_IRTL","MSR_PKGC6_IRTL","MSR_PKGC7_IRTL","MSR_PKG_POWER_LIMIT","MSR_PKG_ENERGY_STATUS","MSR_PKG_PERF_STATUS","MSR_PKG_POWER_INFO","MSR_DRAM_POWER_LIMIT","MSR_DRAM_ENERGY_STATUS","MSR_DRAM_PERF_STATUS","MSR_DRAM_POWER_INFO","MSR_PKG_C9_RESIDENCY","MSR_PKG_C10_RESIDENCY","MSR_PP0_POWER_LIMIT","MSR_PP0_ENERGY_STATUS","MSR_PP0_POLICY","MSR_PP0_PERF_STATUS","MSR_PP1_POWER_LIMIT","MSR_PP1_ENERGY_STATUS","MSR_PP1_POLICY","MSR_CONFIG_TDP_NOMINAL","MSR_CONFIG_TDP_LEVEL1","MSR_CONFIG_TDP_LEVEL2","MSR_CONFIG_TDP_CONTROL","MSR_TURBO_ACTIVATION_RATIO","MSR_CORE_C1_RESIDENCY","MSR_LASTBRANCH_8_FROM_IP","MSR_LASTBRANCH_9_FROM_IP","MSR_LASTBRANCH_10_FROM_IP","MSR_LASTBRANCH_11_FROM_IP","MSR_LASTBRANCH_12_FROM_IP","MSR_LASTBRANCH_13_FROM_IP","MSR_LASTBRANCH_14_FROM_IP","MSR_LASTBRANCH_15_FROM_IP","MSR_LASTBRANCH_8_TO_IP","MSR_LASTBRANCH_9_TO_IP","MSR_LASTBRANCH_10_TO_IP","MSR_LASTBRANCH_11_TO_IP","MSR_LASTBRANCH_12_TO_IP","MSR_LASTBRANCH_13_TO_IP","MSR_LASTBRANCH_14_TO_IP","MSR_LASTBRANCH_15_TO_IP","IA32_TSC_DEADLINE","MSR_UNC_CBO_0_PERFEVTSEL0","MSR_UNC_CBO_0_PERFEVTSEL1","MSR_UNC_CBO_0_PER_CTR0","MSR_UNC_CBO_0_PER_CTR1","MSR_UNC_CBO_1_PERFEVTSEL0","MSR_UNC_CBO_1_PERFEVTSEL1","MSR_UNC_CBO_1_PER_CTR0","MSR_UNC_CBO_1_PER_CTR1","MSR_UNC_CBO_2_PERFEVTSEL0","MSR_UNC_CBO_2_PERFEVTSEL1","MSR_UNC_CBO_2_PER_CTR0","MSR_UNC_CBO_2_PER_CTR1","MSR_UNC_CBO_3_PERFEVTSEL0","MSR_UNC_CBO_3_PERFEVTSEL1","MSR_UNC_CBO_3_PER_CTR0","MSR_UNC_CBO_3_PER_CTR1","IA32_X2APIC_APICID","IA32_X2APIC_VERSION","IA32_X2APIC_TPR","IA32_X2APIC_PPR","IA32_X2APIC_EOI","IA32_X2APIC_LDR","IA32_X2APIC_SIVR","IA32_X2APIC_ISR0","IA32_X2APIC_ISR1","IA32_X2APIC_ISR2","IA32_X2APIC_ISR3","IA32_X2APIC_ISR4","IA32_X2APIC_ISR5","IA32_X2APIC_ISR6","IA32_X2APIC_ISR7","IA32_X2APIC_TMR0","IA32_X2APIC_TMR1","IA32_X2APIC_TMR2","IA32_X2APIC_TMR3","IA32_X2APIC_TMR4","IA32_X2APIC_TMR5","IA32_X2APIC_TMR6","IA32_X2APIC_TMR7","IA32_X2APIC_IRR0","IA32_X2APIC_IRR1","IA32_X2APIC_IRR2","IA32_X2APIC_IRR3","IA32_X2APIC_IRR4","IA32_X2APIC_IRR5","IA32_X2APIC_IRR6","IA32_X2APIC_IRR7","IA32_X2APIC_ESR","IA32_X2APIC_LVT_CMCI","IA32_X2APIC_ICR","IA32_X2APIC_LVT_TIMER","IA32_X2APIC_LVT_THERMAL","IA32_X2APIC_LVT_PMI","IA32_X2APIC_LVT_LINT0","IA32_X2APIC_LVT_LINT1","IA32_X2APIC_LVT_ERROR","IA32_X2APIC_INIT_COUNT","IA32_X2APIC_CUR_COUNT","IA32_X2APIC_DIV_CONF","IA32_X2APIC_SELF_IPI","MSR_U_PMON_GLOBAL_CTRL","MSR_U_PMON_GLOBAL_STATUS","MSR_U_PMON_GLOBAL_OVF_CTRL","MSR_U_PMON_EVNT_SEL","MSR_U_PMON_CTR","MSR_B0_PMON_BOX_CTRL","MSR_B0_PMON_BOX_STATUS","MSR_B0_PMON_BOX_OVF_CTRL","MSR_B0_PMON_EVNT_SEL0","MSR_B0_PMON_CTR0","MSR_B0_PMON_EVNT_SEL1","MSR_B0_PMON_CTR1","MSR_B0_PMON_EVNT_SEL2","MSR_B0_PMON_CTR2","MSR_B0_PMON_EVNT_SEL3","MSR_B0_PMON_CTR3","MSR_S0_PMON_BOX_CTRL","MSR_S0_PMON_BOX_STATUS","MSR_S0_PMON_BOX_OVF_CTRL","MSR_S0_PMON_EVNT_SEL0","MSR_S0_PMON_CTR0","MSR_S0_PMON_EVNT_SEL1","MSR_S0_PMON_CTR1","MSR_S0_PMON_EVNT_SEL2","MSR_S0_PMON_CTR2","MSR_S0_PMON_EVNT_SEL3","MSR_S0_PMON_CTR3","MSR_B1_PMON_BOX_CTRL","MSR_B1_PMON_BOX_STATUS","MSR_B1_PMON_BOX_OVF_CTRL","MSR_B1_PMON_EVNT_SEL0","MSR_B1_PMON_CTR0","MSR_B1_PMON_EVNT_SEL1","MSR_B1_PMON_CTR1","MSR_B1_PMON_EVNT_SEL2","MSR_B1_PMON_CTR2","MSR_B1_PMON_EVNT_SEL3","MSR_B1_PMON_CTR3","MSR_W_PMON_BOX_CTRL","MSR_W_PMON_BOX_STATUS","MSR_W_PMON_BOX_OVF_CTRL","IA32_QM_EVTSEL","IA32_QM_CTR","IA32_PQR_ASSOC","MSR_W_PMON_EVNT_SEL0","MSR_W_PMON_CTR0","MSR_W_PMON_EVNT_SEL1","MSR_W_PMON_CTR1","MSR_W_PMON_EVNT_SEL2","MSR_W_PMON_CTR2","MSR_W_PMON_EVNT_SEL3","MSR_W_PMON_CTR3","MSR_M0_PMON_BOX_CTRL","MSR_M0_PMON_BOX_STATUS","MSR_M0_PMON_BOX_OVF_CTRL","MSR_M0_PMON_TIMESTAMP","MSR_M0_PMON_DSP","MSR_M0_PMON_ISS","MSR_M0_PMON_MAP","MSR_M0_PMON_MSC_THR","MSR_M0_PMON_PGT","MSR_M0_PMON_PLD","MSR_M0_PMON_ZDP","MSR_M0_PMON_EVNT_SEL0","MSR_M0_PMON_CTR0","MSR_M0_PMON_EVNT_SEL1","MSR_M0_PMON_CTR1","MSR_M0_PMON_EVNT_SEL2","MSR_M0_PMON_CTR2","MSR_M0_PMON_EVNT_SEL3","MSR_M0_PMON_CTR3","MSR_M0_PMON_EVNT_SEL4","MSR_M0_PMON_CTR4","MSR_M0_PMON_EVNT_SEL5","MSR_M0_PMON_CTR5","MSR_S1_PMON_BOX_CTRL","MSR_S1_PMON_BOX_STATUS","MSR_S1_PMON_BOX_OVF_CTRL","MSR_S1_PMON_EVNT_SEL0","MSR_S1_PMON_CTR0","MSR_S1_PMON_EVNT_SEL1","MSR_S1_PMON_CTR1","MSR_S1_PMON_EVNT_SEL2","MSR_S1_PMON_CTR2","MSR_S1_PMON_EVNT_SEL3","MSR_S1_PMON_CTR3","MSR_M1_PMON_BOX_CTRL","MSR_M1_PMON_BOX_STATUS","MSR_M1_PMON_BOX_OVF_CTRL","MSR_M1_PMON_TIMESTAMP","MSR_M1_PMON_DSP","MSR_M1_PMON_ISS","MSR_M1_PMON_MAP","MSR_M1_PMON_MSC_THR","MSR_M1_PMON_PGT","MSR_M1_PMON_PLD","MSR_M1_PMON_ZDP","MSR_M1_PMON_EVNT_SEL0","MSR_M1_PMON_CTR0","MSR_M1_PMON_EVNT_SEL1","MSR_M1_PMON_CTR1","MSR_M1_PMON_EVNT_SEL2","MSR_M1_PMON_CTR2","MSR_M1_PMON_EVNT_SEL3","MSR_M1_PMON_CTR3","MSR_M1_PMON_EVNT_SEL4","MSR_M1_PMON_CTR4","MSR_M1_PMON_EVNT_SEL5","MSR_M1_PMON_CTR5","MSR_C0_PMON_BOX_CTRL","MSR_C0_PMON_BOX_STATUS","MSR_C0_PMON_BOX_OVF_CTRL","MSR_C0_PMON_EVNT_SEL0","MSR_C0_PMON_CTR0","MSR_C0_PMON_EVNT_SEL1","MSR_C0_PMON_CTR1","MSR_C0_PMON_EVNT_SEL2","MSR_C0_PMON_CTR2","MSR_C0_PMON_EVNT_SEL3","MSR_C0_PMON_CTR3","MSR_C0_PMON_EVNT_SEL4","MSR_C0_PMON_CTR4","MSR_C0_PMON_EVNT_SEL5","MSR_C0_PMON_CTR5","MSR_C4_PMON_BOX_CTRL","MSR_C4_PMON_BOX_STATUS","MSR_C4_PMON_BOX_OVF_CTRL","MSR_C4_PMON_EVNT_SEL0","MSR_C4_PMON_CTR0","MSR_C4_PMON_EVNT_SEL1","MSR_C4_PMON_CTR1","MSR_C4_PMON_EVNT_SEL2","MSR_C4_PMON_CTR2","MSR_C4_PMON_EVNT_SEL3","MSR_C4_PMON_CTR3","MSR_C4_PMON_EVNT_SEL4","MSR_C4_PMON_CTR4","MSR_C4_PMON_EVNT_SEL5","MSR_C4_PMON_CTR5","MSR_C2_PMON_BOX_CTRL","MSR_C2_PMON_BOX_STATUS","MSR_C2_PMON_BOX_OVF_CTRL","MSR_C2_PMON_EVNT_SEL0","MSR_C2_PMON_CTR0","MSR_C2_PMON_EVNT_SEL1","MSR_C2_PMON_CTR1","MSR_C2_PMON_EVNT_SEL2","MSR_C2_PMON_CTR2","MSR_C2_PMON_EVNT_SEL3","MSR_C2_PMON_CTR3","MSR_C2_PMON_EVNT_SEL4","MSR_C2_PMON_CTR4","MSR_C2_PMON_EVNT_SEL5","MSR_C2_PMON_CTR5","MSR_C6_PMON_BOX_CTRL","MSR_C6_PMON_BOX_STATUS","MSR_C6_PMON_BOX_OVF_CTRL","MSR_C6_PMON_EVNT_SEL0","MSR_C6_PMON_CTR0","MSR_C6_PMON_EVNT_SEL1","MSR_C6_PMON_CTR1","MSR_C6_PMON_EVNT_SEL2","MSR_C6_PMON_CTR2","MSR_C6_PMON_EVNT_SEL3","MSR_C6_PMON_CTR3","MSR_C6_PMON_EVNT_SEL4","MSR_C6_PMON_CTR4","MSR_C6_PMON_EVNT_SEL5","MSR_C6_PMON_CTR5","MSR_C1_PMON_BOX_CTRL","MSR_C1_PMON_BOX_STATUS","MSR_C1_PMON_BOX_OVF_CTRL","MSR_C1_PMON_EVNT_SEL0","MSR_C1_PMON_CTR0","MSR_C1_PMON_EVNT_SEL1","MSR_C1_PMON_CTR1","MSR_C1_PMON_EVNT_SEL2","MSR_C1_PMON_CTR2","MSR_C1_PMON_EVNT_SEL3","MSR_C1_PMON_CTR3","MSR_C1_PMON_EVNT_SEL4","MSR_C1_PMON_CTR4","MSR_C1_PMON_EVNT_SEL5","MSR_C1_PMON_CTR5","MSR_C5_PMON_BOX_CTRL","MSR_C5_PMON_BOX_STATUS","MSR_C5_PMON_BOX_OVF_CTRL","MSR_C5_PMON_EVNT_SEL0","MSR_C5_PMON_CTR0","MSR_C5_PMON_EVNT_SEL1","MSR_C5_PMON_CTR1","MSR_C5_PMON_EVNT_SEL2","MSR_C5_PMON_CTR2","MSR_C5_PMON_EVNT_SEL3","MSR_C5_PMON_CTR3","MSR_C5_PMON_EVNT_SEL4","MSR_C5_PMON_CTR4","MSR_C5_PMON_EVNT_SEL5","MSR_C5_PMON_CTR5","MSR_C3_PMON_BOX_CTRL","MSR_C3_PMON_BOX_STATUS","MSR_C3_PMON_BOX_OVF_CTRL","MSR_C3_PMON_EVNT_SEL0","MSR_C3_PMON_CTR0","MSR_C3_PMON_EVNT_SEL1","MSR_C3_PMON_CTR1","MSR_C3_PMON_EVNT_SEL2","MSR_C3_PMON_CTR2","MSR_C3_PMON_EVNT_SEL3","MSR_C3_PMON_CTR3","MSR_C3_PMON_EVNT_SEL4","MSR_C3_PMON_CTR4","MSR_C3_PMON_EVNT_SEL5","MSR_C3_PMON_CTR5","MSR_C7_PMON_BOX_CTRL","MSR_C7_PMON_BOX_STATUS","MSR_C7_PMON_BOX_OVF_CTRL","MSR_C7_PMON_EVNT_SEL0","MSR_C7_PMON_CTR0","MSR_C7_PMON_EVNT_SEL1","MSR_C7_PMON_CTR1","MSR_C7_PMON_EVNT_SEL2","MSR_C7_PMON_CTR2","MSR_C7_PMON_EVNT_SEL3","MSR_C7_PMON_CTR3","MSR_C7_PMON_EVNT_SEL4","MSR_C7_PMON_CTR4","MSR_C7_PMON_EVNT_SEL5","MSR_C7_PMON_CTR5","MSR_R0_PMON_BOX_CTRL","MSR_R0_PMON_BOX_STATUS","MSR_R0_PMON_BOX_OVF_CTRL","MSR_R0_PMON_IPERF0_P0","MSR_R0_PMON_IPERF0_P1","MSR_R0_PMON_IPERF0_P2","MSR_R0_PMON_IPERF0_P3","MSR_R0_PMON_IPERF0_P4","MSR_R0_PMON_IPERF0_P5","MSR_R0_PMON_IPERF0_P6","MSR_R0_PMON_IPERF0_P7","MSR_R0_PMON_QLX_P0","MSR_R0_PMON_QLX_P1","MSR_R0_PMON_QLX_P2","MSR_R0_PMON_QLX_P3","MSR_R0_PMON_EVNT_SEL0","MSR_R0_PMON_CTR0","MSR_R0_PMON_EVNT_SEL1","MSR_R0_PMON_CTR1","MSR_R0_PMON_EVNT_SEL2","MSR_R0_PMON_CTR2","MSR_R0_PMON_EVNT_SEL3","MSR_R0_PMON_CTR3","MSR_R0_PMON_EVNT_SEL4","MSR_R0_PMON_CTR4","MSR_R0_PMON_EVNT_SEL5","MSR_R0_PMON_CTR5","MSR_R0_PMON_EVNT_SEL6","MSR_R0_PMON_CTR6","MSR_R0_PMON_EVNT_SEL7","MSR_R0_PMON_CTR7","MSR_R1_PMON_BOX_CTRL","MSR_R1_PMON_BOX_STATUS","MSR_R1_PMON_BOX_OVF_CTRL","MSR_R1_PMON_IPERF1_P8","MSR_R1_PMON_IPERF1_P9","MSR_R1_PMON_IPERF1_P10","MSR_R1_PMON_IPERF1_P11","MSR_R1_PMON_IPERF1_P12","MSR_R1_PMON_IPERF1_P13","MSR_R1_PMON_IPERF1_P14","MSR_R1_PMON_IPERF1_P15","MSR_R1_PMON_QLX_P4","MSR_R1_PMON_QLX_P5","MSR_R1_PMON_QLX_P6","MSR_R1_PMON_QLX_P7","MSR_R1_PMON_EVNT_SEL8","MSR_R1_PMON_CTR8","MSR_R1_PMON_EVNT_SEL9","MSR_R1_PMON_CTR9","MSR_R1_PMON_EVNT_SEL10","MSR_R1_PMON_CTR10","MSR_R1_PMON_EVNT_SEL11","MSR_R1_PMON_CTR11","MSR_R1_PMON_EVNT_SEL12","MSR_R1_PMON_CTR12","MSR_R1_PMON_EVNT_SEL13","MSR_R1_PMON_CTR13","MSR_R1_PMON_EVNT_SEL14","MSR_R1_PMON_CTR14","MSR_R1_PMON_EVNT_SEL15","MSR_R1_PMON_CTR15","MSR_B0_PMON_MATCH","MSR_B0_PMON_MASK","MSR_S0_PMON_MATCH","MSR_S0_PMON_MASK","MSR_B1_PMON_MATCH","MSR_B1_PMON_MASK","MSR_M0_PMON_MM_CONFIG","MSR_M0_PMON_ADDR_MATCH","MSR_M0_PMON_ADDR_MASK","MSR_S1_PMON_MATCH","MSR_S1_PMON_MASK","MSR_M1_PMON_MM_CONFIG","MSR_M1_PMON_ADDR_MATCH","MSR_M1_PMON_ADDR_MASK","MSR_C8_PMON_BOX_CTRL","MSR_C8_PMON_BOX_STATUS","MSR_C8_PMON_BOX_OVF_CTRL","MSR_C8_PMON_EVNT_SEL0","MSR_C8_PMON_CTR0","MSR_C8_PMON_EVNT_SEL1","MSR_C8_PMON_CTR1","MSR_C8_PMON_EVNT_SEL2","MSR_C8_PMON_CTR2","MSR_C8_PMON_EVNT_SEL3","MSR_C8_PMON_CTR3","MSR_C8_PMON_EVNT_SEL4","MSR_C8_PMON_CTR4","MSR_C8_PMON_EVNT_SEL5","MSR_C8_PMON_CTR5","MSR_C9_PMON_BOX_CTRL","MSR_C9_PMON_BOX_STATUS","MSR_C9_PMON_BOX_OVF_CTRL","MSR_C9_PMON_EVNT_SEL0","MSR_C9_PMON_CTR0","MSR_C9_PMON_EVNT_SEL1","MSR_C9_PMON_CTR1","MSR_C9_PMON_EVNT_SEL2","MSR_C9_PMON_CTR2","MSR_C9_PMON_EVNT_SEL3","MSR_C9_PMON_CTR3","MSR_C9_PMON_EVNT_SEL4","MSR_C9_PMON_CTR4","MSR_C9_PMON_EVNT_SEL5","MSR_C9_PMON_CTR5","MSR_EMON_L3_CTR_CTL0","MSR_IFSB_BUSQ0","MSR_EMON_L3_CTR_CTL1","MSR_IFSB_BUSQ1","MSR_EMON_L3_CTR_CTL2","MSR_IFSB_SNPQ0","MSR_EMON_L3_CTR_CTL3","MSR_IFSB_SNPQ1","MSR_EFSB_DRDY0","MSR_EMON_L3_CTR_CTL4","MSR_EFSB_DRDY1","MSR_EMON_L3_CTR_CTL5","MSR_EMON_L3_CTR_CTL6","MSR_IFSB_CTL6","MSR_EMON_L3_CTR_CTL7","MSR_IFSB_CNTR7","MSR_EMON_L3_GL_CTL","IA32_EFER","IA32_STAR","IA32_LSTAR","IA32_CSTAR","IA32_FMASK","IA32_FS_BASE","IA32_GS_BASE","IA32_KERNEL_GSBASE","IA32_TSC_AUX","random","rdrand16","rdrand32","rdrand64","RdRand","fill_random","rdrand_slice","rdseed16","rdseed32","rdseed64","RdSeed","fill_random","rdseed_slice","segmentation","SegmentSelector","RPL_0","RPL_1","RPL_2","RPL_3","TI_GDT","TI_LDT","empty","all","bits","from_bits","from_bits_truncate","from_bits_unchecked","is_empty","is_all","intersects","contains","insert","remove","toggle","set","new","index","from_raw","SystemDescriptorTypes64","LDT","TssAvailable","TssBusy","CallGate","InterruptGate","TrapGate","SystemDescriptorTypes32","TSSAvailable16","LDT","TSSBusy16","CallGate16","TaskGate","InterruptGate16","TrapGate16","TssAvailable32","TssBusy32","CallGate32","InterruptGate32","TrapGate32","DataSegmentType","ReadOnly","ReadOnlyAccessed","ReadWrite","ReadWriteAccessed","ReadExpand","ReadExpandAccessed","ReadWriteExpand","ReadWriteExpandAccessed","CodeSegmentType","Execute","ExecuteAccessed","ExecuteRead","ExecuteReadAccessed","ExecuteConforming","ExecuteConformingAccessed","ExecuteReadConforming","ExecuteReadConformingAccessed","GateDescriptorBuilder","tss_descriptor","call_gate_descriptor","interrupt_descriptor","trap_gate_descriptor","TaskGateDescriptorBuilder","task_gate_descriptor","SegmentDescriptorBuilder","code_descriptor","data_descriptor","LdtDescriptorBuilder","ldt_descriptor","BuildDescriptor","finish","DescriptorBuilder","limit_granularity_4kb","present","dpl","avl","db","l","ist","Descriptor","lower","upper","NULL","as_u64","set_base_limit","set_selector_offset","set_type","set_s","set_dpl","set_p","set_avl","set_l","set_db","set_g","load_ss","load_ds","load_es","load_fs","load_gs","cs","es","ss","ds","fs","gs","task","tr","load_tr","time","rdtsc","rdtscp","tlb","flush","flush_all","vmx","vmcs","control","VPID","POSTED_INTERRUPT_NOTIFICATION_VECTOR","EPTP_INDEX","IO_BITMAP_A_ADDR_FULL","IO_BITMAP_A_ADDR_HIGH","IO_BITMAP_B_ADDR_FULL","IO_BITMAP_B_ADDR_HIGH","MSR_BITMAPS_ADDR_FULL","MSR_BITMAPS_ADDR_HIGH","VMEXIT_MSR_STORE_ADDR_FULL","VMEXIT_MSR_STORE_ADDR_HIGH","VMEXIT_MSR_LOAD_ADDR_FULL","VMEXIT_MSR_LOAD_ADDR_HIGH","VMENTRY_MSR_LOAD_ADDR_FULL","VMENTRY_MSR_LOAD_ADDR_HIGH","EXECUTIVE_VMCS_PTR_FULL","EXECUTIVE_VMCS_PTR_HIGH","PML_ADDR_FULL","PML_ADDR_HIGH","TSC_OFFSET_FULL","TSC_OFFSET_HIGH","VIRT_APIC_ADDR_FULL","VIRT_APIC_ADDR_HIGH","APIC_ACCESS_ADDR_FULL","APIC_ACCESS_ADDR_HIGH","POSTED_INTERRUPT_DESC_ADDR_FULL","POSTED_INTERRUPT_DESC_ADDR_HIGH","VM_FUNCTION_CONTROLS_FULL","VM_FUNCTION_CONTROLS_HIGH","EPTP_FULL","EPTP_HIGH","EOI_EXIT0_FULL","EOI_EXIT0_HIGH","EOI_EXIT1_FULL","EOI_EXIT1_HIGH","EOI_EXIT2_FULL","EOI_EXIT2_HIGH","EOI_EXIT3_FULL","EOI_EXIT3_HIGH","EPTP_LIST_ADDR_FULL","EPTP_LIST_ADDR_HIGH","VMREAD_BITMAP_ADDR_FULL","VMREAD_BITMAP_ADDR_HIGH","VMWRITE_BITMAP_ADDR_FULL","VMWRITE_BITMAP_ADDR_HIGH","VIRT_EXCEPTION_INFO_ADDR_FULL","VIRT_EXCEPTION_INFO_ADDR_HIGH","XSS_EXITING_BITMAP_FULL","XSS_EXITING_BITMAP_HIGH","ENCLS_EXITING_BITMAP_FULL","ENCLS_EXITING_BITMAP_HIGH","SUBPAGE_PERM_TABLE_PTR_FULL","SUBPAGE_PERM_TABLE_PTR_HIGH","TSC_MULTIPLIER_FULL","TSC_MULTIPLIER_HIGH","PINBASED_EXEC_CONTROLS","PRIMARY_PROCBASED_EXEC_CONTROLS","EXCEPTION_BITMAP","PAGE_FAULT_ERR_CODE_MASK","PAGE_FAULT_ERR_CODE_MATCH","CR3_TARGET_COUNT","VMEXIT_CONTROLS","VMEXIT_MSR_STORE_COUNT","VMEXIT_MSR_LOAD_COUNT","VMENTRY_CONTROLS","VMENTRY_MSR_LOAD_COUNT","VMENTRY_INTERRUPTION_INFO_FIELD","VMENTRY_EXCEPTION_ERR_CODE","VMENTRY_INSTRUCTION_LEN","TPR_THRESHOLD","SECONDARY_PROCBASED_EXEC_CONTROLS","PLE_GAP","PLE_WINDOW","CR0_GUEST_HOST_MASK","CR4_GUEST_HOST_MASK","CR0_READ_SHADOW","CR4_READ_SHADOW","CR3_TARGET_VALUE0","CR3_TARGET_VALUE1","CR3_TARGET_VALUE2","CR3_TARGET_VALUE3","PinbasedControls","EXTERNAL_INTERRUPT_EXITING","NMI_EXITING","VIRTUAL_NMIS","VMX_PREEMPTION_TIMER","POSTED_INTERRUPTS","empty","all","bits","from_bits","from_bits_truncate","from_bits_unchecked","is_empty","is_all","intersects","contains","insert","remove","toggle","set","PrimaryControls","INTERRUPT_WINDOW_EXITING","USE_TSC_OFFSETTING","HLT_EXITING","INVLPG_EXITING","MWAIT_EXITING","RDPMC_EXITING","RDTSC_EXITING","CR3_LOAD_EXITING","CR3_STORE_EXITING","CR8_LOAD_EXITING","CR8_STORE_EXITING","USE_TPR_SHADOW","NMI_WINDOW_EXITING","MOV_DR_EXITING","UNCOND_IO_EXITING","USE_IO_BITMAPS","MONITOR_TRAP_FLAG","USE_MSR_BITMAPS","MONITOR_EXITING","PAUSE_EXITING","SECONDARY_CONTROLS","empty","all","bits","from_bits","from_bits_truncate","from_bits_unchecked","is_empty","is_all","intersects","contains","insert","remove","toggle","set","SecondaryControls","VIRTUALIZE_APIC","ENABLE_EPT","DTABLE_EXITING","ENABLE_RDTSCP","VIRTUALIZE_X2APIC","ENABLE_VPID","WBINVD_EXITING","UNRESTRICTED_GUEST","VIRTUALIZE_APIC_REGISTER","VIRTUAL_INTERRUPT_DELIVERY","PAUSE_LOOP_EXITING","RDRAND_EXITING","ENABLE_INVPCID","ENABLE_VM_FUNCTIONS","VMCS_SHADOWING","ENCLS_EXITING","RDSEED_EXITING","ENABLE_PML","EPT_VIOLATION_VE","CONCEAL_VMX_FROM_PT","ENABLE_XSAVES_XRSTORS","MODE_BASED_EPT","SUB_PAGE_EPT","INTEL_PT_GUEST_PHYSICAL","USE_TSC_SCALING","ENABLE_USER_WAIT_PAUSE","ENCLV_EXITING","empty","all","bits","from_bits","from_bits_truncate","from_bits_unchecked","is_empty","is_all","intersects","contains","insert","remove","toggle","set","EntryControls","LOAD_DEBUG_CONTROLS","IA32E_MODE_GUEST","ENTRY_TO_SMM","DEACTIVATE_DUAL_MONITOR","LOAD_IA32_PERF_GLOBAL_CTRL","LOAD_IA32_PAT","LOAD_IA32_EFER","LOAD_IA32_BNDCFGS","CONCEAL_VMX_FROM_PT","LOAD_IA32_RTIT_CTL","empty","all","bits","from_bits","from_bits_truncate","from_bits_unchecked","is_empty","is_all","intersects","contains","insert","remove","toggle","set","ExitControls","SAVE_DEBUG_CONTROLS","HOST_ADDRESS_SPACE_SIZE","LOAD_IA32_PERF_GLOBAL_CTRL","ACK_INTERRUPT_ON_EXIT","SAVE_IA32_PAT","LOAD_IA32_PAT","SAVE_IA32_EFER","LOAD_IA32_EFER","SAVE_VMX_PREEMPTION_TIMER","CLEAR_IA32_BNDCFGS","CONCEAL_VMX_FROM_PT","CLEAR_IA32_RTIT_CTL","empty","all","bits","from_bits","from_bits_truncate","from_bits_unchecked","is_empty","is_all","intersects","contains","insert","remove","toggle","set","guest","ES_SELECTOR","CS_SELECTOR","SS_SELECTOR","DS_SELECTOR","FS_SELECTOR","GS_SELECTOR","LDTR_SELECTOR","TR_SELECTOR","INTERRUPT_STATUS","PML_INDEX","LINK_PTR_FULL","LINK_PTR_HIGH","IA32_DEBUGCTL_FULL","IA32_DEBUGCTL_HIGH","IA32_PAT_FULL","IA32_PAT_HIGH","IA32_EFER_FULL","IA32_EFER_HIGH","IA32_PERF_GLOBAL_CTRL_FULL","IA32_PERF_GLOBAL_CTRL_HIGH","PDPTE0_FULL","PDPTE0_HIGH","PDPTE1_FULL","PDPTE1_HIGH","PDPTE2_FULL","PDPTE2_HIGH","PDPTE3_FULL","PDPTE3_HIGH","IA32_BNDCFGS_FULL","IA32_BNDCFGS_HIGH","IA32_RTIT_CTL_FULL","IA32_RTIT_CTL_HIGH","ES_LIMIT","CS_LIMIT","SS_LIMIT","DS_LIMIT","FS_LIMIT","GS_LIMIT","LDTR_LIMIT","TR_LIMIT","GDTR_LIMIT","IDTR_LIMIT","ES_ACCESS_RIGHTS","CS_ACCESS_RIGHTS","SS_ACCESS_RIGHTS","DS_ACCESS_RIGHTS","FS_ACCESS_RIGHTS","GS_ACCESS_RIGHTS","LDTR_ACCESS_RIGHTS","TR_ACCESS_RIGHTS","INTERRUPTIBILITY_STATE","ACTIVITY_STATE","SMBASE","IA32_SYSENTER_CS","VMX_PREEMPTION_TIMER_VALUE","CR0","CR3","CR4","ES_BASE","CS_BASE","SS_BASE","DS_BASE","FS_BASE","GS_BASE","LDTR_BASE","TR_BASE","GDTR_BASE","IDTR_BASE","DR7","RSP","RIP","RFLAGS","PENDING_DBG_EXCEPTIONS","IA32_SYSENTER_ESP","IA32_SYSENTER_EIP","host","ES_SELECTOR","CS_SELECTOR","SS_SELECTOR","DS_SELECTOR","FS_SELECTOR","GS_SELECTOR","TR_SELECTOR","IA32_PAT_FULL","IA32_PAT_HIGH","IA32_EFER_FULL","IA32_EFER_HIGH","IA32_PERF_GLOBAL_CTRL_FULL","IA32_PERF_GLOBAL_CTRL_HIGH","IA32_SYSENTER_CS","CR0","CR3","CR4","FS_BASE","GS_BASE","TR_BASE","GDTR_BASE","IDTR_BASE","IA32_SYSENTER_ESP","IA32_SYSENTER_EIP","RSP","RIP","ro","GUEST_PHYSICAL_ADDR_FULL","GUEST_PHYSICAL_ADDR_HIGH","VM_INSTRUCTION_ERROR","EXIT_REASON","VMEXIT_INTERRUPTION_INFO","VMEXIT_INTERRUPTION_ERR_CODE","IDT_VECTORING_INFO","IDT_VECTORING_ERR_CODE","VMEXIT_INSTRUCTION_LEN","VMEXIT_INSTRUCTION_INFO","EXIT_QUALIFICATION","IO_RCX","IO_RSI","IO_RDI","IO_RIP","GUEST_LINEAR_ADDR","Result","VmFail","VmFailValid","VmFailInvalid","current","cpuid","native_cpuid","cpuid_count","CpuId","CpuIdResult","eax","ebx","ecx","edx","VendorInfo","CacheInfoIter","CacheInfoType","General","Cache","TLB","STLB","DTLB","Prefetch","CacheInfo","num","typ","CACHE_INFO_TABLE","ProcessorSerial","FeatureInfo","CacheParametersIter","CacheParameter","CacheType","Null","Data","Instruction","Unified","Reserved","MonitorMwaitInfo","ThermalPowerInfo","ExtendedFeatures","DirectCacheAccessInfo","PerformanceMonitoringInfo","ExtendedTopologyIter","ExtendedTopologyLevel","TopologyType","Invalid","SMT","Core","ExtendedStateInfo","ExtendedStateIter","ExtendedState","subleaf","RdtMonitoringInfo","L3MonitoringInfo","RdtAllocationInfo","L3CatInfo","L2CatInfo","MemBwAllocationInfo","SgxInfo","SgxSectionIter","SgxSectionInfo","Epc","EpcSection","ProcessorTraceInfo","TscInfo","ProcessorFrequencyInfo","DatIter","DatInfo","DatType","Null","DataTLB","InstructionTLB","UnifiedTLB","Unknown","SoCVendorInfo","SoCVendorAttributesIter","SoCVendorBrand","HypervisorInfo","Hypervisor","Xen","VMware","HyperV","KVM","Unknown","ExtendedFunctionInfo","L2Associativity","Disabled","DirectMapped","TwoWay","FourWay","EightWay","SixteenWay","FullyAssiciative","Unknown","MemoryEncryptionInfo","cpuid","Ring","Ring0","Ring1","Ring2","Ring3","halt","rdpid","syscall","int","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","into_iter","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","into_iter","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","into_iter","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","into_iter","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","into_iter","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","into_iter","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","into_iter","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","try_from","borrow","borrow_mut","from","into","try_into","type_id","next","next","next","next","next","next","next","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","fmt","fmt","fmt","clone","clone","clone","clone","eq","ne","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","bsp","id","logical_id","version","tsc_enable","tsc_set","eoi","ipi_init","ipi_init_deassert","ipi_startup","send_ipi","bsp","id","logical_id","version","eoi","tsc_enable","tsc_set","ipi_init","ipi_init_deassert","ipi_startup","send_ipi","tss_descriptor","call_gate_descriptor","interrupt_descriptor","trap_gate_descriptor","tss_descriptor","call_gate_descriptor","interrupt_descriptor","trap_gate_descriptor","tss_descriptor","call_gate_descriptor","interrupt_descriptor","trap_gate_descriptor","task_gate_descriptor","code_descriptor","data_descriptor","ldt_descriptor","ldt_descriptor","finish","finish","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","rem","rem","rem","rem","rem","rem","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","eq","eq","eq","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","eq","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","add","add","add","add","add","add","add_assign","add_assign","add_assign","add_assign","add_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","not","not","not","not","not","not","not","not","not","not","not","not","not","not","not","not","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","shr","shr","shr","shr","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","into","into","into","into","into","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","default","default","default","default","new","get_vendor_info","get_feature_info","get_cache_info","get_processor_serial","get_cache_parameters","get_monitor_mwait_info","get_thermal_power_info","get_extended_feature_info","get_direct_cache_access_info","get_performance_monitoring_info","get_extended_topology_info","get_extended_state_info","get_rdt_monitoring_info","get_rdt_allocation_info","get_sgx_info","get_processor_trace_info","get_tsc_info","get_processor_frequency_info","deterministic_address_translation_info","get_soc_vendor_info","get_hypervisor_info","get_extended_function_info","get_memory_encryption_info","as_string","desc","serial_lower","serial_middle","serial","extended_family_id","extended_model_id","family_id","model_id","stepping_id","brand_index","cflush_cache_line_size","initial_local_apic_id","max_logical_processor_ids","has_sse3","has_pclmulqdq","has_ds_area","has_monitor_mwait","has_cpl","has_vmx","has_smx","has_eist","has_tm2","has_ssse3","has_cnxtid","has_fma","has_cmpxchg16b","has_pdcm","has_pcid","has_dca","has_sse41","has_sse42","has_x2apic","has_movbe","has_popcnt","has_tsc_deadline","has_aesni","has_xsave","has_oxsave","has_avx","has_f16c","has_rdrand","has_hypervisor","has_fpu","has_vme","has_de","has_pse","has_tsc","has_msr","has_pae","has_mce","has_cmpxchg8b","has_apic","has_sysenter_sysexit","has_mtrr","has_pge","has_mca","has_cmov","has_pat","has_pse36","has_psn","has_clflush","has_ds","has_acpi","has_mmx","has_fxsave_fxstor","has_sse","has_sse2","has_ss","has_htt","has_tm","has_pbe","cache_type","level","is_self_initializing","is_fully_associative","max_cores_for_cache","max_cores_for_package","coherency_line_size","physical_line_partitions","associativity","sets","is_write_back_invalidate","is_inclusive","has_complex_indexing","smallest_monitor_line","largest_monitor_line","extensions_supported","interrupts_as_break_event","supported_c0_states","supported_c1_states","supported_c2_states","supported_c3_states","supported_c4_states","supported_c5_states","supported_c6_states","supported_c7_states","dts_irq_threshold","has_dts","has_turbo_boost","has_arat","has_pln","has_ecmd","has_ptm","has_hwp","has_hwp_notification","has_hwp_activity_window","has_hwp_energy_performance_preference","has_hwp_package_level_request","has_hdc","has_turbo_boost3","has_hwp_capabilities","has_hwp_peci_override","has_flexible_hwp","has_hwp_fast_access_mode","has_ignore_idle_processor_hwp_request","has_hw_coord_feedback","has_energy_bias_pref","has_fsgsbase","has_tsc_adjust_msr","has_bmi1","has_hle","has_avx2","has_fdp","has_smep","has_bmi2","has_rep_movsb_stosb","has_invpcid","has_rtm","has_rdtm","has_fpu_cs_ds_deprecated","has_mpx","has_rdta","has_rdseed","has_rdseet","has_adx","has_smap","has_clflushopt","has_processor_trace","has_sha","has_sgx","has_avx512f","has_avx512dq","has_avx512_ifma","has_avx512pf","has_avx512er","has_avx512cd","has_avx512bw","has_avx512vl","has_clwb","has_prefetchwt1","has_umip","has_pku","has_ospke","has_rdpid","has_sgx_lc","mawau_value","get_dca_cap_value","version_id","number_of_counters","counter_bit_width","ebx_length","fixed_function_counters","fixed_function_counters_bit_width","has_any_thread_deprecation","is_core_cyc_ev_unavailable","is_inst_ret_ev_unavailable","is_ref_cycle_ev_unavailable","is_cache_ref_ev_unavailable","is_ll_cache_miss_ev_unavailable","is_branch_inst_ret_ev_unavailable","is_branch_midpred_ev_unavailable","processors","level_number","level_type","x2apic_id","shift_right_for_next_apic_id","xcr0_supports_legacy_x87","xcr0_supports_sse_128","xcr0_supports_avx_256","xcr0_supports_mpx_bndregs","xcr0_supports_mpx_bndcsr","xcr0_supports_avx512_opmask","xcr0_supports_avx512_zmm_hi256","xcr0_supports_avx512_zmm_hi16","xcr0_supports_pkru","ia32_xss_supports_pt","ia32_xss_supports_hdc","xsave_area_size_enabled_features","xsave_area_size_supported_features","has_xsaveopt","has_xsavec","has_xgetbv","has_xsaves_xrstors","xsave_size","iter","size","offset","is_in_ia32_xss","is_in_xcr0","is_compacted_format","rmid_range","has_l3_monitoring","l3_monitoring","conversion_factor","maximum_rmid_range","has_occupancy_monitoring","has_total_bandwidth_monitoring","has_local_bandwidth_monitoring","has_l3_cat","has_l2_cat","has_memory_bandwidth_allocation","l3_cat","l2_cat","memory_bandwidth_allocation","capacity_mask_length","isolation_bitmap","highest_cos","has_code_data_prioritization","capacity_mask_length","isolation_bitmap","highest_cos","max_hba_throttling","highest_cos","has_linear_response_delay","has_sgx1","has_sgx2","has_enclv_leaves_einvirtchild_edecvirtchild_esetcontext","has_encls_leaves_etrackc_erdinfo_eldbc_elduc","miscselect","max_enclave_size_non_64bit","max_enclave_size_64bit","secs_attributes","iter","physical_base","size","has_rtit_cr3_match","has_configurable_psb_and_cycle_accurate_mode","has_ip_tracestop_filtering","has_mtc_timing_packet_coefi_suppression","has_ptwrite","has_power_event_trace","has_topa","has_topa_maximum_entries","has_single_range_output_scheme","has_trace_transport_subsystem","has_lip_with_cs_base","configurable_address_ranges","supported_mtc_period_encodings","supported_cycle_threshold_value_encodings","supported_psb_frequency_encodings","denominator","numerator","nominal_frequency","tsc_frequency","processor_base_frequency","processor_max_frequency","bus_frequency","has_4k_entries","has_2mb_entries","has_4mb_entries","has_1gb_entries","is_fully_associative","partitioning","ways","sets","cache_type","cache_level","max_addressable_ids","get_soc_vendor_id","get_project_id","get_stepping_id","get_vendor_brand","get_vendor_attributes","as_string","identify","tsc_frequency","apic_frequency","processor_brand_string","extended_signature","cache_line_size","l2_associativity","cache_size","physical_address_bits","linear_address_bits","has_invariant_tsc","has_lahf_sahf","has_lzcnt","has_prefetchw","has_syscall_sysret","has_execute_disable","has_1gib_pages","has_rdtscp","has_64bit_mode","has_sme","has_sev","has_page_flush_msr","has_sev_es","physical_address_reduction","c_bit_position","max_encrypted_guests","min_sev_no_es_asid"],"q":["x86","x86::bits16","x86","x86::bits32","x86::bits32::eflags","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","x86::bits32","","x86::bits32::task","","","","","","","","","","","","","","","","","","","","","","","","","","","","x86","x86::bits64","x86::bits64::pagingx86::bits64","x86::bits64::registers","","","x86::bits64","x86::bits64::rflags","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","x86::bits64","x86::bits64::segmentation","","","","","","","","","","","","","x86::bits64","x86::bits64::sgx","","","","","","","","","","","","","","","","","","","","","","","","x86::bits64","x86::bits64::syscall","","","","","","","x86::bits64","x86::bits64::task","","","","","","","","","","","x86::bits64","x86::bits64::vmx","","","","","","","","","x86","x86::apic","x86::apic::ioapic","","","","","","","x86::apic","x86::apic::x2apic","","","","","x86::apic","x86::apic::xapic","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","x86::apic","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","x86","x86::controlregs","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","x86","x86::dtables","","","","","","","","","","","x86","x86::io","","","","","","x86","x86::irq","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","x86","x86::msrx86","x86::random","","","","","","","","","","","","x86","x86::segmentation","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","x86","x86::task","","x86","x86::time","","x86","x86::tlb","","x86","x86::vmx","x86::vmx::vmcs","x86::vmx::vmcs::controlx86::vmx::vmcs","x86::vmx::vmcs::guest","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","x86::vmx::vmcs","x86::vmx::vmcs::host","","","","","","","","","","","","","","","","","","","","","","","","","","x86::vmx::vmcs","x86::vmx::vmcs::ro","","","","","","","","","","","","","","","","x86::vmx","","","","x86","","x86::cpuid","x86::cpuid::native_cpuid","x86::cpuid","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","x86","","","","","","","","","x86::bits32::eflags","","","","","","","x86::bits32::task","","","","","","","x86::bits64::paging","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","x86::bits64::rflags","","","","","","","x86::bits64::segmentation","","","","","","","x86::bits64::task","","","","","","","x86::apic::ioapic","","","","","","","x86::apic::x2apic","","","","","","","x86::apic::xapic","","","","","","","x86::apic","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","x86::controlregs","","","","","","","","","","","","","","","","","","","","","x86::dtables","","","","","","","x86::irq","","","","","","","","","","","","","","x86::segmentation","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","x86::vmx::vmcs::control","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","x86::vmx","","","","","","","x86::cpuidx86","","","","","","","x86::cpuid","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","x86::apic::x2apic","","","","","","","","","","","x86::apic::xapic","","","","","","","","","","","x86::segmentation","","","","","","","","","","","","","","","","","","","x86::bits32::eflags","x86::bits32::task","x86::bits64::paging","","","","","","","","","","x86::bits64::rflags","x86::bits64::segmentation","x86::bits64::task","x86::apic::x2apic","x86::apic::xapic","x86::apic","","","","","","","","x86::controlregs","","","x86::dtables","x86::irq","","x86::segmentation","","","","","","","x86::vmx::vmcs::control","","","","","x86::vmx","x86","x86::bits64::paging","","x86::irq","","x86::segmentation","","x86::bits64::paging","","","","","","x86::bits32::eflags","x86::bits64::paging","","","","","","","","","","x86::bits64::rflags","x86::controlregs","","","x86::irq","x86::segmentation","x86::vmx::vmcs::control","","","","","x86::bits32::eflags","","x86::bits64::paging","","","","","","","","","","","","x86::bits64::rflags","","x86::apic","","","","","","","","","","x86::controlregs","","","","","","x86::irq","","x86::segmentation","","","","","","x86::vmx::vmcs::control","","","","","","","","","","x86","x86::bits32::eflags","x86::bits64::paging","","","","","","x86::bits64::rflags","x86::controlregs","","","x86::irq","x86::segmentation","x86::vmx::vmcs::control","","","","","x86::bits32::eflags","x86::bits64::paging","","","","","","x86::bits64::rflags","x86::controlregs","","","x86::irq","x86::segmentation","x86::vmx::vmcs::control","","","","","x86::bits64::paging","","","","","","","","","","","x86::bits32::eflags","x86::bits64::paging","","","","x86::bits64::rflags","x86::controlregs","","","x86::irq","x86::segmentation","x86::vmx::vmcs::control","","","","","x86::bits32::eflags","x86::bits64::paging","","","","x86::bits64::rflags","x86::controlregs","","","x86::irq","x86::segmentation","x86::vmx::vmcs::control","","","","","x86::bits32::eflags","x86::bits64::paging","","","","","","","","","","x86::bits64::rflags","x86::controlregs","","","x86::irq","x86::segmentation","x86::vmx::vmcs::control","","","","","x86::bits32::eflags","x86::bits64::paging","","","","","","","","","x86::bits64::rflags","x86::controlregs","","","x86::irq","x86::segmentation","x86::vmx::vmcs::control","","","","","x86::bits32::eflags","x86::bits64::paging","","","","x86::bits64::rflags","x86::controlregs","","","x86::irq","x86::segmentation","x86::vmx::vmcs::control","","","","","x86::bits64::paging","","","","x86::bits32::eflags","x86::bits64::paging","","","","x86::bits64::rflags","x86::controlregs","","","x86::irq","x86::segmentation","x86::vmx::vmcs::control","","","","","x86::bits32::eflags","x86::bits64::paging","","","","x86::bits64::rflags","x86::controlregs","","","x86::irq","x86::segmentation","x86::vmx::vmcs::control","","","","","x86::bits32::eflags","x86::bits64::paging","","","","x86::bits64::rflags","x86::controlregs","","","x86::irq","x86::segmentation","x86::vmx::vmcs::control","","","","","x86::bits32::eflags","x86::bits64::paging","","","","","","x86::bits64::rflags","x86::controlregs","","","x86::irq","x86::segmentation","x86::vmx::vmcs::control","","","","","x86::bits32::eflags","x86::bits64::paging","","","","x86::bits64::rflags","x86::controlregs","","","x86::irq","x86::segmentation","x86::vmx::vmcs::control","","","","","x86::bits32::eflags","x86::bits64::paging","","","","x86::bits64::rflags","x86::controlregs","","","x86::irq","x86::segmentation","x86::vmx::vmcs::control","","","","","x86::bits32::eflags","x86::bits64::paging","","","","","","x86::bits64::rflags","x86::controlregs","","","x86::irq","x86::segmentation","x86::vmx::vmcs::control","","","","","x86::bits32::eflags","x86::bits64::paging","","","","","","x86::bits64::rflags","x86::controlregs","","","x86::irq","x86::segmentation","x86::vmx::vmcs::control","","","","","x86::bits32::eflags","x86::bits64::paging","","","","","","x86::bits64::rflags","x86::controlregs","","","x86::irq","x86::segmentation","x86::vmx::vmcs::control","","","","","x86::bits32::eflags","x86::bits64::paging","","","","","","x86::bits64::rflags","x86::controlregs","","","x86::irq","x86::segmentation","x86::vmx::vmcs::control","","","","","x86::bits64::paging","","","","","","","","","","","","x86::apic","x86::bits32::eflags","x86::bits32::task","x86::bits64::paging","","","","","","","","","","x86::bits64::rflags","x86::bits64::segmentation","x86::bits64::task","x86::apic","x86::controlregs","","","x86::irq","x86::segmentation","","","","","","x86::vmx::vmcs::control","","","","","x86","x86::bits64::segmentation","x86::bits64::task","x86::dtables","x86::segmentation","x86::cpuidd":["Data structures and functions used by 16-bit mode.","","Data structures and functions used by 32-bit mode.","Processor state stored in the EFLAGS register.","The EFLAGS register.","ID Flag (ID)","Virtual Interrupt Pending (VIP)","Virtual Interrupt Flag (VIF)","Alignment Check (AC)","Virtual-8086 Mode (VM)","Resume Flag (RF)","Nested Task (NT)","I/O Privilege Level (IOPL) 0","I/O Privilege Level (IOPL) 1","I/O Privilege Level (IOPL) 2","I/O Privilege Level (IOPL) 3","Overflow Flag (OF)","Direction Flag (DF)","Interrupt Enable Flag (IF)","Trap Flag (TF)","Sign Flag (SF)","Zero Flag (ZF)","Auxiliary Carry Flag (AF)","Parity Flag (PF)","Bit 1 is always 1.","Carry Flag (CF)","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the …","Creates a new Flags entry. Ensures bit 1 is set.","Creates a new Flags with the given I/O privilege level.","Clears the AC flag bit in EFLAGS register.","Sets the AC flag bit in EFLAGS register.","","Helpers to program the task state segment. See Intel 3a, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Data structures and functions used by IA-32e but not …","Description of the data-structures for IA-32e paging mode.","A wrapper for a physical address.","","Convert to <code>u64</code>","Convert to <code>usize</code>","Physical Address zero.","Is zero?","Split <code>PAddr</code> into lower and higher 32-bits.","Offset within the 4 KiB page.","Offset within the 2 MiB page.","Offset within the 1 GiB page.","Return address of nearest 4 KiB page (lower or equal than …","Return address of nearest 2 MiB page (lower or equal than …","Return address of nearest 1 GiB page (lower or equal than …","Return address of nearest 4 KiB page (higher or equal …","Return address of nearest 2 MiB page (higher or equal …","Return address of nearest 1 GiB page (higher or equal …","Is this address aligned to a 4 KiB page?","Is this address aligned to a 2 MiB page?","Is this address aligned to a 1 GiB page?","Is this address aligned to <code>align</code>?","A wrapper for a virtual address.","","Convert from <code>u64</code>","Convert from <code>usize</code>","Convert to <code>u64</code>","Convert to <code>usize</code>","Convert to mutable pointer.","Convert to pointer.","Physical Address zero.","Is zero?","Offset within the 4 KiB page.","Offset within the 2 MiB page.","Offset within the 1 GiB page.","Return address of nearest 4 KiB page (lower or equal than …","Return address of nearest 2 MiB page (lower or equal than …","Return address of nearest 1 GiB page (lower or equal than …","Return address of nearest 4 KiB page (higher or equal …","Return address of nearest 2 MiB page (higher or equal …","Return address of nearest 1 GiB page (higher or equal …","Is this address aligned to a 4 KiB page?","Is this address aligned to a 2 MiB page?","Is this address aligned to a 1 GiB page?","Is this address aligned to <code>align</code>?","Log2 of base page size (12 bits).","Size of a base page (4 KiB)","Size of a large page (2 MiB)","Size of a huge page (1 GiB)","Size of a region covered by a PML4 Entry (512 GiB)","Size of a cache-line","A type wrapping a base page with a 4 KiB buffer.","A type wrapping a large page with a 2 MiB buffer.","A type wrapping a huge page with a 1 GiB buffer.","MAXPHYADDR, which is at most 52; (use CPUID for finding …","Page tables have 512 = 4096 / 64 entries.","A PML4 table.","A page directory pointer table.","A page directory.","A page table.","Given virtual address calculate corresponding entry in …","Given virtual address calculate corresponding entry in …","Given virtual address calculate corresponding entry in PD.","Given virtual address calculate corresponding entry in PT.","PML4 configuration bit description.","Present; must be 1 to reference a page-directory-pointer …","Read/write; if 0, writes may not be allowed to the …","User/supervisor; if 0, user-mode accesses are not allowed …","Page-level write-through; indirectly determines the …","Page-level cache disable; indirectly determines the …","Accessed; indicates whether this entry has been used for …","If IA32_EFER.NXE = 1, execute-disable If 1, instruction …","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the …","A PML4 Entry consists of an address and a bunch of flags.","","Creates a new PML4Entry.","Retrieves the physical address in this entry.","","Is page present?","Read/write; if 0, writes may not be allowed to the …","User/supervisor; if 0, user-mode accesses are not allowed …","Page-level write-through; indirectly determines the …","Page-level cache disable; indirectly determines the …","Accessed; indicates whether this entry has been used for …","If IA32_EFER.NXE = 1, execute-disable. If 1, instruction …","PDPT configuration bit description.","Present; must be 1 to map a 1-GByte page or reference a …","Read/write; if 0, writes may not be allowed to the …","User/supervisor; user-mode accesses are not allowed to …","Page-level write-through.","Page-level cache disable.","Accessed; if PS set indicates whether software has …","Dirty; if PS indicates whether software has written to …","Page size; if set this entry maps a 1-GByte page; …","Global; if PS && CR4.PGE = 1, determines whether the …","Indirectly determines the memory type used to access the …","If IA32_EFER.NXE = 1, execute-disable If 1, instruction …","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the …","A PDPT Entry consists of an address and a bunch of flags.","","Creates a new PDPTEntry.","Retrieves the physical address in this entry.","Returns the flags corresponding to this entry.","Is page present?","Read/write; if 0, writes may not be allowed to the …","User/supervisor; user-mode accesses are not allowed to …","Page-level write-through.","Page-level cache disable.","Accessed; indicates whether this entry has been used for …","Indirectly determines the memory type used to access the …","If IA32_EFER.NXE = 1, execute-disable. If 1, instruction …","Page size; if set this entry maps a 1-GByte page; …","PD configuration bits description.","Present; must be 1 to map a 2-MByte page or reference a …","Read/write; if 0, writes may not be allowed to the …","User/supervisor; user-mode accesses are not allowed to …","Page-level write-through.","Page-level cache disable.","Accessed; if PS set indicates whether software has …","Dirty; if PS indicates whether software has written to …","Page size; if set this entry maps a 2-MByte page; …","Global; if PS && CR4.PGE = 1, determines whether the …","Indirectly determines the memory type used to access the …","If IA32_EFER.NXE = 1, execute-disable If 1, instruction …","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the …","A PD Entry consists of an address and a bunch of flags.","","Creates a new PDEntry.","Retrieves the physical address in this entry.","Returns the flags corresponding to this entry.","Present; must be 1 to map a 2-MByte page or reference a …","Read/write; if 0, writes may not be allowed to the …","User/supervisor; user-mode accesses are not allowed to …","Page-level write-through.","Page-level cache disable.","Accessed; if PS set indicates whether software has …","Dirty; if PS set indicates whether software has written …","Page size; if set this entry maps a 2-MByte page; …","Global; if PS && CR4.PGE = 1, determines whether the …","Indirectly determines the memory type used to access the …","If IA32_EFER.NXE = 1, execute-disable. If 1, instruction …","PT Entry bits description.","Present; must be 1 to map a 4-KByte page.","Read/write; if 0, writes may not be allowed to the …","User/supervisor; user-mode accesses are not allowed to …","Page-level write-through.","Page-level cache disable.","Accessed; indicates whether software has accessed the …","Dirty; indicates whether software has written to the …","Global; if CR4.PGE = 1, determines whether the …","If IA32_EFER.NXE = 1, execute-disable If 1, instruction …","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the …","A PT Entry consists of an address and a bunch of flags.","","Creates a new PTEntry.","Retrieves the physical address in this entry.","Returns the flags corresponding to this entry.","Present; must be 1 to map a 4-KByte page or reference a …","Read/write; if 0, writes may not be allowed to the …","User/supervisor; user-mode accesses are not allowed to …","Page-level write-through.","Page-level cache disable.","Accessed; if PS set indicates whether software has …","Dirty; if PD_PS set indicates whether software has …","Global; if PS && CR4.PGE = 1, determines whether the …","If IA32_EFER.NXE = 1, execute-disable. If 1, instruction …","","Read the RIP register (instruction pointer).","Read the RSP register (stack pointer register).","Read the RBP register (base pointer register).","Processor state stored in the RFLAGS register.","The RFLAGS register. This is duplicated code from bits32 …","ID Flag (ID)","Virtual Interrupt Pending (VIP)","Virtual Interrupt Flag (VIF)","Alignment Check (AC)","Virtual-8086 Mode (VM)","Resume Flag (RF)","Nested Task (NT)","I/O Privilege Level (IOPL) 0","I/O Privilege Level (IOPL) 1","I/O Privilege Level (IOPL) 2","I/O Privilege Level (IOPL) 3","Overflow Flag (OF)","Direction Flag (DF)","Interrupt Enable Flag (IF)","Trap Flag (TF)","Sign Flag (SF)","Zero Flag (ZF)","Auxiliary Carry Flag (AF)","Parity Flag (PF)","Bit 1 is always 1.","Carry Flag (CF)","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the …","Creates a new Flags entry. Ensures bit 1 is set.","Creates a new Flags with the given I/O privilege level.","","","","","Entry for IDT, GDT or LDT.","","Create a new segment, TSS or LDT descriptor by setting …","Creates a new descriptor with selector and offset (for …","Sets the interrupt stack table index. The 3-bit IST index …","Reload code segment register. Note this is special since …","Write GS Segment Base Needs FSGSBASE-Enable Bit (bit 16 …","Write FS Segment Base Needs FSGSBASE-Enable Bit (bit 16 …","Read GS Segment Base Needs FSGSBASE-Enable Bit (bit 16 of …","Read FS Segment Base Needs FSGSBASE-Enable Bit (bit 16 of …","“Dereferences” the fs register at offset 0.","“Dereferences” the gs register at offset 0.","Swap the GS register.","Program x86 enclaves.","Add a Page to an Uninitialized Enclave.","Add a Page to an Initialized Enclave.","Mark a page in EPC as Blocked.","Create an SECS page in the Enclave Page Cache","Read From a Debug Enclave.","Write to a Debug Enclave.","Extend Uninitialized Enclave Measurement by 256 Bytes","Initialize an Enclave for Execution","Loads and verifies an EPC page and marks the page as …","Loads, verifies an EPC page and marks the page as …","Restrict the Permissions of an EPC Page.","Change the Type of an EPC Page.","Add Version Array.","Remove a page from the EPC.","Activates EBLOCK Checks.","Invalidate an EPC Page and Write out to Main Memory.","Accept Changes to an EPC Page.","Initialize a Pending Page.","Enters an Enclave.","Exits an Enclave.","Retrieves a Cryptographic Key.","Extend an EPC Page Permissions.","Create a Cryptographic Report of the Enclave.","Re-Enters an Enclave.","Invokes an OS system-call handler at privilege level 0.","","","","","","","","Helpers to program the task state segment. See Intel 3a, …","Although hardware task-switching is not supported in …","","The full 64-bit canonical forms of the stack pointers …","","The full 64-bit canonical forms of the interrupt stack …","","","The 16-bit offset to the I/O permission bit map from the …","Creates a new empty TSS.","Sets the stack pointer (<code>stack_ptr</code>) to be used for when an …","Sets the stack pointer (<code>stack_ptr</code>) to be used when an …","Virtualize processor hardware for multiple software …","Enable VMX operation.","Disable VMX operation.","Clear VMCS.","Load current VMCS pointer.","Return current VMCS pointer.","Read a specified field from a VMCS.","Write to a specified field in a VMCS.","Launch virtual machine.","Resume virtual machine.","Register information and driver to program xAPIC, X2APIC …","To control an I/O APIC.","","","","","","","Number of supported interrupts by this IO APIC.","x2APIC, the most recent APIC on x86 for large servers …","Represents an x2APIC driver instance.","Create a new x2APIC driver object for the local core.","Attach to APIC (enable x2APIC mode, initialize LINT0)","Detach from APIC (disable x2APIC and xAPIC mode).","Send an IPI to yourself.","Information about the xAPIC for the local APIC.","Local APIC ID register. Read-only. See Section 10.12.5.1 …","Local APIC Version register. Read-only. Same version used …","Task Priority Register (TPR). Read/write. Bits 31:8 are …","Processor Priority Register (PPR). Read-only.","EOI register. Write-only.","Logical Destination Register (LDR). Read/write in xAPIC …","Spurious Interrupt Vector Register (SVR). Read/write. See …","In-Service Register (ISR); bits 31:0. Read-only.","ISR bits 63:32. Read-only.","ISR bits 95:64. Read-only.","ISR bits 127:96. Read-only.","ISR bits 159:128. Read-only.","ISR bits 191:160. Read-only.","ISR bits 223:192. Read-only.","ISR bits 255:224. Read-only.","Trigger Mode Register (TMR); bits 31:0. Read-only.","TMR bits 63:32. Read-only.","TMR bits 95:64. Read-only.","TMR bits 127:96. Read-only.","TMR bits 159:128. Read-only.","TMR bits 191:160. Read-only.","TMR bits 223:192. Read-only.","TMR bits 255:224. Read-only.","Interrupt Request Register (IRR); bits 31:0. Read-only.","IRR bits 63:32. Read-only.","IRR bits 95:64. Read-only.","IRR bits 127:96. Read-only.","IRR bits 159:128. Read-only.","IRR bits 191:160. Read-only.","IRR bits 223:192. Read-only.","IRR bits 255:224. Read-only.","Error Status Register (ESR). Read/write. See Section …","LVT CMCI register. Read/write. See Figure 10-8 for …","Interrupt Command Register (ICR). Read/write. See Figure …","Interrupt Command Register (ICR). Read/write. See Figure …","LVT Timer register. Read/write. See Figure 10-8 for …","LVT Thermal Sensor register. Read/write. See Figure 10-8 …","LVT Performance Monitoring register. Read/write. See …","LVT LINT0 register. Read/write. See Figure 10-8 for …","LVT LINT1 register. Read/write. See Figure 10-8 for …","LVT Error register. Read/write. See Figure 10-8 for …","Initial Count register (for Timer). Read/write.","Current Count register (for Timer). Read-only.","Divide Configuration Register (DCR; for Timer). …","State for the XAPIC driver.","Create a new xAPIC object for the local CPU.","Attach driver to the xAPIC (enables device).","Detach driver form the xAPIC (disables device).","Specify IPI Delivery Mode","Delivers the interrupt specified in the vector field to …","Same as fixed mode, except that the interrupt is …","Delivers an SMI interrupt to the target processor or …","Reserved","Delivers an NMI interrupt to the target processor or …","Delivers an INIT request to the target processor or …","Sends a special start-up IPI (called a SIPI) to the …","Specify IPI Destination Mode.","","","Specify Delivery Status","","","IPI Level","","","IPI Trigger Mode","","","IPI Destination Shorthand","","","","","Abstract the IPI control register","Short-hand to create a Icr value that will work for an …","","Get lower 32-bits of the Icr register.","Get upper 32-bits of the Icr register.","Encodes the id of a core.","A core destination encoded as an xAPIC ID.","A core destination encoded as an x2APIC ID.","Returns the Logical x2APIC ID.","Returns the logical address relative to a cluster for a …","Returns the cluster ID a given APIC ID belongs to …","Abstracts common interface of local APIC (x2APIC, xAPIC) …","Is a bootstrap processor?","Return APIC ID.","Returns the logical APIC ID.","Read APIC version","End Of Interrupt – Acknowledge interrupt delivery.","Enable TSC deadline timer.","Set TSC deadline value.","Send a INIT IPI to a core.","Deassert INIT IPI.","Send a STARTUP IPI to a core.","Send a generic IPI.","Functions to read and write control registers. See Intel …","","","","","","","","","","","","","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the …","","Enables use of Protection Keys (MPK).","Enable Supervisor Mode Access Prevention.","Enable Supervisor Mode Execution Protection.","Enable XSAVE and Processor Extended States.","Enables process-context identifiers (PCIDs).","Enables the instructions RDFSBASE, RDGSBASE, WRFSBASE, …","Enables Safer Mode Extensions (Trusted Execution …","Enables Virtual Machine Extensions.","Enables 5-Level Paging.","Enable User-Mode Instruction Prevention (the SGDT, SIDT, …","Enables unmasked SSE exceptions.","Enables Streaming SIMD Extensions (SSE) instructions and …","Enable Performance-Monitoring Counters","Enable shared (PDE or PTE) address translation between …","Enable machine check interrupts.","Enable: Physical Address Extension (allows to address …","Enable Page Size Extensions (allows for pages larger than …","If set, enables debug register based breaks on I/O space …","If set, disables ability to take time-stamps.","If set, enables support for the virtual interrupt flag …","If set, enables support for the virtual interrupt flag …","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the …","","","","","","","","","","","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the …","Read cr0","Write cr0.","Contains page-fault linear address.","Write cr2, for instance to reset cr2","Contains page-table root pointer.","Switch page-table PML4 pointer.","Contains various flags to control operations in protected …","Write cr4.","Read Extended Control Register XCR0. Only supported if …","Write to Extended Control Register XCR0. Only supported …","Functions and data-structures for working with descriptor …","A struct describing a pointer to a descriptor table (GDT …","Size of the DT.","Pointer to the memory region containing the DT.","","","Load the GDTR register with the specified base and limit.","Retrieve base and limit from the GDTR register.","Loads the segment selector into the selector field of the …","Returns the segment selector from the local descriptor …","Load the IDTR register with the specified base and limit.","Retrieve base and limit from the IDTR register.","I/O port functionality.","Write 8 bits to port","Read 8 bits from port","Write 16 bits to port","Read 16 bits from port","Write 32 bits to port","Read 32 bits from port","Shared interrupt description and set-up code. See the …","x86 Exception description (see also Intel Vol. 3a Chapter …","","","","","","","","","","","","","","","","","","","","","","","","","","x86 External Interrupts (1-32).","","0: The fault was caused by a non-present page. 1: The …","0: The access causing the fault was a read. 1: The access …","0: The access causing the fault originated when the …","0: The fault was not caused by reserved bit violation. 1: …","0: The fault was not caused by an instruction fetch. 1: …","0: The fault was not by protection keys. 1: There was a …","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the …","Enable Interrupts.","Disable Interrupts.","MSR value list and function to read and write them.","Write 64 bits to msr register.","Read 64 bits msr register.","See Section 35.16, MSRs in Pentium Processors,  and see  …","See Section 35.16, MSRs in Pentium Processors.","See Section 35.16, MSRs in Pentium Processors,  and see  …","See Section 35.16, MSRs in Pentium Processors.","See Section 8.10.5, Monitor/Mwait Address Range …","See Section 8.10.5, Monitor/Mwait Address  Range …","See Section 17.13, Time-Stamp Counter,  and see Table …","See Section 17.13, Time-Stamp Counter.","Model Specific Platform ID (R)","Platform ID (R)  See Table 35-2. The operating system can …","Section 10.4.4, Local APIC Status and Location.","APIC Location and Status (R/W) See Table 35-2. See …","Processor Hard Power-On Configuration  (R/W) Enables and …","Processor Hard Power-On Configuration (R/W) Enables and  …","Processor Hard Power-On Configuration (R/W) Enables and …","Processor Soft Power-On Configuration (R/W)  Enables and …","Processor Frequency Configuration The bit field layout of …","Test Control Register","SMI Counter (R/O)","Control Features in IA-32 Processor (R/W) See Table 35-2 …","Per-Logical-Processor TSC ADJUST (R/W) See Table 35-2.","Last Branch Record 0 From IP (R/W) One of eight pairs of …","Last Branch Record 1 (R/W) See description of …","Last Branch Record 1 From IP (R/W) See description of …","Last Branch Record 2 From IP (R/W) See description of …","Last Branch Record 3 From IP (R/W) See description of …","Last Branch Record 4 (R/W) See description of …","Last Branch Record 4 From IP (R/W) See description of …","Last Branch Record 5 (R/W) See description of …","Last Branch Record 5 From IP (R/W) See description of …","Last Branch Record 6 (R/W) See description of …","Last Branch Record 6 From IP (R/W) See description of …","Last Branch Record 7 (R/W) See description of …","Last Branch Record 7 From IP (R/W) See description of …","Last Branch Record 0 (R/W)  One of 16 pairs of last …","Last Branch Record 1 To IP (R/W) See description of …","Last Branch Record 2 To IP (R/W) See description of …","Last Branch Record 3 To IP (R/W) See description of …","Last Branch Record 4 To IP (R/W) See description of …","Last Branch Record 5 To IP (R/W) See description of …","Last Branch Record 6 To IP (R/W) See description of …","Last Branch Record 7 To IP (R/W) See description of …","BIOS Update Trigger Register (W)  See Table 35-2.","BIOS Update Trigger Register.","BIOS Update Signature ID (R/W) See Table 35-2.","SMM Monitor Configuration (R/W) See Table 35-2.","If IA32_VMX_MISC[bit 15])","System Management Mode Physical Address Mask register  …","Performance Counter Register  See Table 35-2.","Performance Counter Register  See Table 35-2.","Performance Counter Register  See Table 35-2.","Performance Counter Register  See Table 35-2.","Performance Counter Register  See Table 35-2.","Performance Counter Register  See Table 35-2.","Performance Counter Register  See Table 35-2.","Performance Counter Register  See Table 35-2.","Scaleable Bus Speed(RO) This field indicates the intended …","see http://biosbits.org.","C-State Configuration Control (R/W)  Note: C-state values …","Power Management IO Redirection in C-state (R/W)  See …","Maximum Performance Frequency Clock Count (RW)  See Table …","Actual Performance Frequency Clock Count (RW)  See Table …","MTRR Information See Section 11.11.1, MTRR Feature  …","","","TSX Ctrl Register for TSX Async Abot (TAA) Migration. See …","CS register target for CPL 0 code (R/W) See Table 35-2. …","CS register target for CPL 0 code","Stack pointer for CPL 0 stack (R/W) See Table 35-2. See …","Stack pointer for CPL 0 stack","CPL 0 code entry point (R/W) See Table 35-2. See Section …","CPL 0 code entry point","","Machine Check Capabilities (R) See Table 35-2. See …","Machine Check Status. (R) See Table 35-2. See Section …","","","Machine Check Feature Enable (R/W) See Table 35-2. See …","Enhanced SMM Capabilities (SMM-RO) Reports SMM capability …","MC Bank Error Configuration (R/W)","Machine Check EAX/RAX Save State See Section 15.3.2.6, …","Machine Check EBX/RBX Save State See Section 15.3.2.6, …","Machine Check ECX/RCX Save State See Section 15.3.2.6, …","Machine Check EDX/RDX Save State See Section 15.3.2.6, …","Machine Check ESI/RSI Save State See Section 15.3.2.6, …","Machine Check EDI/RDI Save State See Section 15.3.2.6, …","Machine Check EBP/RBP Save State See Section 15.3.2.6, …","Performance Event Select for Counter 0 (R/W) Supports all …","Performance Event Select for Counter 1 (R/W) Supports all …","Performance Event Select for Counter 2 (R/W) Supports all …","Machine Check EFLAGS/RFLAG Save State See Section …","Performance Event Select for Counter 3 (R/W) Supports all …","Machine Check EIP/RIP Save State See Section 15.3.2.6, …","Machine Check Miscellaneous See Section 15.3.2.6, …","See Table 35-2; If CPUID.0AH:EAX[15:8] = 8","See Table 35-2; If CPUID.0AH:EAX[15:8] = 8","See Table 35-2; If CPUID.0AH:EAX[15:8] = 8","See Table 35-2; If CPUID.0AH:EAX[15:8] = 8","Machine Check R8 See Section 15.3.2.6, IA32_MCG Extended  …","Machine Check R9D/R9 See Section 15.3.2.6, IA32_MCG …","Machine Check R10 See Section 15.3.2.6, IA32_MCG Extended …","Machine Check R11 See Section 15.3.2.6, IA32_MCG Extended …","Machine Check R12 See Section 15.3.2.6, IA32_MCG Extended …","Machine Check R13 See Section 15.3.2.6, IA32_MCG Extended …","Machine Check R14 See Section 15.3.2.6, IA32_MCG Extended …","","See Table 35-2. See Section 14.1, Enhanced Intel  …","See Table 35-2. See Section 14.1, Enhanced Intel  …","Clock Modulation (R/W)  See Table 35-2. …","Thermal Interrupt Control (R/W) See Section 14.5.2, …","Thermal Monitor Status (R/W) See Section 14.5.2, Thermal …","Thermal Monitor 2 Control.","","Platform Feature Requirements (R)","","Offcore Response Event Select Register (R/W)","Offcore Response Event Select Register (R/W)","See http://biosbits.org.","See http://biosbits.org.","Maximum Ratio Limit of Turbo Mode RO if MSR_PLATFORM_INFO.…","if CPUID.6H:ECX[3] = 1","If CPUID.06H: EAX[6] = 1","If CPUID.06H: EAX[6] = 1","Last Branch Record Filtering Select Register (R/W)  See …","Last Branch Record Stack TOS (R/W)  Contains an index …","","Debug Control (R/W)  Controls how several debug features …","Debug Control (R/W)  Controls how several debug features …","Debug Control (R/W)  Controls how several debug features …","","Last Branch Record 0 (R/W)  One of four last branch …","","","Last Branch Record 2 See description of the …","Last Exception Record From Linear IP (R)  Contains a …","","Last Branch Record 3 See description of the …","Last Exception Record To Linear IP (R)  This area …","","See Table 35-2.","If IA32_MTRR_CAP[SMRR]  = 1","06_0FH","","06_2EH","Power Control Register. See http://biosbits.org.","Variable Range Base MTRR See Section 11.11.2.3, Variable …","Variable Range Mask MTRR See Section 11.11.2.3, Variable …","Variable Range Mask MTRR See Section 11.11.2.3, Variable …","Variable Range Mask MTRR See Section 11.11.2.3, Variable …","Variable Range Mask MTRR See Section 11.11.2.3, Variable …","Variable Range Mask MTRR See Section 11.11.2.3, Variable …","Variable Range Mask MTRR See Section 11.11.2.3, Variable …","Variable Range Mask MTRR See Section 11.11.2.3, Variable …","Variable Range Mask MTRR See Section 11.11.2.3, Variable …","Variable Range Mask MTRR See Section 11.11.2.3, Variable …","Variable Range Mask MTRR See Section 11.11.2.3, Variable …","Variable Range Mask MTRR See Section 11.11.2.3, Variable …","Variable Range Mask MTRR See Section 11.11.2.3, Variable …","Variable Range Mask MTRR See Section 11.11.2.3, Variable …","Variable Range Mask MTRR See Section 11.11.2.3, Variable …","Variable Range Mask MTRR See Section 11.11.2.3, Variable …","if IA32_MTRR_CAP[7:0] >  8","if IA32_MTRR_CAP[7:0] >  8","if IA32_MTRR_CAP[7:0] >  9","if IA32_MTRR_CAP[7:0] >  9","Fixed Range MTRR See Section 11.11.2.2, Fixed Range MTRRs.","Fixed Range MTRR See Section 11.11.2.2, Fixed Range MTRRs.","Fixed Range MTRR See Section 11.11.2.2, Fixed Range MTRRs.","Fixed Range MTRR See Section 11.11.2.2, Fixed Range MTRRs.","Fixed Range MTRR See Section 11.11.2.2, Fixed Range MTRRs …","Fixed Range MTRR See Section 11.11.2.2, Fixed Range MTRRs …","Fixed Range MTRR See Section 11.11.2.2, Fixed Range MTRRs.","Fixed Range MTRR See Section 11.11.2.2, Fixed Range MTRRs.","Fixed Range MTRR See Section 11.11.2.2, Fixed Range MTRRs.","Fixed Range MTRR See Section 11.11.2.2, Fixed Range MTRRs.","Fixed Range MTRR See Section 11.11.2.2, Fixed Range MTRRs.","Page Attribute Table See Section 11.11.2.2, Fixed Range …","See Table 35-2.","See Table 35-2.","See Table 35-2.","See Table 35-2.","See Table 35-2.","Always 0 (CMCI not supported).","See Table 35-2.","See Table 35-2.","See Table 35-2.","See Table 35-2.","See Table 35-2.","See Table 35-2.","See Table 35-2.","See Table 35-2.","See Table 35-2.","See Table 35-2.","See Table 35-2.","See Table 35-2.","See Table 35-2.","See Table 35-2.","See Table 35-2.","See Table 35-2.","See Table 35-2.","Default Memory Types (R/W)  Sets the memory type for the …","See Section 18.12.2, Performance Counters.","","See Section 18.12.2, Performance Counters.","See Section 18.12.2, Performance Counters.","See Section 18.12.2, Performance Counters.","See Section 18.12.2, Performance Counters.","See Section 18.12.2, Performance Counters.","See Section 18.12.2, Performance Counters.","See Section 18.12.2, Performance Counters.","See Section 18.12.2, Performance Counters.","Fixed-Function Performance Counter Register 0 (R/W)","Fixed-Function Performance Counter Register 0 (R/W)  See …","See Section 18.12.2, Performance Counters.","Fixed-Function Performance Counter Register 1 (R/W)","Fixed-Function Performance Counter Register 1 (R/W)  See …","See Section 18.12.2, Performance Counters.","Fixed-Function Performance Counter Register 2 (R/W)","Fixed-Function Performance Counter Register 2 (R/W)  See …","See Section 18.12.2, Performance Counters.","See Section 18.12.2, Performance Counters.","See Section 18.12.2, Performance Counters.","See Table 35-2. See Section 17.4.1, IA32_DEBUGCTL MSR.","RO. This applies to processors that do not support …","See Section 18.12.3, CCCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.3, CCCR MSRs.","Fixed-Function-Counter Control Register (R/W)","Fixed-Function-Counter Control Register (R/W)  See Table …","See Section 18.4.2, Global Counter Control Facilities.","See Table 35-2. See Section 18.4.2, Global Counter …","See Section 18.4.2, Global Counter Control Facilities.","See Table 35-2. See Section 18.4.2, Global Counter …","See Section 18.4.2, Global Counter Control Facilities.","See Table 35-2. See Section 18.4.2, Global Counter …","See Section 18.7.2.1, Uncore Performance Monitoring  …","Uncore PMU global control","See Section 18.7.2.1, Uncore Performance Monitoring  …","Uncore PMU main status","See Section 18.7.2.1, Uncore Performance Monitoring  …","See Section 18.7.2.1, Uncore Performance Monitoring  …","Uncore W-box perfmon fixed counter","Uncore fixed counter control (R/W)","See Section 18.7.2.1, Uncore Performance Monitoring  …","Uncore U-box perfmon fixed counter control MSR","Uncore fixed counter","See Section 18.7.2.3, Uncore Address/Opcode Match MSR.","Uncore C-Box configuration information (R/O)","","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.7.2.2, Uncore Performance Event …","Uncore Arb unit, performance counter 0","See Section 18.12.1, ESCR MSRs.","See Section 18.7.2.2, Uncore Performance Event …","Uncore Arb unit, performance counter 1","See Section 18.12.1, ESCR MSRs.","See Section 18.7.2.2, Uncore Performance Event …","Uncore Arb unit, counter 0 event select MSR","See Section 18.12.1, ESCR MSRs.","See Section 18.7.2.2, Uncore Performance Event …","Uncore Arb unit, counter 1 event select MSR","See Section 18.12.1, ESCR MSRs.","See Section 18.7.2.2, Uncore Performance Event …","See Section 18.12.1, ESCR MSRs.","See Section 18.7.2.2, Uncore Performance Event …","See Section 18.12.1, ESCR MSRs.","See Section 18.7.2.2, Uncore Performance Event …","See Section 18.12.1, ESCR MSRs.","See Section 18.7.2.2, Uncore Performance Event …","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs. This MSR is not available …","See Section 18.12.1, ESCR MSRs. This MSR is not available …","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.7.2.2, Uncore Performance Event …","See Section 18.12.1, ESCR MSRs.","See Section 18.7.2.2, Uncore Performance Event …","See Section 18.12.1, ESCR MSRs.","See Section 18.7.2.2, Uncore Performance Event …","See Section 18.12.1, ESCR MSRs.","See Section 18.7.2.2, Uncore Performance Event …","See Section 18.12.1, ESCR MSRs.","See Section 18.7.2.2, Uncore Performance Event …","See Section 18.12.1, ESCR MSRs.","See Section 18.7.2.2, Uncore Performance Event …","See Section 18.7.2.2, Uncore Performance Event …","See Section 18.7.2.2, Uncore Performance Event …","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","","Precise Event-Based Sampling (PEBS) (R/W)  Controls the …","See Table 19-26.","see See Section 18.7.1.2, Load Latency Performance …","Note: C-state values are processor specific C-state code …","Package C2 Residency Note: C-state values are processor …","Note: C-state values are processor specific C-state code …","Package C4 Residency Note: C-state values are processor …","Note: C-state values are processor specific C-state code …","Package C6 Residency Note: C-state values are processor …","Note: C-state values are processor specific C-state code …","Note: C-state values are processor specific C-state code …","Note: C-state values are processor specific C-state code …","Note: C-state values are processor specific C-state code …","","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","","P6 Family Processors","See Section 14.3.2.3., IA32_MCi_ADDR MSRs .  The …","Defined in MCA architecture but not implemented in the P6 …","See Section 15.3.2.4,  IA32_MCi_MISC MSRs. The …","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","Bit definitions same as MC0_STATUS.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","","P6 Family Processors","See Section 15.3.2.3, IA32_MCi_ADDR MSRs. The …","Defined in MCA architecture but not implemented in the P6 …","See Section 15.3.2.4,  IA32_MCi_MISC MSRs. The …","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","Bit definitions same as MC0_STATUS.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","","P6 Family Processors","See Section 15.3.2.3, IA32_MCi_ADDR MSRs. The …","Defined in MCA architecture but not implemented in the P6 …","See Section 15.3.2.4,  IA32_MCi_MISC MSRs. The …","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","Bit definitions same as MC0_STATUS, except bits 0, 4, 57, …","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.2, IA32_MCi_STATUS MSRS.","Defined in MCA architecture but not implemented in P6 …","P6 Family Processors","See Section 15.3.2.3, IA32_MCi_ADDR MSRs. The …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs. The …","Defined in MCA architecture but not implemented in the P6 …","See Section 15.3.2.4,  IA32_MCi_MISC MSRs. The …","","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","Bit definitions same as MC0_STATUS.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.2, IA32_MCi_STATUS MSRS.","","P6 Family Processors","See Section 15.3.2.3, IA32_MCi_ADDR MSRs. The …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs. The …","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","Defined in MCA architecture but not implemented in the P6 …","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.   The …","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","06_0FH","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","06_0FH","See Section 15.3.2.3, IA32_MCi_ADDR MSRs. The …","06_0FH","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","06_0FH","06_1DH","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","06_1DH","Apply to Intel Xeon processor 7400 series (processor …","06_1DH","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","Misc MAC information of Integrated I/O. (R/O) see Section …","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","06_1AH","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","06_1AH","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","06_1AH","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","06_1AH","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","06_1AH","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","06_1AH","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","06_1AH","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","06_1AH","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","06_2EH","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","06_2EH","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","06_2EH","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","06_2EH","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","06_2EH","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","06_2EH","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","06_2EH","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","06_2EH","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","06_2EH","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","06_2EH","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","06_2EH","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","06_2EH","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","06_2EH","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","06_2EH","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","06_2EH","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","06_2EH","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","06_2EH","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","06_2EH","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","06_2EH","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","06_2EH","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","06_2EH","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","06_2EH","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","06_2EH","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","06_2EH","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","06_2EH","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","06_2EH","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","06_2EH","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","06_2EH","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","06_2EH","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","06_2EH","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","06_2EH","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","06_2EH","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","06_2EH","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","06_2EH","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","06_2EH","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","06_2EH","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","06_2EH","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","06_2EH","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","06_2EH","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","06_2EH","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","06_2EH","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","06_2EH","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","06_2EH","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","06_2EH","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","06_2EH","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","06_2EH","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","06_2EH","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","06_2EH","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","06_2EH","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","06_2EH","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","06_2EH","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","06_2EH","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","Reporting Register of Basic VMX Capabilities (R/O) See …","Capability Reporting Register of Pin-based VM-execution  …","Capability Reporting Register of Primary Processor-based  …","Capability Reporting Register of VM-exit Controls (R/O) …","Capability Reporting Register of VM-entry Controls (R/O) …","Reporting Register of Miscellaneous VMX Capabilities …","Capability Reporting Register of CR0 Bits Fixed to 0 …","If CPUID.01H:ECX.[bit 5] = 1","Capability Reporting Register of CR0 Bits Fixed to 1 …","If CPUID.01H:ECX.[bit 5] = 1","Capability Reporting Register of CR4 Bits Fixed to 0 …","Capability Reporting Register of CR4 Bits Fixed to 1 …","Capability Reporting Register of VMCS Field Enumeration …","Capability Reporting Register of Secondary …","Capability Reporting Register of EPT and VPID (R/O)  See …","If ( CPUID.01H:ECX.[bit 5],  IA32_VMX_PROCBASED_C TLS[bit …","Capability Reporting Register of Pin-based VM-execution …","Capability Reporting Register of Primary Processor-based  …","Capability Reporting Register of VM-exit Flex Controls …","Capability Reporting Register of VM-entry Flex Controls …","Capability Reporting Register of VM-function Controls …","If( CPUID.01H:ECX.[bit 5] =  1 and IA32_VMX_BASIC[bit 55] …","(If CPUID.0AH: EAX[15:8] >  0) & IA32_PERF_CAPABILITIES[ …","(If CPUID.0AH: EAX[15:8] >  1) & IA32_PERF_CAPABILITIES[ …","(If CPUID.0AH: EAX[15:8] >  2) & IA32_PERF_CAPABILITIES[ …","(If CPUID.0AH: EAX[15:8] >  3) & IA32_PERF_CAPABILITIES[ …","(If CPUID.0AH: EAX[15:8] >  4) & IA32_PERF_CAPABILITIES[ …","(If CPUID.0AH: EAX[15:8] >  5) & IA32_PERF_CAPABILITIES[ …","(If CPUID.0AH: EAX[15:8] >  6) & IA32_PERF_CAPABILITIES[ …","(If CPUID.0AH: EAX[15:8] >  7) & IA32_PERF_CAPABILITIES[ …","Enhanced SMM Feature Control (SMM-RW) Reports SMM …","SMM Delayed (SMM-RO) Reports the interruptible state of …","SMM Blocked (SMM-RO) Reports the blocked state of all …","Trace Output Base Register (R/W)","Trace Output Mask Pointers Register (R/W)","Trace Control Register (R/W)","Tracing Status Register (R/W)","Trace Filter CR3 Match Register (R/W)","Trace Start Address 0","Trace End Address 0","Trace Start Address 1","Trace End Address 1","Trace Start Address 3","Trace End Address 3","Trace Start Address 4","Trace End Address 4","DS Save Area (R/W) See Table 35-2. Points to the DS …","Unit Multipliers used in RAPL Interfaces (R/O)  See …","Package C3 Interrupt Response Limit (R/W)  Note: C-state …","Package C6 Interrupt Response Limit (R/W)  This MSR …","Package C7 Interrupt Response Limit (R/W)  This MSR …","PKG RAPL Power Limit Control (R/W)  See Section 14.7.3, …","PKG Energy Status (R/O)  See Section 14.7.3, Package RAPL …","Package RAPL Perf Status (R/O)","PKG RAPL Parameters (R/W) See Section 14.7.3,  Package …","DRAM RAPL Power Limit Control (R/W)  See Section 14.7.5, …","DRAM Energy Status (R/O)  See Section 14.7.5, DRAM RAPL …","DRAM Performance Throttling Status (R/O) See Section …","DRAM RAPL Parameters (R/W) See Section 14.7.5, DRAM RAPL …","Note: C-state values are processor specific C-state code …","Note: C-state values are processor specific C-state code …","PP0 RAPL Power Limit Control (R/W)  See Section 14.7.4, …","PP0 Energy Status (R/O)  See Section 14.7.4, PP0/PP1 RAPL …","PP0 Balance Policy (R/W)  See Section 14.7.4, PP0/PP1 …","PP0 Performance Throttling Status (R/O) See Section …","PP1 RAPL Power Limit Control (R/W)  See Section 14.7.4, …","PP1 Energy Status (R/O)  See Section 14.7.4, PP0/PP1 RAPL …","PP1 Balance Policy (R/W)  See Section 14.7.4, PP0/PP1 …","Nominal TDP Ratio (R/O)","ConfigTDP Level 1 ratio and power level (R/O)","ConfigTDP Level 2 ratio and power level (R/O)","ConfigTDP Control (R/W)","ConfigTDP Control (R/W)","Note: C-state values are processor specific C-state code …","Last Branch Record 8 From IP (R/W) See description of …","Last Branch Record 9 From IP (R/W) See description of …","Last Branch Record 10 From IP (R/W) See description of …","Last Branch Record 11 From IP (R/W) See description of …","Last Branch Record 12 From IP (R/W) See description of …","Last Branch Record 13 From IP (R/W) See description of …","Last Branch Record 14 From IP (R/W) See description of …","Last Branch Record 15 From IP (R/W) See description of …","Last Branch Record 8 To IP (R/W) See description of …","Last Branch Record 9 To IP (R/W) See description of …","Last Branch Record 10 To IP (R/W) See description of …","Last Branch Record 11 To IP (R/W) See description of …","Last Branch Record 12 To IP (R/W) See description of …","Last Branch Record 13 To IP (R/W) See description of …","Last Branch Record 14 To IP (R/W) See description of …","Last Branch Record 15 To IP (R/W) See description of …","TSC Target of Local APIC s TSC Deadline Mode (R/W)  See …","Uncore C-Box 0, counter 0 event select MSR","Uncore C-Box 0, counter 1 event select MSR","Uncore C-Box 0, performance counter 0","Uncore C-Box 0, performance counter 1","Uncore C-Box 1, counter 0 event select MSR","Uncore C-Box 1, counter 1 event select MSR","Uncore C-Box 1, performance counter 0","Uncore C-Box 1, performance counter 1","Uncore C-Box 2, counter 0 event select MSR","Uncore C-Box 2, counter 1 event select MSR","Uncore C-Box 2, performance counter 0","Uncore C-Box 2, performance counter 1","Uncore C-Box 3, counter 0 event select MSR","Uncore C-Box 3, counter 1 event select MSR.","Uncore C-Box 3, performance counter 0.","Uncore C-Box 3, performance counter 1.","x2APIC ID register (R/O) See x2APIC Specification.","x2APIC Version. If ( CPUID.01H:ECX.[bit 21]  = 1 )","x2APIC Task Priority register (R/W)","x2APIC Processor Priority register (R/O)","x2APIC End of Interrupt. If ( CPUID.01H:ECX.[bit 21]  = 1 …","x2APIC Logical Destination register (R/O)","x2APIC Spurious Interrupt Vector register (R/W)","x2APIC In-Service register bits [31:0] (R/O)","x2APIC In-Service register bits [63:32] (R/O)","x2APIC In-Service register bits [95:64] (R/O)","x2APIC In-Service register bits [127:96] (R/O)","x2APIC In-Service register bits [159:128] (R/O)","x2APIC In-Service register bits [191:160] (R/O)","x2APIC In-Service register bits [223:192] (R/O)","x2APIC In-Service register bits [255:224] (R/O)","x2APIC Trigger Mode register bits [31:0] (R/O)","x2APIC Trigger Mode register bits [63:32] (R/O)","x2APIC Trigger Mode register bits [95:64] (R/O)","x2APIC Trigger Mode register bits [127:96] (R/O)","x2APIC Trigger Mode register bits [159:128] (R/O)","x2APIC Trigger Mode register bits [191:160] (R/O)","x2APIC Trigger Mode register bits [223:192] (R/O)","x2APIC Trigger Mode register bits [255:224] (R/O)","x2APIC Interrupt Request register bits [31:0] (R/O)","x2APIC Interrupt Request register bits [63:32] (R/O)","x2APIC Interrupt Request register bits [95:64] (R/O)","x2APIC Interrupt Request register bits [127:96] (R/O)","x2APIC Interrupt Request register bits [159:128] (R/O)","x2APIC Interrupt Request register bits [191:160] (R/O)","x2APIC Interrupt Request register bits [223:192] (R/O)","x2APIC Interrupt Request register bits [255:224] (R/O)","Error Status Register. If ( CPUID.01H:ECX.[bit 21]  = 1 )","x2APIC LVT Corrected Machine Check Interrupt register …","x2APIC Interrupt Command register (R/W)","x2APIC LVT Timer Interrupt register (R/W)","x2APIC LVT Thermal Sensor Interrupt register (R/W)","x2APIC LVT Performance Monitor register (R/W)","If ( CPUID.01H:ECX.[bit 21]  = 1 )","If ( CPUID.01H:ECX.[bit 21]  = 1 )","If ( CPUID.01H:ECX.[bit 21]  = 1 )","x2APIC Initial Count register (R/W)","x2APIC Current Count register (R/O)","x2APIC Divide Configuration register (R/W)","If ( CPUID.01H:ECX.[bit 21]  = 1 )","Uncore U-box perfmon global control MSR.","Uncore U-box perfmon global status MSR.","Uncore U-box perfmon global overflow control MSR.","Uncore U-box perfmon event select MSR.","Uncore U-box perfmon counter MSR.","Uncore B-box 0 perfmon local box control MSR.","Uncore B-box 0 perfmon local box status MSR.","Uncore B-box 0 perfmon local box overflow control MSR.","Uncore B-box 0 perfmon event select MSR.","Uncore B-box 0 perfmon counter MSR.","Uncore B-box 0 perfmon event select MSR.","Uncore B-box 0 perfmon counter MSR.","Uncore B-box 0 perfmon event select MSR.","Uncore B-box 0 perfmon counter MSR.","Uncore B-box 0 perfmon event select MSR.","Uncore B-box 0 perfmon counter MSR.","Uncore S-box 0 perfmon local box control MSR.","Uncore S-box 0 perfmon local box status MSR.","Uncore S-box 0 perfmon local box overflow control MSR.","Uncore S-box 0 perfmon event select MSR.","Uncore S-box 0 perfmon counter MSR.","Uncore S-box 0 perfmon event select MSR.","Uncore S-box 0 perfmon counter MSR.","Uncore S-box 0 perfmon event select MSR.","Uncore S-box 0 perfmon counter MSR.","Uncore S-box 0 perfmon event select MSR.","Uncore S-box 0 perfmon counter MSR.","Uncore B-box 1 perfmon local box control MSR.","Uncore B-box 1 perfmon local box status MSR.","Uncore B-box 1 perfmon local box overflow control MSR.","Uncore B-box 1 perfmon event select MSR.","Uncore B-box 1 perfmon counter MSR.","Uncore B-box 1 perfmon event select MSR.","Uncore B-box 1 perfmon counter MSR.","Uncore B-box 1 perfmon event select MSR.","Uncore B-box 1 perfmon counter MSR.","Uncore B-box 1vperfmon event select MSR.","Uncore B-box 1 perfmon counter MSR.","Uncore W-box perfmon local box control MSR.","Uncore W-box perfmon local box status MSR.","Uncore W-box perfmon local box overflow control MSR.","If ( CPUID.(EAX=07H,  ECX=0):EBX.[bit 12] = 1 )","If ( CPUID.(EAX=07H,  ECX=0):EBX.[bit 12] = 1 )","If ( CPUID.(EAX=07H,  ECX=0):EBX.[bit 12] = 1 )","Uncore W-box perfmon event select MSR.","Uncore W-box perfmon counter MSR.","Uncore W-box perfmon event select MSR.","Uncore W-box perfmon counter MSR.","Uncore W-box perfmon event select MSR.","Uncore W-box perfmon counter MSR.","Uncore W-box perfmon event select MSR.","Uncore W-box perfmon counter MSR.","Uncore M-box 0 perfmon local box control MSR.","Uncore M-box 0 perfmon local box status MSR.","Uncore M-box 0 perfmon local box overflow control MSR.","Uncore M-box 0 perfmon time stamp unit select MSR.","Uncore M-box 0 perfmon DSP unit select MSR.","Uncore M-box 0 perfmon ISS unit select MSR.","Uncore M-box 0 perfmon MAP unit select MSR.","Uncore M-box 0 perfmon MIC THR select MSR.","Uncore M-box 0 perfmon PGT unit select MSR.","Uncore M-box 0 perfmon PLD unit select MSR.","Uncore M-box 0 perfmon ZDP unit select MSR.","Uncore M-box 0 perfmon event select MSR.","Uncore M-box 0 perfmon counter MSR.","Uncore M-box 0 perfmon event select MSR.","Uncore M-box 0 perfmon counter MSR.","Uncore M-box 0 perfmon event select MSR.","Uncore M-box 0 perfmon counter MSR.","Uncore M-box 0 perfmon event select MSR.","Uncore M-box 0 perfmon counter MSR.","Uncore M-box 0 perfmon event select MSR.","Uncore M-box 0 perfmon counter MSR.","Uncore M-box 0 perfmon event select MSR.","Uncore M-box 0 perfmon counter MSR.","Uncore S-box 1 perfmon local box control MSR.","Uncore S-box 1 perfmon local box status MSR.","Uncore S-box 1 perfmon local box overflow control MSR.","Uncore S-box 1 perfmon event select MSR.","Uncore S-box 1 perfmon counter MSR.","Uncore S-box 1 perfmon event select MSR.","Uncore S-box 1 perfmon counter MSR.","Uncore S-box 1 perfmon event select MSR.","Uncore S-box 1 perfmon counter MSR.","Uncore S-box 1 perfmon event select MSR.","Uncore S-box 1 perfmon counter MSR.","Uncore M-box 1 perfmon local box control MSR.","Uncore M-box 1 perfmon local box status MSR.","Uncore M-box 1 perfmon local box overflow control MSR.","Uncore M-box 1 perfmon time stamp unit select MSR.","Uncore M-box 1 perfmon DSP unit select MSR.","Uncore M-box 1 perfmon ISS unit select MSR.","Uncore M-box 1 perfmon MAP unit select MSR.","Uncore M-box 1 perfmon MIC THR select MSR.","Uncore M-box 1 perfmon PGT unit select MSR.","Uncore M-box 1 perfmon PLD unit select MSR.","Uncore M-box 1 perfmon ZDP unit select MSR.","Uncore M-box 1 perfmon event select MSR.","Uncore M-box 1 perfmon counter MSR.","Uncore M-box 1 perfmon event select MSR.","Uncore M-box 1 perfmon counter MSR.","Uncore M-box 1 perfmon event select MSR.","Uncore M-box 1 perfmon counter MSR.","Uncore M-box 1 perfmon event select MSR.","Uncore M-box 1 perfmon counter MSR.","Uncore M-box 1 perfmon event select MSR.","Uncore M-box 1 perfmon counter MSR.","Uncore M-box 1 perfmon event select MSR.","Uncore M-box 1 perfmon counter MSR.","Uncore C-box 0 perfmon local box control MSR.","Uncore C-box 0 perfmon local box status MSR.","Uncore C-box 0 perfmon local box overflow control MSR.","Uncore C-box 0 perfmon event select MSR.","Uncore C-box 0 perfmon counter MSR.","Uncore C-box 0 perfmon event select MSR.","Uncore C-box 0 perfmon counter MSR.","Uncore C-box 0 perfmon event select MSR.","Uncore C-box 0 perfmon counter MSR.","Uncore C-box 0 perfmon event select MSR.","Uncore C-box 0 perfmon counter MSR.","Uncore C-box 0 perfmon event select MSR.","Uncore C-box 0 perfmon counter MSR.","Uncore C-box 0 perfmon event select MSR.","Uncore C-box 0 perfmon counter MSR.","Uncore C-box 4 perfmon local box control MSR.","Uncore C-box 4 perfmon local box status MSR.","Uncore C-box 4 perfmon local box overflow control MSR.","Uncore C-box 4 perfmon event select MSR.","Uncore C-box 4 perfmon counter MSR.","Uncore C-box 4 perfmon event select MSR.","Uncore C-box 4 perfmon counter MSR.","Uncore C-box 4 perfmon event select MSR.","Uncore C-box 4 perfmon counter MSR.","Uncore C-box 4 perfmon event select MSR.","Uncore C-box 4 perfmon counter MSR.","Uncore C-box 4 perfmon event select MSR.","Uncore C-box 4 perfmon counter MSR.","Uncore C-box 4 perfmon event select MSR.","Uncore C-box 4 perfmon counter MSR.","Uncore C-box 2 perfmon local box control MSR.","Uncore C-box 2 perfmon local box status MSR.","Uncore C-box 2 perfmon local box overflow control MSR.","Uncore C-box 2 perfmon event select MSR.","Uncore C-box 2 perfmon counter MSR.","Uncore C-box 2 perfmon event select MSR.","Uncore C-box 2 perfmon counter MSR.","Uncore C-box 2 perfmon event select MSR.","Uncore C-box 2 perfmon counter MSR.","Uncore C-box 2 perfmon event select MSR.","Uncore C-box 2 perfmon counter MSR.","Uncore C-box 2 perfmon event select MSR.","Uncore C-box 2 perfmon counter MSR.","Uncore C-box 2 perfmon event select MSR.","Uncore C-box 2 perfmon counter MSR.","Uncore C-box 6 perfmon local box control MSR.","Uncore C-box 6 perfmon local box status MSR.","Uncore C-box 6 perfmon local box overflow control MSR.","Uncore C-box 6 perfmon event select MSR.","Uncore C-box 6 perfmon counter MSR.","Uncore C-box 6 perfmon event select MSR.","Uncore C-box 6 perfmon counter MSR.","Uncore C-box 6 perfmon event select MSR.","Uncore C-box 6 perfmon counter MSR.","Uncore C-box 6 perfmon event select MSR.","Uncore C-box 6 perfmon counter MSR.","Uncore C-box 6 perfmon event select MSR.","Uncore C-box 6 perfmon counter MSR.","Uncore C-box 6 perfmon event select MSR.","Uncore C-box 6 perfmon counter MSR.","Uncore C-box 1 perfmon local box control MSR.","Uncore C-box 1 perfmon local box status MSR.","Uncore C-box 1 perfmon local box overflow control MSR.","Uncore C-box 1 perfmon event select MSR.","Uncore C-box 1 perfmon counter MSR.","Uncore C-box 1 perfmon event select MSR.","Uncore C-box 1 perfmon counter MSR.","Uncore C-box 1 perfmon event select MSR.","Uncore C-box 1 perfmon counter MSR.","Uncore C-box 1 perfmon event select MSR.","Uncore C-box 1 perfmon counter MSR.","Uncore C-box 1 perfmon event select MSR.","Uncore C-box 1 perfmon counter MSR.","Uncore C-box 1 perfmon event select MSR.","Uncore C-box 1 perfmon counter MSR.","Uncore C-box 5 perfmon local box control MSR.","Uncore C-box 5 perfmon local box status MSR.","Uncore C-box 5 perfmon local box overflow control MSR.","Uncore C-box 5 perfmon event select MSR.","Uncore C-box 5 perfmon counter MSR.","Uncore C-box 5 perfmon event select MSR.","Uncore C-box 5 perfmon counter MSR.","Uncore C-box 5 perfmon event select MSR.","Uncore C-box 5 perfmon counter MSR.","Uncore C-box 5 perfmon event select MSR.","Uncore C-box 5 perfmon counter MSR.","Uncore C-box 5 perfmon event select MSR.","Uncore C-box 5 perfmon counter MSR.","Uncore C-box 5 perfmon event select MSR.","Uncore C-box 5 perfmon counter MSR.","Uncore C-box 3 perfmon local box control MSR.","Uncore C-box 3 perfmon local box status MSR.","Uncore C-box 3 perfmon local box overflow control MSR.","Uncore C-box 3 perfmon event select MSR.","Uncore C-box 3 perfmon counter MSR.","Uncore C-box 3 perfmon event select MSR.","Uncore C-box 3 perfmon counter MSR.","Uncore C-box 3 perfmon event select MSR.","Uncore C-box 3 perfmon counter MSR.","Uncore C-box 3 perfmon event select MSR.","Uncore C-box 3 perfmon counter MSR.","Uncore C-box 3 perfmon event select MSR.","Uncore C-box 3 perfmon counter MSR.","Uncore C-box 3 perfmon event select MSR.","Uncore C-box 3 perfmon counter MSR.","Uncore C-box 7 perfmon local box control MSR.","Uncore C-box 7 perfmon local box status MSR.","Uncore C-box 7 perfmon local box overflow control MSR.","Uncore C-box 7 perfmon event select MSR.","Uncore C-box 7 perfmon counter MSR.","Uncore C-box 7 perfmon event select MSR.","Uncore C-box 7 perfmon counter MSR.","Uncore C-box 7 perfmon event select MSR.","Uncore C-box 7 perfmon counter MSR.","Uncore C-box 7 perfmon event select MSR.","Uncore C-box 7 perfmon counter MSR.","Uncore C-box 7 perfmon event select MSR.","Uncore C-box 7 perfmon counter MSR.","Uncore C-box 7 perfmon event select MSR.","Uncore C-box 7 perfmon counter MSR.","Uncore R-box 0 perfmon local box control MSR.","Uncore R-box 0 perfmon local box status MSR.","Uncore R-box 0 perfmon local box overflow control MSR.","Uncore R-box 0 perfmon IPERF0 unit Port 0 select MSR.","Uncore R-box 0 perfmon IPERF0 unit Port 1 select MSR.","Uncore R-box 0 perfmon IPERF0 unit Port 2 select MSR.","Uncore R-box 0 perfmon IPERF0 unit Port 3 select MSR.","Uncore R-box 0 perfmon IPERF0 unit Port 4 select MSR.","Uncore R-box 0 perfmon IPERF0 unit Port 5 select MSR.","Uncore R-box 0 perfmon IPERF0 unit Port 6 select MSR.","Uncore R-box 0 perfmon IPERF0 unit Port 7 select MSR.","Uncore R-box 0 perfmon QLX unit Port 0 select MSR.","Uncore R-box 0 perfmon QLX unit Port 1 select MSR.","Uncore R-box 0 perfmon QLX unit Port 2 select MSR.","Uncore R-box 0 perfmon QLX unit Port 3 select MSR.","Uncore R-box 0 perfmon event select MSR.","Uncore R-box 0 perfmon counter MSR.","Uncore R-box 0 perfmon event select MSR.","Uncore R-box 0 perfmon counter MSR.","Uncore R-box 0 perfmon event select MSR.","Uncore R-box 0 perfmon counter MSR.","Uncore R-box 0 perfmon event select MSR.","Uncore R-box 0 perfmon counter MSR.","Uncore R-box 0 perfmon event select MSR.","Uncore R-box 0 perfmon counter MSR.","Uncore R-box 0 perfmon event select MSR.","Uncore R-box 0 perfmon counter MSR.","Uncore R-box 0 perfmon event select MSR.","Uncore R-box 0 perfmon counter MSR.","Uncore R-box 0 perfmon event select MSR.","Uncore R-box 0 perfmon counter MSR.","Uncore R-box 1 perfmon local box control MSR.","Uncore R-box 1 perfmon local box status MSR.","Uncore R-box 1 perfmon local box overflow control MSR.","Uncore R-box 1 perfmon IPERF1 unit Port 8 select MSR.","Uncore R-box 1 perfmon IPERF1 unit Port 9 select MSR.","Uncore R-box 1 perfmon IPERF1 unit Port 10 select MSR.","Uncore R-box 1 perfmon IPERF1 unit Port 11 select MSR.","Uncore R-box 1 perfmon IPERF1 unit Port 12 select MSR.","Uncore R-box 1 perfmon IPERF1 unit Port 13 select MSR.","Uncore R-box 1 perfmon IPERF1 unit Port 14 select MSR.","Uncore R-box 1 perfmon IPERF1 unit Port 15 select MSR.","Uncore R-box 1 perfmon QLX unit Port 4 select MSR.","Uncore R-box 1 perfmon QLX unit Port 5 select MSR.","Uncore R-box 1 perfmon QLX unit Port 6 select MSR.","Uncore R-box 1 perfmon QLX unit Port 7 select MSR.","Uncore R-box 1 perfmon event select MSR.","Uncore R-box 1 perfmon counter MSR.","Uncore R-box 1 perfmon event select MSR.","Uncore R-box 1 perfmon counter MSR.","Uncore R-box 1 perfmon event select MSR.","Uncore R-box 1 perfmon counter MSR.","Uncore R-box 1 perfmon event select MSR.","Uncore R-box 1 perfmon counter MSR.","Uncore R-box 1 perfmon event select MSR.","Uncore R-box 1 perfmon counter MSR.","Uncore R-box 1 perfmon event select MSR.","Uncore R-box 1perfmon counter MSR.","Uncore R-box 1 perfmon event select MSR.","Uncore R-box 1 perfmon counter MSR.","Uncore R-box 1 perfmon event select MSR.","Uncore R-box 1 perfmon counter MSR.","Uncore B-box 0 perfmon local box match MSR.","Uncore B-box 0 perfmon local box mask MSR.","Uncore S-box 0 perfmon local box match MSR.","Uncore S-box 0 perfmon local box mask MSR.","Uncore B-box 1 perfmon local box match MSR.","Uncore B-box 1 perfmon local box mask MSR.","Uncore M-box 0 perfmon local box address match/mask …","Uncore M-box 0 perfmon local box address match MSR.","Uncore M-box 0 perfmon local box address mask MSR.","Uncore S-box 1 perfmon local box match MSR.","Uncore S-box 1 perfmon local box mask MSR.","Uncore M-box 1 perfmon local box address match/mask …","Uncore M-box 1 perfmon local box address match MSR.","Uncore M-box 1 perfmon local box address mask MSR.","Uncore C-box 8 perfmon local box control MSR.","Uncore C-box 8 perfmon local box status MSR.","Uncore C-box 8 perfmon local box overflow control MSR.","Uncore C-box 8 perfmon event select MSR.","Uncore C-box 8 perfmon counter MSR.","Uncore C-box 8 perfmon event select MSR.","Uncore C-box 8 perfmon counter MSR.","Uncore C-box 8 perfmon event select MSR.","Uncore C-box 8 perfmon counter MSR.","Uncore C-box 8 perfmon event select MSR.","Uncore C-box 8 perfmon counter MSR.","Uncore C-box 8 perfmon event select MSR.","Uncore C-box 8 perfmon counter MSR.","Uncore C-box 8 perfmon event select MSR.","Uncore C-box 8 perfmon counter MSR.","Uncore C-box 9 perfmon local box control MSR.","Uncore C-box 9 perfmon local box status MSR.","Uncore C-box 9 perfmon local box overflow control MSR.","Uncore C-box 9 perfmon event select MSR.","Uncore C-box 9 perfmon counter MSR.","Uncore C-box 9 perfmon event select MSR.","Uncore C-box 9 perfmon counter MSR.","Uncore C-box 9 perfmon event select MSR.","Uncore C-box 9 perfmon counter MSR.","Uncore C-box 9 perfmon event select MSR.","Uncore C-box 9 perfmon counter MSR.","Uncore C-box 9 perfmon event select MSR.","Uncore C-box 9 perfmon counter MSR.","Uncore C-box 9 perfmon event select MSR.","Uncore C-box 9 perfmon counter MSR.","GBUSQ Event Control and Counter  Register (R/W) See …","IFSB BUSQ Event Control and Counter  Register (R/W) See …","GBUSQ Event Control/Counter Register (R/W) Apply to Intel …","IFSB BUSQ Event Control and Counter Register (R/W)","GSNPQ Event Control and Counter  Register (R/W)  See …","IFSB SNPQ Event Control and Counter  Register (R/W)  See …","GSNPQ Event Control/Counter Register (R/W) Apply to Intel …","IFSB SNPQ Event Control and Counter  Register (R/W)","EFSB DRDY Event Control and Counter Register (R/W)  See …","FSB Event Control and Counter Register (R/W)  See Section …","EFSB DRDY Event Control and Counter  Register (R/W)","FSB Event Control/Counter Register (R/W) Apply to Intel …","FSB Event Control/Counter Register (R/W) Apply to Intel …","IFSB Latency Event Control Register  (R/W) See Section …","FSB Event Control/Counter Register (R/W) Apply to Intel …","IFSB Latency Event Counter Register  (R/W)  See Section …","L3/FSB Common Control Register (R/W) Apply to Intel Xeon …","If (  CPUID.80000001.EDX.[bit  20] or  CPUID.80000001.EDX.…","System Call Target Address (R/W)  See Table 35-2.","IA-32e Mode System Call Target Address (R/W)  See Table …","System Call Target Address the compatibility mode.","System Call Flag Mask (R/W)  See Table 35-2.","Map of BASE Address of FS (R/W)  See Table 35-2.","Map of BASE Address of GS (R/W)  See Table 35-2.","Swap Target of BASE Address of GS (R/W) See Table 35-2.","AUXILIARY TSC Signature. (R/W) See Table 35-2 and Section …","Instructions to generate random bits directly from the …","Generates a 16-bit random value and stores it in <code>e</code>.","Generates a 32-bit random value and stores it in <code>e</code>.","Generates a 64-bit random value and stores it in <code>e</code>.","RdRand trait to implement the generic rdrand_slice …","Fills <code>self</code> with random bits. Returns true on success or …","Fill a slice with random values.","Generates a 16-bit random value and stores it in <code>e</code>.","Generates a 32-bit random value and stores it in <code>e</code>.","Generates a 64-bit random value and stores it in <code>e</code>.","RdSeed trait to implement the generic rdseed_slice …","Fills <code>self</code> with random bits. Returns true on success or …","Fill a slice with random values.","Functionality to manipulate segment registers, build …","Specifies which element to load into a segment from …","Requestor Privilege Level","","","","Table Indicator (TI) 0 means GDT is used.","Table Indicator (TI) 1 means LDT is used.","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the …","Create a new SegmentSelector","Returns segment selector’s index in GDT or LDT.","Make a new segment selector from a untyped u16 value.","System-Segment and Gate-Descriptor Types 64-bit mode See …","","","","","","","System-Segment and Gate-Descriptor Types 32-bit mode. See …","","","","","","","","","","","","","Data Segment types for descriptors. See also Intel 3a, …","Data Read-Only","Data Read-Only, accessed","Data Read/Write","Data Read/Write, accessed","Data Read-Only, expand-down","Data Read-Only, expand-down, accessed","Data Read/Write, expand-down","Data Read/Write, expand-down, accessed","Code Segment types for descriptors. See also Intel 3a, …","Code Execute-Only","Code Execute-Only, accessed","Code Execute/Read","Code Execute/Read, accessed","Code Execute-Only, conforming","Code Execute-Only, conforming, accessed","Code Execute/Read, conforming","Code Execute/Read, conforming, accessed","Trait that defines the architecture specific functions …","","","","","Trait to implement for building a task-gate (this …","","Trait to define functions that build architecture …","","","Trait to define functions that build an architecture …","","","","Makes building descriptors easier (hopefully).","The segment limit is interpreted in 4-KByte units if this …","Indicates whether the segment is present in memory (set) …","Specifies the privilege level of the segment.","Toggle the AVL bit.","Set default operation size (false for 16bit segment, true …","Set L bit if this descriptor is a 64-bit code segment. In …","Set a the interrupt stack table index (only if this ends …","Entry for IDT, GDT or LDT. Provides size and location of …","","","","","Create a new segment, TSS or LDT descriptor by setting …","Creates a new descriptor with selector and offset (for …","Set the type of the descriptor (bits 8-11). Indicates the …","Specifies whether the segment descriptor is for a system …","Specifies the privilege level of the segment. The DPL is …","Set Present bit. Indicates whether the segment is present …","Set AVL bit. System software can use this bit to store …","Set L In IA-32e mode, bit 21 of the second doubleword of …","Set D/B. Performs different functions depending on …","Set G bit Determines the scaling of the segment limit …","Reload stack segment register.","Reload data segment register.","Reload es segment register.","Reload fs segment register.","Reload gs segment register.","Returns the current value of the code segment register.","Returns the current value of the extra segment register.","Returns the current value of the stack segment register.","Returns the current value of the data segment register.","Returns the current value of the FS segment register.","Returns the current value of the GS segment register.","Helpers to program the task state segment. See Intel 3a, …","Returns the current value of the task register.","Loads the task register.","Functions to read time stamp counters on x86.","Read the time stamp counter.","Read the time stamp counter.","Functions to flush the translation lookaside buffer (TLB).","Invalidate the given address in the TLB using the <code>invlpg</code> …","Invalidate the TLB completely by reloading the CR3 …","Data structures and definitions used by Virtual Machine …","Virtual-machine control structure fields.","VM-execution, VM-exit, and VM-entry control fields.","Virtual-processor identifier (VPID).","Posted-interrupt notification vector.","EPTP index.","Address of I/O bitmap A (full).","Address of I/O bitmap A (high).","Address of I/O bitmap B (full).","Address of I/O bitmap B (high).","Address of MSR bitmaps (full).","Address of MSR bitmaps (high).","VM-exit MSR-store address (full).","VM-exit MSR-store address (high).","VM-exit MSR-load address (full).","VM-exit MSR-load address (high).","VM-entry MSR-load address (full).","VM-entry MSR-load address (high).","Executive-VMCS pointer (full).","Executive-VMCS pointer (high).","PML address (full).","PML address (high).","TSC offset (full).","TSC offset (high).","Virtual-APIC address (full).","Virtual-APIC address (high).","APIC-access address (full).","APIC-access address (high).","Posted-interrupt descriptor address (full).","Posted-interrupt descriptor address (high).","VM-function controls (full).","VM-function controls (high).","EPT pointer (full).","EPT pointer (high).","EOI-exit bitmap 0 (full).","EOI-exit bitmap 0 (high).","EOI-exit bitmap 1 (full).","EOI-exit bitmap 1 (high).","EOI-exit bitmap 2 (full).","EOI-exit bitmap 2 (high).","EOI-exit bitmap 3 (full).","EOI-exit bitmap 3 (high).","EPTP-list address (full).","EPTP-list address (high).","VMREAD-bitmap address (full).","VMREAD-bitmap address (high).","VMWRITE-bitmap address (full).","VMWRITE-bitmap address (high).","Virtualization-exception information address (full).","Virtualization-exception information address (high).","XSS-exiting bitmap (full).","XSS-exiting bitmap (high).","ENCLS-exiting bitmap (full).","ENCLS-exiting bitmap (high).","Sub-page-permission-table pointer (full).","Sub-page-permission-table pointer (high).","TSC multiplier (full).","TSC multiplier (high).","Pin-based VM-execution controls.","Primary processor-based VM-execution controls.","Exception bitmap.","Page-fault error-code mask.","Page-fault error-code match.","CR3-target count.","VM-exit controls.","VM-exit MSR-store count.","VM-exit MSR-load count.","VM-entry controls.","VM-entry MSR-load count.","VM-entry interruption-information field.","VM-entry exception error code.","VM-entry instruction length.","TPR threshold.","Secondary processor-based VM-execution controls.","PLE_Gap.","PLE_Window.","CR0 guest/host mask.","CR4 guest/host mask.","CR0 read shadow.","CR4 read shadow.","CR3-target value 0.","CR3-target value 1.","CR3-target value 2.","CR3-target value 3.","Pin-based VM-execution controls.","External-interrupt exiting.","NMI exiting.","Virtual NMIs.","Activate VMX-preemption timer.","Process posted interrupts.","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the …","Primary processor-based VM-execution controls.","Interrupt-window exiting.","Use TSC offsetting.","HLT exiting.","INVLPG exiting.","MWAIT exiting.","RDPMC exiting.","RDTSC exiting.","CR3-load exiting.","CR3-store exiting.","CR8-load exiting.","CR8-store exiting.","Use TPR shadow.","NMI-window exiting.","MOV-DR exiting","Unconditional I/O exiting.","Use I/O bitmaps.","Monitor trap flag.","Use MSR bitmaps.","MONITOR exiting.","PAUSE exiting.","Activate secondary controls.","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the …","Secondary processor-based VM-execution controls.","Virtualize APIC accesses.","Enable EPT.","Descriptor-table exiting.","Enable RDTSCP.","Virtualize x2APIC mode.","Enable VPID.","WBINVD exiting.","Unrestricted guest.","APIC-register virtualization.","Virtual-interrupt delivery.","PAUSE-loop exiting.","RDRAND exiting.","Enable INVPCID.","Enable VM functions.","VMCS shadowing.","Enable ENCLS exiting.","RDSEED exiting.","Enable PML.","EPT-violation #VE.","Conceal VMX from PT.","Enable XSAVES/XRSTORS.","Mode-based execute control for EPT.","Sub-page write permissions for EPT.","Intel PT uses guest physical addresses.","Use TSC scaling.","Enable user wait and pause.","Enable ENCLV exiting.","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the …","VM-entry controls.","Load debug controls.","IA-32e mode guest.","Entry to SMM.","Deactivate dual-monitor treatment.","Load IA32_PERF_GLOBAL_CTRL.","Load IA32_PAT.","Load IA32_EFER.","Load IA32_BNDCFGS.","Conceal VMX from PT.","Load IA32_RTIT_CTL.","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the …","VM-exit controls.","Save debug controls.","Host address-space size.","Load IA32_PERF_GLOBAL_CTRL.","Acknowledge interrupt on exit.","Save IA32_PAT.","Load IA32_PAT.","Save IA32_EFER.","Load IA32_EFER.","Save VMX-preemption timer.","Clear IA32_BNDCFGS.","Conceal VMX from PT.","Clear IA32_RTIT_CTL.","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the …","Fields used to access guest-state area.","Guest ES selector.","Guest CS selector.","Guest SS selector.","Guest DS selector.","Guest FS selector.","Guest GS selector.","Guest LDTR selector.","Guest TR selector.","Guest interrupt status.","PML index.","VMCS link pointer (full).","VMCS link pointer (high).","Guest IA32_DEBUGCTL (full).","Guest IA32_DEBUGCTL (high).","Guest IA32_PAT (full).","Guest IA32_PAT (high).","Guest IA32_EFER (full).","Guest IA32_EFER (high).","Guest IA32_PERF_GLOBAL_CTRL (full).","Guest IA32_PERF_GLOBAL_CTRL (high).","Guest PDPTE0 (full).","Guest PDPTE0 (high).","Guest PDPTE1 (full).","Guest PDPTE1 (high).","Guest PDPTE2 (full).","Guest PDPTE2 (high).","Guest PDPTE3 (full).","Guest PDPTE3 (high).","Guest IA32_BNDCFGS (full).","Guest IA32_BNDCFGS (high).","Guest IA32_RTIT_CTL (full).","Guest IA32_RTIT_CTL (high).","Guest ES limit.","Guest CS limit.","Guest SS limit.","Guest DS limit.","Guest FS limit.","Guest GS limit.","Guest LDTR limit.","Guest TR limit.","Guest GDTR limit.","Guest IDTR limit.","Guest ES access rights.","Guest CS access rights.","Guest SS access rights.","Guest DS access rights.","Guest FS access rights.","Guest GS access rights.","Guest LDTR access rights.","Guest TR access rights.","Guest interruptibility state.","Guest activity state.","Guest SMBASE.","Guest IA32_SYSENTER_CS.","VMX-preemption timer value.","Guest CR0.","Guest CR3.","Guest CR4.","Guest ES base.","Guest CS base.","Guest SS base.","Guest DS base.","Guest FS base.","Guest GS base.","Guest LDTR base.","Guest TR base.","Guest GDTR base.","Guest IDTR base.","Guest DR7.","Guest RSP.","Guest RIP.","Guest RFLAGS.","Guest pending debug exceptions.","Guest IA32_SYSENTER_ESP.","Guest IA32_SYSENTER_EIP.","Fields used to access host-state area.","Host ES selector.","Host CS selector.","Host SS selector.","Host DS selector.","Host FS selector.","Host GS selector.","Host TR selector.","Host IA32_PAT (full).","Host IA32_PAT (high).","Host IA32_EFER (full).","Host IA32_EFER (high).","Host IA32_PERF_GLOBAL_CTRL (full).","Host IA32_PERF_GLOBAL_CTRL (high).","Host IA32_SYSENTER_CS.","Host CR0.","Host CR3.","Host CR4.","Host FS base.","Host GS base.","Host TR base.","Host GDTR base.","Host IDTR base.","Host IA32_SYSENTER_ESP.","Host IA32_SYSENTER_EIP.","Host RSP.","Host RIP.","VM-exit information fields.","Guest-physical address (full).","Guest-physical address (high).","VM-instruction error.","Exit reason.","VM-exit interruption information.","VM-exit interruption error code.","IDT-vectoring information field.","IDT-vectoring error code.","VM-exit instruction length.","VM-exit instruction information.","Exit qualification.","I/O RCX.","I/O RSI.","I/O RDI.","I/O RIP.","Guest-linear address.","A specialized <code>Result</code> type for VMX operations.","Possible outcomes of VMfail pseudo-function used to …","VMCS pointer is valid, but some other error was …","VMCS pointer is not valid.","A short-cut to the architecture (bits32 or bits64) this …","Support for the CPUID instructions.","Uses Rust’s <code>cpuid</code> function from the <code>arch</code> module.","","Main type used to query for information about the CPU we…","Low-level data-structure to store result of cpuid …","Return value EAX register","Return value EBX register","Return value ECX register","Return value EDX register","","Used to iterate over cache information contained in cpuid …","What type of cache are we dealing with?","","","","","","","Describes any kind of cache (TLB, Data and Instruction …","Number as retrieved from cpuid","Cache type","This table is taken from Intel manual (Section CPUID …","","","","","","Null - No more caches","Data cache","Instruction cache","Data and Instruction cache","4-31 = Reserved","","","","","","Iterates over the system topology in order to retrieve …","Gives detailed information about the current level in the …","What type of core we have at this level in the topology …","","Hyper-thread (Simultaneous multithreading)","","","","","","","","","L3 Cache Allocation Technology Enumeration Sub-leaf (EAX …","L2 Cache Allocation Technology Enumeration Sub-leaf (EAX …","Memory Bandwidth Allocation Enumeration Sub-leaf (EAX = …","Intel SGX Capability Enumeration Leaf, sub-leaf 0 (EAX = …","Iterator over the SGX sub-leafs (ECX >= 2).","Intel SGX EPC Enumeration Leaf, sub-leaves (EAX = 12H, …","","EBX:EAX and EDX:ECX provide information on the Enclave …","","Time Stamp Counter and Nominal Core Crystal Clock …","Processor Frequency Information","Deterministic Address Translation Structure Iterator","Deterministic Address Translation Structure","Deterministic Address Translation cache type (EDX bits 04 …","Null (indicates this sub-leaf is not valid).","","","Some unified TLBs will allow a single TLB entry to …","","","","","Information about Hypervisor …","Identifies the different Hypervisor products.","","","","","","","","","","","","","","","","","Macro which queries cpuid directly.","x86 Protection levels","","","","","Stops instruction execution and places the processor in a …","Read Processor ID","","Generate a software interrupt. This is a macro argument …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Iterate over all SoC vendor specific attributes.","","Iterate over all caches for this CPU. Note: cpuid is …","Iterate over all cache information.","Iterate over each sub-leaf with an  address translation …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Is a bootstrap processor?","Read local x2APIC ID.","In x2APIC mode, the 32-bit logical x2APIC ID, can be read …","Read APIC version.","Enable TSC timer","Set tsc deadline.","End Of Interrupt – Acknowledge interrupt delivery.","Send a INIT IPI to a core.","Deassert INIT IPI.","Send a STARTUP IPI to a core.","Send a generic IPI.","Is this the bootstrap core?","Read local APIC ID.","","Read APIC version","End Of Interrupt – Acknowledge interrupt delivery.","Enable TSC timer.","Set TSC deadline value.","Send a INIT IPI to a core.","Deassert INIT IPI.","Send a STARTUP IPI to a core.","Send a generic IPI.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the set difference of the two sets of flags.","","","","","","","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the intersection between the two sets of flags.","","","","","","","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the union of the two sets of flags.","","","","","","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","","","","","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flagseturn new CPUID struct.","Return information about vendor. This is typically a …","Query a set of features that are available on this CPU.","Query basic information about caches. This will just …","Retrieve serial number of processor.","Retrieve more elaborate information about caches (as …","Information about how monitor/mwait works on this CPU.","Query information about thermal and power management …","Find out about more features supported by this CPU.","Direct cache access info.","Info about performance monitoring (how many counters …","Information about topology (how many cores and what kind …","Information for saving/restoring extended register state.","Quality of service informations.","Quality of service enforcement information.","","Intel Processor Trace Enumeration Information.","Time Stamp Counter/Core Crystal Clock Information.","Processor Frequency Information.","","","","Extended functionality of CPU described here (including …","","Return vendor identification as human readable string.","Description of the cache (from Intel Manual)","Bits 00-31 of 96 bit processor serial number. (Available …","Bits 32-63 of 96 bit processor serial number. (Available …","","Version Information: Extended Family","Version Information: Extended Model","Version Information: Family","Version Information: Model","Version Information: Stepping ID","Brand Index","CLFLUSH line size (Value ∗ 8 = cache line size in bytes)","Initial APIC ID","Maximum number of addressable IDs for logical processors …","Streaming SIMD Extensions 3 (SSE3). A value of 1 …","PCLMULQDQ. A value of 1 indicates the processor supports …","64-bit DS Area. A value of 1 indicates the processor …","MONITOR/MWAIT. A value of 1 indicates the processor …","CPL Qualified Debug Store. A value of 1 indicates the …","Virtual Machine Extensions. A value of 1 indicates that …","Safer Mode Extensions. A value of 1 indicates that the …","Enhanced Intel SpeedStep® technology. A value of 1 …","Thermal Monitor 2. A value of 1 indicates whether the …","A value of 1 indicates the presence of the Supplemental …","L1 Context ID. A value of 1 indicates the L1 data cache …","A value of 1 indicates the processor supports FMA …","CMPXCHG16B Available. A value of 1 indicates that the …","Perfmon and Debug Capability: A value of 1 indicates the …","Process-context identifiers. A value of 1 indicates that …","A value of 1 indicates the processor supports the ability …","A value of 1 indicates that the processor supports SSE4.1.","A value of 1 indicates that the processor supports SSE4.2.","A value of 1 indicates that the processor supports x2APIC …","A value of 1 indicates that the processor supports MOVBE …","A value of 1 indicates that the processor supports the …","A value of 1 indicates that the processors local APIC …","A value of 1 indicates that the processor supports the …","A value of 1 indicates that the processor supports the …","A value of 1 indicates that the OS has enabled …","A value of 1 indicates the processor supports the AVX …","A value of 1 indicates that processor supports 16-bit …","A value of 1 indicates that processor supports RDRAND …","A value of 1 indicates the indicates the presence of a …","Floating Point Unit On-Chip. The processor contains an …","Virtual 8086 Mode Enhancements. Virtual 8086 mode …","Debugging Extensions. Support for I/O breakpoints, …","Page Size Extension. Large pages of size 4 MByte are …","Time Stamp Counter. The RDTSC instruction is supported, …","Model Specific Registers RDMSR and WRMSR Instructions. …","Physical Address Extension. Physical addresses greater …","Machine Check Exception. Exception 18 is defined for …","CMPXCHG8B Instruction. The compare-and-exchange 8 bytes …","APIC On-Chip. The processor contains an Advanced …","SYSENTER and SYSEXIT Instructions. The SYSENTER and …","Memory Type Range Registers. MTRRs are supported. The …","Page Global Bit. The global bit is supported in …","Machine Check Architecture. A value of 1 indicates the …","Conditional Move Instructions. The conditional move …","Page Attribute Table. Page Attribute Table is supported. …","36-Bit Page Size Extension. 4-MByte pages addressing …","Processor Serial Number. The processor supports the …","CLFLUSH Instruction. CLFLUSH Instruction is supported.","Debug Store. The processor supports the ability to write …","Thermal Monitor and Software Controlled Clock Facilities. …","Intel MMX Technology. The processor supports the Intel …","FXSAVE and FXRSTOR Instructions. The FXSAVE and FXRSTOR …","SSE. The processor supports the SSE extensions.","SSE2. The processor supports the SSE2 extensions.","Self Snoop. The processor supports the management of …","Max APIC IDs reserved field is Valid. A value of 0 for …","Thermal Monitor. The processor implements the thermal …","Pending Break Enable. The processor supports the use of …","Cache Type","Cache Level (starts at 1)","Self Initializing cache level (does not need SW …","Fully Associative cache","Maximum number of addressable IDs for logical processors …","Maximum number of addressable IDs for processor cores in …","System Coherency Line Size (Bits 11-00)","Physical Line partitions (Bits 21-12)","Ways of associativity (Bits 31-22)","Number of Sets (Bits 31-00)","Write-Back Invalidate/Invalidate (Bit 0) False: …","Cache Inclusiveness (Bit 1) False: Cache is not inclusive …","Complex Cache Indexing (Bit 2) False: Direct mapped cache.…","Smallest monitor-line size in bytes (default is processor…","Largest monitor-line size in bytes (default is processor…","Enumeration of Monitor-Mwait extensions (beyond EAX and …","Supports treating interrupts as break-event for MWAIT, …","Number of C0 sub C-states supported using MWAIT (Bits 03 …","Number of C1 sub C-states supported using MWAIT (Bits 07 …","Number of C2 sub C-states supported using MWAIT (Bits 11 …","Number of C3 sub C-states supported using MWAIT (Bits 15 …","Number of C4 sub C-states supported using MWAIT (Bits 19 …","Number of C5 sub C-states supported using MWAIT (Bits 23 …","Number of C6 sub C-states supported using MWAIT (Bits 27 …","Number of C7 sub C-states supported using MWAIT (Bits 31 …","Number of Interrupt Thresholds in Digital Thermal Sensor","Digital temperature sensor is supported if set.","Intel Turbo Boost Technology Available (see description …","ARAT. APIC-Timer-always-running feature is supported if …","PLN. Power limit notification controls are supported if …","ECMD. Clock modulation duty cycle extension is supported …","PTM. Package thermal management is supported if set.","HWP. HWP base registers (IA32_PM_ENABLE[bit 0], …","HWP Notification. IA32_HWP_INTERRUPT MSR is supported if …","HWP Activity Window. IA32_HWP_REQUEST[bits 41:32] is …","HWP Energy Performance Preference. IA32_HWP_REQUEST[bits …","HWP Package Level Request. IA32_HWP_REQUEST_PKG MSR is …","HDC. HDC base registers IA32_PKG_HDC_CTL, IA32_PM_CTL1, …","Intel® Turbo Boost Max Technology 3.0 available.","HWP Capabilities. Highest Performance change is supported …","HWP PECI override is supported if set.","Flexible HWP is supported if set.","Fast access mode for the IA32_HWP_REQUEST MSR is …","Ignoring Idle Logical Processor HWP request is supported …","Hardware Coordination Feedback Capability (Presence of …","The processor supports performance-energy bias preference …","FSGSBASE. Supports RDFSBASE/RDGSBASE/WRFSBASE/WRGSBASE if …","IA32_TSC_ADJUST MSR is supported if 1.","BMI1","HLE","AVX2","FDP_EXCPTN_ONLY. x87 FPU Data Pointer updated only on x87 …","SMEP. Supports Supervisor-Mode Execution Prevention if 1.","BMI2","Supports Enhanced REP MOVSB/STOSB if 1.","INVPCID. If 1, supports INVPCID instruction for system …","RTM","Supports Intel Resource Director Technology (RDT) …","Deprecates FPU CS and FPU DS values if 1.","MPX. Supports Intel Memory Protection Extensions if 1.","Supports Intel Resource Director Technology (RDT) …","Supports RDSEED.","Supports RDSEED (deprecated alias).","Supports ADX.","SMAP. Supports Supervisor-Mode Access Prevention (and the …","Supports CLFLUSHOPT.","Supports Intel Processor Trace.","Supports SHA Instructions.","Supports Intel® Software Guard Extensions (Intel® SGX …","Supports AVX512F.","Supports AVX512DQ.","AVX512_IFMA","AVX512PF","AVX512ER","AVX512CD","AVX512BW","AVX512VL","CLWB","Has PREFETCHWT1 (Intel® Xeon Phi™ only).","Supports user-mode instruction prevention if 1.","Supports protection keys for user-mode pages.","OS has set CR4.PKE to enable protection keys (and the …","RDPID and IA32_TSC_AUX are available.","Supports SGX Launch Configuration.","The value of MAWAU used by the BNDLDX and BNDSTX …","Value of bits [31:0] of IA32_PLATFORM_DCA_CAP MSR …","Version ID of architectural performance monitoring. (Bits …","Number of general-purpose performance monitoring counter …","Bit width of general-purpose, performance monitoring …","Length of EBX bit vector to enumerate architectural …","Number of fixed-function performance counters (if Version …","Bit width of fixed-function performance counters (if …","AnyThread deprecation","Core cycle event not available if 1.","Instruction retired event not available if 1.","Reference cycles event not available if 1.","Last-level cache reference event not available if 1.","Last-level cache misses event not available if 1.","Branch instruction retired event not available if 1.","Branch mispredict retired event not available if 1.","Number of logical processors at this level type. The …","Level number.","","x2APIC ID the current logical processor. (Bits 31-00)","Number of bits to shift right on x2APIC ID to get a …","Support for legacy x87 in XCR0.","Support for SSE 128-bit in XCR0.","Support for AVX 256-bit in XCR0.","Support for MPX BNDREGS in XCR0.","Support for MPX BNDCSR in XCR0.","Support for AVX512 OPMASK in XCR0.","Support for AVX512 ZMM Hi256 XCR0.","Support for AVX512 ZMM Hi16 in XCR0.","Support for PKRU in XCR0.","Support for PT in IA32_XSS.","Support for HDC in IA32_XSS.","Maximum size (bytes, from the beginning of the …","Maximum size (bytes, from the beginning of the …","CPU has xsaveopt feature.","Supports XSAVEC and the compacted form of XRSTOR if set.","Supports XGETBV with ECX = 1 if set.","Supports XSAVES/XRSTORS and IA32_XSS if set.","The size in bytes of the XSAVE area containing all states …","Iterator over extended state enumeration levels >= 2.","The size in bytes (from the offset specified in EBX) of …","The offset in bytes of this extended state components …","True if the bit n (corresponding to the sub-leaf index) …","True if bit n is supported in XCR0.","Returns true when the compacted format of an XSAVE area …","Maximum range (zero-based) of RMID within this physical …","Supports L3 Cache Intel RDT Monitoring.","L3 Cache Monitoring.","Conversion factor from reported IA32_QM_CTR value to …","Maximum range (zero-based) of RMID of L3.","Supports occupancy monitoring.","Supports total bandwidth monitoring.","Supports local bandwidth monitoring.","Supports L3 Cache Allocation.","Supports L2 Cache Allocation.","Supports Memory Bandwidth Allocation.","L3 Cache Allocation Information.","L2 Cache Allocation Information.","Memory Bandwidth Allocation Information.","Length of the capacity bit mask using minus-one notation.","Bit-granular map of isolation/contention of allocation …","Highest COS number supported for this Leaf.","Is Code and Data Prioritization Technology supported?","Length of the capacity bit mask using minus-one notation.","Bit-granular map of isolation/contention of allocation …","Highest COS number supported for this Leaf.","Reports the maximum MBA throttling value supported for …","Highest COS number supported for this Leaf.","Reports whether the response of the delay values is …","Has SGX1 support.","Has SGX2 support.","Supports ENCLV instruction leaves EINCVIRTCHILD, …","Supports ENCLS instruction leaves ETRACKC, ERDINFO, …","Bit vector of supported extended SGX features.","The maximum supported enclave size in non-64-bit mode is …","The maximum supported enclave size in 64-bit mode is …","Reports the valid bits of SECS.ATTRIBUTES[127:0] that …","Iterator over SGX sub-leafs.","The physical address of the base of the EPC section","Size of the corresponding EPC section within the …","If true, Indicates that IA32_RTIT_CTL.CR3Filter can be …","If true, Indicates support of Configurable PSB and …","If true, Indicates support of IP Filtering, TraceStop …","If true, Indicates support of MTC timing packet and …","Indicates support of PTWRITE. Writes can set IA32_RTIT_CTL…","Support of Power Event Trace. Writes can set IA32_RTIT_CTL…","If true, Tracing can be enabled with IA32_RTIT_CTL.ToPA = …","If true, ToPA tables can hold any number of output …","If true, Indicates support of Single-Range Output scheme.","If true, Indicates support of output to Trace Transport …","If true, Generated packets which contain IP payloads have …","Number of configurable Address Ranges for filtering (Bits …","Bitmap of supported MTC period encodings (Bit 31:16).","Bitmap of supported Cycle Threshold value encodings (Bits …","Bitmap of supported Configurable PSB frequency encodings …","An unsigned integer which is the denominator of the …","An unsigned integer which is the numerator of the …","An unsigned integer which is the nominal frequency of the …","“TSC frequency” = “core crystal clock frequency” …","Processor Base Frequency (in MHz).","Maximum Frequency (in MHz).","Bus (Reference) Frequency (in MHz).","4K page size entries supported by this structure","2MB page size entries supported by this structure","4MB page size entries supported by this structure","1GB page size entries supported by this structure","Fully associative structure","Partitioning (0: Soft partitioning between the logical …","Ways of associativity.","Number of Sets.","Translation cache type field.","Translation cache level (starts at 1)","Maximum number of addressable IDs for logical processors …","","","","","","","","TSC frequency in kHz.","(Virtual) Bus (local apic timer) frequency in kHz.","Retrieve processor brand string.","Extended Processor Signature and Feature Bits.","Cache Line size in bytes","L2 Associativity field","Cache size in 1K units","#Physical Address Bits","#Linear Address Bits","Is Invariant TSC available?","Is LAHF/SAHF available in 64-bit mode?","Is LZCNT available?","Is PREFETCHW available?","Are fast system calls available.","Is there support for execute disable bit.","Is there support for 1GiB pages.","Check support for rdtscp instruction.","Check support for 64-bit mode.","Secure Memory Encryption is supported if set.","Secure Encrypted Virtualization is supported if set.","The Page Flush MSR is available if set.","SEV Encrypted State is supported if set.","","","",""],"i":[0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,6,6,6,6,6,6,6,6,6,6,6,0,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,0,8,8,8,8,8,8,8,8,8,8,8,8,8,0,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,0,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,12,12,12,12,12,12,12,12,12,12,12,12,0,0,0,0,0,0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,0,0,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,15,15,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,16,16,16,16,0,0,17,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,18,18,0,19,19,19,19,19,19,19,0,20,20,0,21,21,0,22,22,0,23,23,0,24,24,24,24,0,25,25,25,25,0,26,26,26,26,26,0,27,27,27,27,27,27,27,27,27,27,27,0,0,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,0,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,0,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,0,0,0,0,0,0,0,0,0,0,0,0,31,31,31,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,32,32,32,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,34,0,0,0,0,0,35,0,0,0,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,0,37,37,37,37,37,37,0,38,38,38,38,38,38,38,38,38,38,38,38,0,39,39,39,39,39,39,39,39,0,40,40,40,40,40,40,40,40,0,41,41,41,41,0,42,0,43,43,0,44,0,45,0,46,46,46,46,46,46,46,0,47,47,47,47,47,47,47,47,47,47,47,47,47,47,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,0,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,0,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,0,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,0,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,53,53,0,0,0,0,0,0,54,54,54,54,0,0,0,55,55,55,55,55,55,0,56,56,0,0,0,0,0,0,57,57,57,57,57,0,0,0,0,0,0,0,0,58,58,58,0,0,0,59,0,0,0,0,0,0,0,0,0,60,0,0,0,0,0,0,0,61,61,61,61,61,0,0,0,0,0,62,62,62,62,62,0,0,63,63,63,63,63,63,63,63,0,0,0,64,64,64,64,0,0,0,0,1,1,1,1,1,1,1,2,2,2,2,2,2,2,3,3,3,3,3,3,3,4,4,4,4,4,4,4,65,65,65,65,65,65,65,66,66,66,66,66,66,66,67,67,67,67,67,67,67,5,5,5,5,5,5,5,6,6,6,6,6,6,6,7,7,7,7,7,7,7,8,8,8,8,8,8,8,9,9,9,9,9,9,9,10,10,10,10,10,10,10,11,11,11,11,11,11,11,12,12,12,12,12,12,12,13,13,13,13,13,13,13,14,14,14,14,14,14,14,15,15,15,15,15,15,15,16,16,16,16,16,16,16,17,17,17,17,17,17,17,18,18,18,18,18,18,18,19,19,19,19,19,19,19,20,20,20,20,20,20,20,21,21,21,21,21,21,21,22,22,22,22,22,22,22,23,23,23,23,23,23,23,24,24,24,24,24,24,24,25,25,25,25,25,25,25,26,26,26,26,26,26,26,28,28,28,28,28,28,28,29,29,29,29,29,29,29,30,30,30,30,30,30,30,31,31,31,31,31,31,31,32,32,32,32,32,32,32,33,33,33,33,33,33,33,36,36,36,36,36,36,36,37,37,37,37,37,37,37,38,38,38,38,38,38,38,39,39,39,39,39,39,39,40,40,40,40,40,40,40,46,46,46,46,46,46,46,47,47,47,47,47,47,47,48,48,48,48,48,48,48,49,49,49,49,49,49,49,50,50,50,50,50,50,50,51,51,51,51,51,51,51,52,52,52,52,52,52,52,53,53,53,53,53,53,53,68,68,68,68,68,68,68,54,54,54,54,54,54,54,69,69,69,69,69,69,69,70,70,70,70,70,70,70,70,55,55,55,55,55,55,55,56,56,56,56,56,56,56,71,71,71,71,71,71,71,72,72,72,72,72,72,72,73,73,73,73,73,73,73,73,74,74,74,74,74,74,74,57,57,57,57,57,57,57,75,75,75,75,75,75,75,76,76,76,76,76,76,76,77,77,77,77,77,77,77,78,78,78,78,78,78,78,79,79,79,79,79,79,79,80,80,80,80,80,80,80,80,81,81,81,81,81,81,81,58,58,58,58,58,58,58,82,82,82,82,82,82,82,83,83,83,83,83,83,83,83,59,59,59,59,59,59,59,84,84,84,84,84,84,84,85,85,85,85,85,85,85,86,86,86,86,86,86,86,87,87,87,87,87,87,87,88,88,88,88,88,88,88,89,89,89,89,89,89,89,90,90,90,90,90,90,90,91,91,91,91,91,91,91,91,60,60,60,60,60,60,60,92,92,92,92,92,92,92,93,93,93,93,93,93,93,94,94,94,94,94,94,94,95,95,95,95,95,95,95,96,96,96,96,96,96,96,96,97,97,97,97,97,97,97,61,61,61,61,61,61,61,98,98,98,98,98,98,98,99,99,99,99,99,99,99,99,100,100,100,100,100,100,100,101,101,101,101,101,101,101,62,62,62,62,62,62,62,102,102,102,102,102,102,102,63,63,63,63,63,63,63,103,103,103,103,103,103,103,64,64,64,64,64,64,64,99,80,73,70,96,91,83,79,98,61,75,76,84,63,103,87,78,74,81,92,77,99,93,68,70,54,94,69,102,82,60,72,71,88,55,86,100,59,83,58,95,57,96,91,90,73,80,85,89,97,56,100,69,56,56,74,54,55,62,62,58,63,57,89,73,99,81,90,74,54,88,56,98,55,68,86,79,91,75,59,92,71,78,58,84,57,61,82,103,93,76,70,100,72,77,97,69,94,80,83,60,101,96,63,95,102,62,85,87,17,17,17,17,17,17,17,17,17,17,17,18,18,18,18,18,18,18,18,18,18,18,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,19,20,21,22,23,24,25,26,28,29,30,31,32,33,36,37,38,39,40,46,47,48,49,50,51,52,53,64,3,4,32,33,36,47,3,3,3,4,4,4,1,3,3,3,4,4,4,5,7,9,11,13,28,29,30,33,36,48,49,50,51,52,1,1,3,3,4,4,5,5,7,7,9,9,11,11,13,13,19,20,21,22,23,24,25,25,26,26,28,28,29,29,30,30,33,33,36,36,37,38,39,40,48,48,49,49,50,50,51,51,52,52,64,1,3,4,5,7,9,11,13,28,29,30,33,36,48,49,50,51,52,1,3,4,5,7,9,11,13,28,29,30,33,36,48,49,50,51,52,3,3,3,4,4,4,3,3,4,4,4,1,5,7,9,11,13,28,29,30,33,36,48,49,50,51,52,1,5,7,9,11,13,28,29,30,33,36,48,49,50,51,52,1,3,3,4,4,4,4,5,7,9,11,13,28,29,30,33,36,48,49,50,51,52,1,3,3,4,4,4,5,7,9,11,13,28,29,30,33,36,48,49,50,51,52,1,5,7,9,11,13,28,29,30,33,36,48,49,50,51,52,3,4,4,4,1,5,7,9,11,13,28,29,30,33,36,48,49,50,51,52,1,5,7,9,11,13,28,29,30,33,36,48,49,50,51,52,1,5,7,9,11,13,28,29,30,33,36,48,49,50,51,52,1,3,4,5,7,9,11,13,28,29,30,33,36,48,49,50,51,52,1,5,7,9,11,13,28,29,30,33,36,48,49,50,51,52,1,5,7,9,11,13,28,29,30,33,36,48,49,50,51,52,1,3,4,5,7,9,11,13,28,29,30,33,36,48,49,50,51,52,1,3,4,5,7,9,11,13,28,29,30,33,36,48,49,50,51,52,1,3,4,5,7,9,11,13,28,29,30,33,36,48,49,50,51,52,1,3,4,5,7,9,11,13,28,29,30,33,36,48,49,50,51,52,3,4,3,3,3,4,4,4,3,3,4,4,26,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,26,28,29,30,33,36,37,38,39,40,47,48,49,50,51,52,64,14,15,31,47,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,69,56,71,71,71,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,74,74,74,74,74,74,74,74,74,74,74,74,74,75,75,75,75,75,75,75,75,75,75,75,75,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,78,79,79,79,79,79,79,79,79,79,79,79,79,79,79,81,81,81,81,81,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,59,59,59,59,59,84,84,84,85,85,85,85,85,86,86,86,86,86,86,87,87,87,87,88,88,88,89,89,89,90,90,90,90,90,90,90,90,90,92,92,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,94,94,94,94,95,95,95,97,97,97,97,97,97,97,97,97,97,97,98,98,98,98,98,100,101,101,101,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,103,103,103,103,103,103,103,103],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["eflags",3]],[[],["eflags",3]],[[],["u32",15]],[[["u32",15]],[["eflags",3],["option",4]]],[[["u32",15]],["eflags",3]],[[["u32",15]],["eflags",3]],[[],["bool",15]],[[],["bool",15]],[[["eflags",3]],["bool",15]],[[["eflags",3]],["bool",15]],[[["eflags",3]]],[[["eflags",3]]],[[["eflags",3]]],[[["eflags",3],["bool",15]]],[[],["eflags",3]],[[["ring",4]],["eflags",3]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["taskstatesegment",3]],null,null,null,null,[[],["u64",15]],[[],["usize",15]],[[]],[[],["bool",15]],[[]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,null,[[["u64",15]]],[[["usize",15]]],[[],["u64",15]],[[],["usize",15]],[[]],[[]],[[]],[[],["bool",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["vaddr",3]],["usize",15]],[[["vaddr",3]],["usize",15]],[[["vaddr",3]],["usize",15]],[[["vaddr",3]],["usize",15]],null,null,null,null,null,null,null,null,[[],["pml4flags",3]],[[],["pml4flags",3]],[[],["u64",15]],[[["u64",15]],[["pml4flags",3],["option",4]]],[[["u64",15]],["pml4flags",3]],[[["u64",15]],["pml4flags",3]],[[],["bool",15]],[[],["bool",15]],[[["pml4flags",3]],["bool",15]],[[["pml4flags",3]],["bool",15]],[[["pml4flags",3]]],[[["pml4flags",3]]],[[["pml4flags",3]]],[[["bool",15],["pml4flags",3]]],null,null,[[["paddr",3],["pml4flags",3]],["pml4entry",3]],[[],["paddr",3]],[[],["pml4flags",3]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,null,null,null,null,null,null,null,null,null,null,null,[[],["pdptflags",3]],[[],["pdptflags",3]],[[],["u64",15]],[[["u64",15]],[["option",4],["pdptflags",3]]],[[["u64",15]],["pdptflags",3]],[[["u64",15]],["pdptflags",3]],[[],["bool",15]],[[],["bool",15]],[[["pdptflags",3]],["bool",15]],[[["pdptflags",3]],["bool",15]],[[["pdptflags",3]]],[[["pdptflags",3]]],[[["pdptflags",3]]],[[["bool",15],["pdptflags",3]]],null,null,[[["paddr",3],["pdptflags",3]],["pdptentry",3]],[[],["paddr",3]],[[],["pdptflags",3]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,null,null,null,null,null,null,null,null,null,null,null,[[],["pdflags",3]],[[],["pdflags",3]],[[],["u64",15]],[[["u64",15]],[["option",4],["pdflags",3]]],[[["u64",15]],["pdflags",3]],[[["u64",15]],["pdflags",3]],[[],["bool",15]],[[],["bool",15]],[[["pdflags",3]],["bool",15]],[[["pdflags",3]],["bool",15]],[[["pdflags",3]]],[[["pdflags",3]]],[[["pdflags",3]]],[[["bool",15],["pdflags",3]]],null,null,[[["paddr",3],["pdflags",3]],["pdentry",3]],[[],["paddr",3]],[[],["pdflags",3]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,null,null,null,null,null,null,null,null,null,[[],["ptflags",3]],[[],["ptflags",3]],[[],["u64",15]],[[["u64",15]],[["option",4],["ptflags",3]]],[[["u64",15]],["ptflags",3]],[[["u64",15]],["ptflags",3]],[[],["bool",15]],[[],["bool",15]],[[["ptflags",3]],["bool",15]],[[["ptflags",3]],["bool",15]],[[["ptflags",3]]],[[["ptflags",3]]],[[["ptflags",3]]],[[["bool",15],["ptflags",3]]],null,null,[[["paddr",3],["ptflags",3]],["ptentry",3]],[[],["paddr",3]],[[],["ptflags",3]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["rflags",3]],[[],["rflags",3]],[[],["u64",15]],[[["u64",15]],[["option",4],["rflags",3]]],[[["u64",15]],["rflags",3]],[[["u64",15]],["rflags",3]],[[],["bool",15]],[[],["bool",15]],[[["rflags",3]],["bool",15]],[[["rflags",3]],["bool",15]],[[["rflags",3]]],[[["rflags",3]]],[[["rflags",3]]],[[["bool",15],["rflags",3]]],[[],["rflags",3]],[[["ring",4]],["rflags",3]],[[["u64",15]],["rflags",3]],[[],["rflags",3]],[[["rflags",3]]],null,null,null,[[["u64",15]]],[[["segmentselector",3],["u64",15]]],[[["u8",15]]],[[["segmentselector",3]]],[[["u64",15]]],[[["u64",15]]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[]],null,[[["u64",15]]],[[["u64",15]]],[[["u64",15]],["u32",15]],[[["u64",15]]],[[["u64",15]],["u64",15]],[[["u64",15]]],[[["u64",15]]],[[["u64",15]],["u32",15]],[[["u64",15]],["u32",15]],[[["u64",15]],["u32",15]],[[["u64",15]],["u32",15]],[[["u64",15]],["u32",15]],[[["u64",15]]],[[["u64",15]]],[[["u64",15]],["u32",15]],[[["u64",15]],["u32",15]],[[["u64",15]],["u32",15]],[[["u64",15]],["u32",15]],[[["u64",15]]],[[["u64",15]]],[[["u64",15]]],[[["u64",15]]],[[["u64",15]]],[[["u64",15]]],null,[[["u64",15]],["u64",15]],[[["u64",15]],["u64",15]],[[["u64",15]],["u64",15]],[[["u64",15]],["u64",15]],[[["u64",15]],["u64",15]],[[["u64",15]],["u64",15]],[[["u64",15]],["u64",15]],null,null,null,null,null,null,null,null,null,[[],["taskstatesegment",3]],[[["ring",4],["u64",15]]],[[["usize",15],["u64",15]]],null,[[["u64",15]],["result",6]],[[],["result",6]],[[["u64",15]],["result",6]],[[["u64",15]],["result",6]],[[],[["u64",15],["result",6]]],[[["u32",15]],[["u64",15],["result",6]]],[[["u32",15],["u64",15]],["result",6]],[[],["result",6]],[[],["result",6]],null,null,null,[[["usize",15]]],[[]],[[["u8",15]]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],null,null,[[],["x2apic",3]],[[]],[[]],[[["u64",15]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["xapic",3]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["apicid",4],["u8",15],["destinationmode",4],["triggermode",4],["deliverystatus",4],["deliverymode",4],["level",4],["destinationshorthand",4]],["icr",3]],[[["apicid",4],["u8",15],["destinationmode",4],["triggermode",4],["deliverystatus",4],["deliverymode",4],["level",4],["destinationshorthand",4]],["icr",3]],[[],["u32",15]],[[],["u32",15]],null,null,null,[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],null,[[],["bool",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[]],[[["u8",15]]],[[["u64",15]]],[[["apicid",4]]],[[]],[[["apicid",4],["u8",15]]],[[["icr",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["cr0",3]],[[],["cr0",3]],[[],["usize",15]],[[["usize",15]],[["option",4],["cr0",3]]],[[["usize",15]],["cr0",3]],[[["usize",15]],["cr0",3]],[[],["bool",15]],[[],["bool",15]],[[["cr0",3]],["bool",15]],[[["cr0",3]],["bool",15]],[[["cr0",3]]],[[["cr0",3]]],[[["cr0",3]]],[[["bool",15],["cr0",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["cr4",3]],[[],["cr4",3]],[[],["usize",15]],[[["usize",15]],[["option",4],["cr4",3]]],[[["usize",15]],["cr4",3]],[[["usize",15]],["cr4",3]],[[],["bool",15]],[[],["bool",15]],[[["cr4",3]],["bool",15]],[[["cr4",3]],["bool",15]],[[["cr4",3]]],[[["cr4",3]]],[[["cr4",3]]],[[["bool",15],["cr4",3]]],null,null,null,null,null,null,null,null,null,null,[[],["xcr0",3]],[[],["xcr0",3]],[[],["u64",15]],[[["u64",15]],[["xcr0",3],["option",4]]],[[["u64",15]],["xcr0",3]],[[["u64",15]],["xcr0",3]],[[],["bool",15]],[[],["bool",15]],[[["xcr0",3]],["bool",15]],[[["xcr0",3]],["bool",15]],[[["xcr0",3]]],[[["xcr0",3]]],[[["xcr0",3]]],[[["bool",15],["xcr0",3]]],[[],["cr0",3]],[[["cr0",3]]],[[],["usize",15]],[[["u64",15]]],[[],["u64",15]],[[["u64",15]]],[[],["cr4",3]],[[["cr4",3]]],[[],["xcr0",3]],[[["xcr0",3]]],null,null,null,null,[[]],[[]],[[["descriptortablepointer",3]]],[[["descriptortablepointer",3]]],[[["segmentselector",3]]],[[],["segmentselector",3]],[[["descriptortablepointer",3]]],[[["descriptortablepointer",3]]],null,[[["u16",15],["u8",15]]],[[["u16",15]],["u8",15]],[[["u16",15]]],[[["u16",15]],["u16",15]],[[["u32",15],["u16",15]]],[[["u16",15]],["u32",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["pagefaulterror",3]],[[],["pagefaulterror",3]],[[],["u32",15]],[[["u32",15]],[["option",4],["pagefaulterror",3]]],[[["u32",15]],["pagefaulterror",3]],[[["u32",15]],["pagefaulterror",3]],[[],["bool",15]],[[],["bool",15]],[[["pagefaulterror",3]],["bool",15]],[[["pagefaulterror",3]],["bool",15]],[[["pagefaulterror",3]]],[[["pagefaulterror",3]]],[[["pagefaulterror",3]]],[[["bool",15],["pagefaulterror",3]]],[[]],[[]],null,[[["u32",15],["u64",15]]],[[["u32",15]],["u64",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["u16",15]],["bool",15]],[[["u32",15]],["bool",15]],[[["u64",15]],["bool",15]],null,[[],["bool",15]],[[],["bool",15]],[[["u16",15]],["bool",15]],[[["u32",15]],["bool",15]],[[["u64",15]],["bool",15]],null,[[],["bool",15]],[[],["bool",15]],null,null,null,null,null,null,null,null,[[],["segmentselector",3]],[[],["segmentselector",3]],[[],["u16",15]],[[["u16",15]],[["segmentselector",3],["option",4]]],[[["u16",15]],["segmentselector",3]],[[["u16",15]],["segmentselector",3]],[[],["bool",15]],[[],["bool",15]],[[["segmentselector",3]],["bool",15]],[[["segmentselector",3]],["bool",15]],[[["segmentselector",3]]],[[["segmentselector",3]]],[[["segmentselector",3]]],[[["segmentselector",3],["bool",15]]],[[["ring",4],["u16",15]],["segmentselector",3]],[[],["u16",15]],[[["u16",15]],["segmentselector",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["bool",15],["u64",15]]],[[["segmentselector",3]]],[[["segmentselector",3]]],[[["segmentselector",3]]],null,[[["segmentselector",3]]],null,[[["codesegmenttype",4]]],[[["datasegmenttype",4]]],null,[[]],null,[[]],null,[[],["descriptorbuilder",3]],[[],["descriptorbuilder",3]],[[["ring",4]],["descriptorbuilder",3]],[[],["descriptorbuilder",3]],[[],["descriptorbuilder",3]],[[],["descriptorbuilder",3]],[[["u8",15]],["descriptorbuilder",3]],null,null,null,null,[[],["u64",15]],[[["u32",15]]],[[["segmentselector",3],["u32",15]]],[[["u8",15]]],[[]],[[["ring",4]]],[[]],[[]],[[]],[[]],[[]],[[["segmentselector",3]]],[[["segmentselector",3]]],[[["segmentselector",3]]],[[["segmentselector",3]]],[[["segmentselector",3]]],[[],["segmentselector",3]],[[],["segmentselector",3]],[[],["segmentselector",3]],[[],["segmentselector",3]],[[],["segmentselector",3]],[[],["segmentselector",3]],null,[[],["segmentselector",3]],[[["segmentselector",3]]],null,[[],["u64",15]],[[],["u64",15]],null,[[["usize",15]]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["pinbasedcontrols",3]],[[],["pinbasedcontrols",3]],[[],["u32",15]],[[["u32",15]],[["option",4],["pinbasedcontrols",3]]],[[["u32",15]],["pinbasedcontrols",3]],[[["u32",15]],["pinbasedcontrols",3]],[[],["bool",15]],[[],["bool",15]],[[["pinbasedcontrols",3]],["bool",15]],[[["pinbasedcontrols",3]],["bool",15]],[[["pinbasedcontrols",3]]],[[["pinbasedcontrols",3]]],[[["pinbasedcontrols",3]]],[[["bool",15],["pinbasedcontrols",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["primarycontrols",3]],[[],["primarycontrols",3]],[[],["u32",15]],[[["u32",15]],[["primarycontrols",3],["option",4]]],[[["u32",15]],["primarycontrols",3]],[[["u32",15]],["primarycontrols",3]],[[],["bool",15]],[[],["bool",15]],[[["primarycontrols",3]],["bool",15]],[[["primarycontrols",3]],["bool",15]],[[["primarycontrols",3]]],[[["primarycontrols",3]]],[[["primarycontrols",3]]],[[["bool",15],["primarycontrols",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["secondarycontrols",3]],[[],["secondarycontrols",3]],[[],["u32",15]],[[["u32",15]],[["secondarycontrols",3],["option",4]]],[[["u32",15]],["secondarycontrols",3]],[[["u32",15]],["secondarycontrols",3]],[[],["bool",15]],[[],["bool",15]],[[["secondarycontrols",3]],["bool",15]],[[["secondarycontrols",3]],["bool",15]],[[["secondarycontrols",3]]],[[["secondarycontrols",3]]],[[["secondarycontrols",3]]],[[["secondarycontrols",3],["bool",15]]],null,null,null,null,null,null,null,null,null,null,null,[[],["entrycontrols",3]],[[],["entrycontrols",3]],[[],["u32",15]],[[["u32",15]],[["option",4],["entrycontrols",3]]],[[["u32",15]],["entrycontrols",3]],[[["u32",15]],["entrycontrols",3]],[[],["bool",15]],[[],["bool",15]],[[["entrycontrols",3]],["bool",15]],[[["entrycontrols",3]],["bool",15]],[[["entrycontrols",3]]],[[["entrycontrols",3]]],[[["entrycontrols",3]]],[[["bool",15],["entrycontrols",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["exitcontrols",3]],[[],["exitcontrols",3]],[[],["u32",15]],[[["u32",15]],[["option",4],["exitcontrols",3]]],[[["u32",15]],["exitcontrols",3]],[[["u32",15]],["exitcontrols",3]],[[],["bool",15]],[[],["bool",15]],[[["exitcontrols",3]],["bool",15]],[[["exitcontrols",3]],["bool",15]],[[["exitcontrols",3]]],[[["exitcontrols",3]]],[[["exitcontrols",3]]],[[["bool",15],["exitcontrols",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["u32",15]],["cpuidresult",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[],["u64",15]],null,null,[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],[["option",4],["cpuidresult",3]]],[[],[["extendedtopologylevel",3],["option",4]]],[[],[["cacheparameter",3],["option",4]]],[[],[["cacheinfo",3],["option",4]]],[[],[["datinfo",3],["option",4]]],[[],[["option",4],["sgxsectioninfo",4]]],[[],[["option",4],["extendedstate",3]]],[[],["performancemonitoringinfo",3]],[[],["socvendorinfo",3]],[[],["dattype",4]],[[],["monitormwaitinfo",3]],[[],["thermalpowerinfo",3]],[[],["rdtmonitoringinfo",3]],[[],["l2associativity",4]],[[],["memoryencryptioninfo",3]],[[],["l3catinfo",3]],[[],["directcacheaccessinfo",3]],[[],["cacheparameter",3]],[[],["extendedtopologylevel",3]],[[],["epcsection",3]],[[],["extendedfeatures",3]],[[],["socvendorattributesiter",3]],[[],["processortraceinfo",3]],[[],["cpuid",3]],[[],["cacheinfoiter",3]],[[],["cpuidresult",3]],[[],["tscinfo",3]],[[],["vendorinfo",3]],[[],["extendedfunctioninfo",3]],[[],["extendedstateinfo",3]],[[],["sgxsectioninfo",4]],[[],["featureinfo",3]],[[],["processorserial",3]],[[],["l2catinfo",3]],[[],["cacheinfotype",4]],[[],["rdtallocationinfo",3]],[[],["socvendorbrand",3]],[[],["extendedstate",3]],[[],["extendedstateiter",3]],[[],["topologytype",4]],[[],["processorfrequencyinfo",3]],[[],["cachetype",4]],[[],["datiter",3]],[[],["sgxsectioniter",3]],[[],["sgxinfo",3]],[[],["cacheparametersiter",3]],[[],["extendedtopologyiter",3]],[[],["l3monitoringinfo",3]],[[],["membwallocationinfo",3]],[[],["datinfo",3]],[[],["cacheinfo",3]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[],["cacheinfo",3]],[[],["cacheparameter",3]],[[],["cpuidresult",3]],[[],["cacheinfotype",4]],[[["hypervisor",4]],["bool",15]],[[["hypervisor",4]],["bool",15]],[[["topologytype",4]],["bool",15]],[[["l2associativity",4]],["bool",15]],[[["cachetype",4]],["bool",15]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[],["bool",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[["u8",15]]],[[["u64",15]]],[[]],[[["apicid",4]]],[[]],[[["apicid",4],["u8",15]]],[[["icr",3]]],[[],["bool",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[]],[[["u8",15]]],[[["u64",15]]],[[["apicid",4]]],[[]],[[["apicid",4],["u8",15]]],[[["icr",3]]],[[["bool",15],["u64",15]],["descriptorbuilder",3]],[[["segmentselector",3],["u16",15]],["descriptorbuilder",3]],[[["segmentselector",3],["u16",15]],["descriptorbuilder",3]],[[["segmentselector",3],["u16",15]],["descriptorbuilder",3]],[[["bool",15],["u64",15]],["descriptorbuilder",3]],[[["segmentselector",3],["u64",15]],["descriptorbuilder",3]],[[["segmentselector",3],["u64",15]],["descriptorbuilder",3]],[[["segmentselector",3],["u64",15]],["descriptorbuilder",3]],[[["bool",15],["u64",15]],["descriptorbuilder",3]],[[["segmentselector",3],["u32",15]],["descriptorbuilder",3]],[[["segmentselector",3],["u32",15]],["descriptorbuilder",3]],[[["segmentselector",3],["u32",15]],["descriptorbuilder",3]],[[["segmentselector",3]],["descriptorbuilder",3]],[[["u32",15],["codesegmenttype",4]],["descriptorbuilder",3]],[[["u32",15],["datasegmenttype",4]],["descriptorbuilder",3]],[[["u64",15]],["descriptorbuilder",3]],[[["u32",15]],["descriptorbuilder",3]],[[],["descriptor64",3]],[[],["descriptor",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["paddr",3]]],[[["u64",15]]],[[["usize",15]]],[[["vaddr",3]]],[[]],[[]],[[["eflags",3]],["eflags",3]],[[["paddr",3]]],[[["u64",15]]],[[["usize",15]]],[[["vaddr",3]]],[[["u64",15]]],[[["usize",15]]],[[["pml4flags",3]],["pml4flags",3]],[[["pdptflags",3]],["pdptflags",3]],[[["pdflags",3]],["pdflags",3]],[[["ptflags",3]],["ptflags",3]],[[["rflags",3]],["rflags",3]],[[["cr0",3]],["cr0",3]],[[["cr4",3]],["cr4",3]],[[["xcr0",3]],["xcr0",3]],[[["pagefaulterror",3]],["pagefaulterror",3]],[[["segmentselector",3]],["segmentselector",3]],[[["pinbasedcontrols",3]],["pinbasedcontrols",3]],[[["primarycontrols",3]],["primarycontrols",3]],[[["secondarycontrols",3]],["secondarycontrols",3]],[[["entrycontrols",3]],["entrycontrols",3]],[[["exitcontrols",3]],["exitcontrols",3]],[[["eflags",3]],["bool",15]],[[["eflags",3]],["bool",15]],[[["paddr",3]],["bool",15]],[[["paddr",3]],["bool",15]],[[["vaddr",3]],["bool",15]],[[["vaddr",3]],["bool",15]],[[["pml4flags",3]],["bool",15]],[[["pml4flags",3]],["bool",15]],[[["pdptflags",3]],["bool",15]],[[["pdptflags",3]],["bool",15]],[[["pdflags",3]],["bool",15]],[[["pdflags",3]],["bool",15]],[[["ptflags",3]],["bool",15]],[[["ptflags",3]],["bool",15]],[[["rflags",3]],["bool",15]],[[["rflags",3]],["bool",15]],[[["deliverymode",4]],["bool",15]],[[["destinationmode",4]],["bool",15]],[[["deliverystatus",4]],["bool",15]],[[["level",4]],["bool",15]],[[["triggermode",4]],["bool",15]],[[["destinationshorthand",4]],["bool",15]],[[["icr",3]],["bool",15]],[[["icr",3]],["bool",15]],[[["apicid",4]],["bool",15]],[[["apicid",4]],["bool",15]],[[["cr0",3]],["bool",15]],[[["cr0",3]],["bool",15]],[[["cr4",3]],["bool",15]],[[["cr4",3]],["bool",15]],[[["xcr0",3]],["bool",15]],[[["xcr0",3]],["bool",15]],[[["pagefaulterror",3]],["bool",15]],[[["pagefaulterror",3]],["bool",15]],[[["segmentselector",3]],["bool",15]],[[["segmentselector",3]],["bool",15]],[[["systemdescriptortypes64",4]],["bool",15]],[[["systemdescriptortypes32",4]],["bool",15]],[[["datasegmenttype",4]],["bool",15]],[[["codesegmenttype",4]],["bool",15]],[[["pinbasedcontrols",3]],["bool",15]],[[["pinbasedcontrols",3]],["bool",15]],[[["primarycontrols",3]],["bool",15]],[[["primarycontrols",3]],["bool",15]],[[["secondarycontrols",3]],["bool",15]],[[["secondarycontrols",3]],["bool",15]],[[["entrycontrols",3]],["bool",15]],[[["entrycontrols",3]],["bool",15]],[[["exitcontrols",3]],["bool",15]],[[["exitcontrols",3]],["bool",15]],[[["ring",4]],["bool",15]],[[["eflags",3]],["ordering",4]],[[["paddr",3]],["ordering",4]],[[["vaddr",3]],["ordering",4]],[[["pml4flags",3]],["ordering",4]],[[["pdptflags",3]],["ordering",4]],[[["pdflags",3]],["ordering",4]],[[["ptflags",3]],["ordering",4]],[[["rflags",3]],["ordering",4]],[[["cr0",3]],["ordering",4]],[[["cr4",3]],["ordering",4]],[[["xcr0",3]],["ordering",4]],[[["pagefaulterror",3]],["ordering",4]],[[["segmentselector",3]],["ordering",4]],[[["pinbasedcontrols",3]],["ordering",4]],[[["primarycontrols",3]],["ordering",4]],[[["secondarycontrols",3]],["ordering",4]],[[["entrycontrols",3]],["ordering",4]],[[["exitcontrols",3]],["ordering",4]],[[["eflags",3]],[["ordering",4],["option",4]]],[[["paddr",3]],[["ordering",4],["option",4]]],[[["vaddr",3]],[["ordering",4],["option",4]]],[[["pml4flags",3]],[["ordering",4],["option",4]]],[[["pdptflags",3]],[["ordering",4],["option",4]]],[[["pdflags",3]],[["ordering",4],["option",4]]],[[["ptflags",3]],[["ordering",4],["option",4]]],[[["rflags",3]],[["ordering",4],["option",4]]],[[["cr0",3]],[["ordering",4],["option",4]]],[[["cr4",3]],[["ordering",4],["option",4]]],[[["xcr0",3]],[["ordering",4],["option",4]]],[[["pagefaulterror",3]],[["ordering",4],["option",4]]],[[["segmentselector",3]],[["ordering",4],["option",4]]],[[["pinbasedcontrols",3]],[["ordering",4],["option",4]]],[[["primarycontrols",3]],[["ordering",4],["option",4]]],[[["secondarycontrols",3]],[["ordering",4],["option",4]]],[[["entrycontrols",3]],[["ordering",4],["option",4]]],[[["exitcontrols",3]],[["ordering",4],["option",4]]],[[["paddr",3]]],[[["u64",15]]],[[["usize",15]]],[[["vaddr",3]]],[[["u64",15]]],[[["usize",15]]],[[["paddr",3]]],[[["u64",15]]],[[["vaddr",3]]],[[["u64",15]]],[[["usize",15]]],[[["eflags",3]]],[[["pml4flags",3]]],[[["pdptflags",3]]],[[["pdflags",3]]],[[["ptflags",3]]],[[["rflags",3]]],[[["cr0",3]]],[[["cr4",3]]],[[["xcr0",3]]],[[["pagefaulterror",3]]],[[["segmentselector",3]]],[[["pinbasedcontrols",3]]],[[["primarycontrols",3]]],[[["secondarycontrols",3]]],[[["entrycontrols",3]]],[[["exitcontrols",3]]],[[],["eflags",3]],[[],["pml4flags",3]],[[],["pdptflags",3]],[[],["pdflags",3]],[[],["ptflags",3]],[[],["rflags",3]],[[],["cr0",3]],[[],["cr4",3]],[[],["xcr0",3]],[[],["pagefaulterror",3]],[[],["segmentselector",3]],[[],["pinbasedcontrols",3]],[[],["primarycontrols",3]],[[],["secondarycontrols",3]],[[],["entrycontrols",3]],[[],["exitcontrols",3]],[[["eflags",3]],["eflags",3]],[[]],[[["u64",15]]],[[]],[[["u64",15]]],[[["usize",15]]],[[["i32",15]]],[[["pml4flags",3]],["pml4flags",3]],[[["pdptflags",3]],["pdptflags",3]],[[["pdflags",3]],["pdflags",3]],[[["ptflags",3]],["ptflags",3]],[[["rflags",3]],["rflags",3]],[[["cr0",3]],["cr0",3]],[[["cr4",3]],["cr4",3]],[[["xcr0",3]],["xcr0",3]],[[["pagefaulterror",3]],["pagefaulterror",3]],[[["segmentselector",3]],["segmentselector",3]],[[["pinbasedcontrols",3]],["pinbasedcontrols",3]],[[["primarycontrols",3]],["primarycontrols",3]],[[["secondarycontrols",3]],["secondarycontrols",3]],[[["entrycontrols",3]],["entrycontrols",3]],[[["exitcontrols",3]],["exitcontrols",3]],[[["eflags",3]],["eflags",3]],[[["paddr",3]]],[[["u64",15]]],[[["vaddr",3]],["vaddr",3]],[[["u64",15]]],[[["usize",15]]],[[["pml4flags",3]],["pml4flags",3]],[[["pdptflags",3]],["pdptflags",3]],[[["pdflags",3]],["pdflags",3]],[[["ptflags",3]],["ptflags",3]],[[["rflags",3]],["rflags",3]],[[["cr0",3]],["cr0",3]],[[["cr4",3]],["cr4",3]],[[["xcr0",3]],["xcr0",3]],[[["pagefaulterror",3]],["pagefaulterror",3]],[[["segmentselector",3]],["segmentselector",3]],[[["pinbasedcontrols",3]],["pinbasedcontrols",3]],[[["primarycontrols",3]],["primarycontrols",3]],[[["secondarycontrols",3]],["secondarycontrols",3]],[[["entrycontrols",3]],["entrycontrols",3]],[[["exitcontrols",3]],["exitcontrols",3]],[[["eflags",3]],["eflags",3]],[[["pml4flags",3]],["pml4flags",3]],[[["pdptflags",3]],["pdptflags",3]],[[["pdflags",3]],["pdflags",3]],[[["ptflags",3]],["ptflags",3]],[[["rflags",3]],["rflags",3]],[[["cr0",3]],["cr0",3]],[[["cr4",3]],["cr4",3]],[[["xcr0",3]],["xcr0",3]],[[["pagefaulterror",3]],["pagefaulterror",3]],[[["segmentselector",3]],["segmentselector",3]],[[["pinbasedcontrols",3]],["pinbasedcontrols",3]],[[["primarycontrols",3]],["primarycontrols",3]],[[["secondarycontrols",3]],["secondarycontrols",3]],[[["entrycontrols",3]],["entrycontrols",3]],[[["exitcontrols",3]],["exitcontrols",3]],[[["u64",15]]],[[["u64",15]]],[[["usize",15]]],[[["i32",15]]],[[["eflags",3]]],[[["pml4flags",3]]],[[["pdptflags",3]]],[[["pdflags",3]]],[[["ptflags",3]]],[[["rflags",3]]],[[["cr0",3]]],[[["cr4",3]]],[[["xcr0",3]]],[[["pagefaulterror",3]]],[[["segmentselector",3]]],[[["pinbasedcontrols",3]]],[[["primarycontrols",3]]],[[["secondarycontrols",3]]],[[["entrycontrols",3]]],[[["exitcontrols",3]]],[[["eflags",3]]],[[["pml4flags",3]]],[[["pdptflags",3]]],[[["pdflags",3]]],[[["ptflags",3]]],[[["rflags",3]]],[[["cr0",3]]],[[["cr4",3]]],[[["xcr0",3]]],[[["pagefaulterror",3]]],[[["segmentselector",3]]],[[["pinbasedcontrols",3]]],[[["primarycontrols",3]]],[[["secondarycontrols",3]]],[[["entrycontrols",3]]],[[["exitcontrols",3]]],[[["eflags",3]]],[[["pml4flags",3]]],[[["pdptflags",3]]],[[["pdflags",3]]],[[["ptflags",3]]],[[["rflags",3]]],[[["cr0",3]]],[[["cr4",3]]],[[["xcr0",3]]],[[["pagefaulterror",3]]],[[["segmentselector",3]]],[[["pinbasedcontrols",3]]],[[["primarycontrols",3]]],[[["secondarycontrols",3]]],[[["entrycontrols",3]]],[[["exitcontrols",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["intoiterator",8]],["eflags",3]],[[["intoiterator",8]],["pml4flags",3]],[[["intoiterator",8]],["pdptflags",3]],[[["intoiterator",8]],["pdflags",3]],[[["intoiterator",8]],["ptflags",3]],[[["intoiterator",8]],["rflags",3]],[[["intoiterator",8]],["cr0",3]],[[["intoiterator",8]],["cr4",3]],[[["intoiterator",8]],["xcr0",3]],[[["intoiterator",8]],["pagefaulterror",3]],[[["intoiterator",8]],["segmentselector",3]],[[["intoiterator",8]],["pinbasedcontrols",3]],[[["intoiterator",8]],["primarycontrols",3]],[[["intoiterator",8]],["secondarycontrols",3]],[[["intoiterator",8]],["entrycontrols",3]],[[["intoiterator",8]],["exitcontrols",3]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["u64",15]]],[[["usize",15]]],[[["i32",15]]],[[["u64",15]]],[[["i32",15]]],[[["usize",15]]],[[],["u64",15]],[[],["usize",15]],[[],["u64",15]],[[],["usize",15]],[[],["usize",15]],[[],["eflags",3]],[[],["taskstatesegment",3]],[[],["paddr",3]],[[],["vaddr",3]],[[],["pml4flags",3]],[[],["pml4entry",3]],[[],["pdptflags",3]],[[],["pdptentry",3]],[[],["pdflags",3]],[[],["pdentry",3]],[[],["ptflags",3]],[[],["ptentry",3]],[[],["rflags",3]],[[],["descriptor64",3]],[[],["taskstatesegment",3]],[[],["apicid",4]],[[],["cr0",3]],[[],["cr4",3]],[[],["xcr0",3]],[[],["pagefaulterror",3]],[[],["segmentselector",3]],[[],["systemdescriptortypes64",4]],[[],["systemdescriptortypes32",4]],[[],["datasegmenttype",4]],[[],["codesegmenttype",4]],[[],["descriptor",3]],[[],["pinbasedcontrols",3]],[[],["primarycontrols",3]],[[],["secondarycontrols",3]],[[],["entrycontrols",3]],[[],["exitcontrols",3]],[[],["ring",4]],[[],["descriptor64",3]],[[],["taskstatesegment",3]],[[],["descriptortablepointer",3]],[[],["descriptor",3]],[[],["cpuid",3]],[[],[["vendorinfo",3],["option",4]]],[[],[["featureinfo",3],["option",4]]],[[],[["option",4],["cacheinfoiter",3]]],[[],[["processorserial",3],["option",4]]],[[],[["cacheparametersiter",3],["option",4]]],[[],[["monitormwaitinfo",3],["option",4]]],[[],[["option",4],["thermalpowerinfo",3]]],[[],[["option",4],["extendedfeatures",3]]],[[],[["directcacheaccessinfo",3],["option",4]]],[[],[["performancemonitoringinfo",3],["option",4]]],[[],[["option",4],["extendedtopologyiter",3]]],[[],[["option",4],["extendedstateinfo",3]]],[[],[["rdtmonitoringinfo",3],["option",4]]],[[],[["option",4],["rdtallocationinfo",3]]],[[],[["sgxinfo",3],["option",4]]],[[],[["option",4],["processortraceinfo",3]]],[[],[["tscinfo",3],["option",4]]],[[],[["option",4],["processorfrequencyinfo",3]]],[[],[["datiter",3],["option",4]]],[[],[["option",4],["socvendorinfo",3]]],[[],[["hypervisorinfo",3],["option",4]]],[[],[["extendedfunctioninfo",3],["option",4]]],[[],[["option",4],["memoryencryptioninfo",3]]],[[],["str",15]],[[],["str",15]],[[],["u32",15]],[[],["u32",15]],[[],["u64",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["cachetype",4]],[[],["u8",15]],[[],["bool",15]],[[],["bool",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["u16",15]],[[],["u16",15]],[[],["bool",15]],[[],["bool",15]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[],["u8",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["u8",15]],[[],["u32",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["u16",15]],[[],["u8",15]],[[],["topologytype",4]],[[],["u32",15]],[[],["u32",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["u32",15]],[[],["u32",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["u32",15]],[[],["extendedstateiter",3]],[[],["u32",15]],[[],["u32",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["u32",15]],[[],["bool",15]],[[],[["option",4],["l3monitoringinfo",3]]],[[],["u32",15]],[[],["u32",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],[["option",4],["l3catinfo",3]]],[[],[["l2catinfo",3],["option",4]]],[[],[["option",4],["membwallocationinfo",3]]],[[],["u8",15]],[[],["u32",15]],[[],["u16",15]],[[],["bool",15]],[[],["u8",15]],[[],["u32",15]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["u32",15]],[[],["u8",15]],[[],["u8",15]],[[]],[[],["sgxsectioniter",3]],[[],["u64",15]],[[],["u64",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["u8",15]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],[["option",4],["u64",15]]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["u8",15]],[[],["u16",15]],[[],["u32",15]],[[],["dattype",4]],[[],["u8",15]],[[],["u16",15]],[[],["u16",15]],[[],["u32",15]],[[],["u32",15]],[[],["socvendorbrand",3]],[[],[["option",4],["socvendorattributesiter",3]]],[[],["str",15]],[[],["hypervisor",4]],[[],[["u32",15],["option",4]]],[[],[["u32",15],["option",4]]],[[],[["str",15],["option",4]]],[[],[["u32",15],["option",4]]],[[],[["option",4],["u8",15]]],[[],[["l2associativity",4],["option",4]]],[[],[["option",4],["u16",15]]],[[],[["option",4],["u8",15]]],[[],[["option",4],["u8",15]]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["u8",15]],[[],["u8",15]],[[],["u32",15]],[[],["u32",15]]],"p":[[3,"EFlags"],[3,"TaskStateSegment"],[3,"PAddr"],[3,"VAddr"],[3,"PML4Flags"],[3,"PML4Entry"],[3,"PDPTFlags"],[3,"PDPTEntry"],[3,"PDFlags"],[3,"PDEntry"],[3,"PTFlags"],[3,"PTEntry"],[3,"RFlags"],[3,"Descriptor64"],[3,"TaskStateSegment"],[3,"IoApic"],[3,"X2APIC"],[3,"XAPIC"],[4,"DeliveryMode"],[4,"DestinationMode"],[4,"DeliveryStatus"],[4,"Level"],[4,"TriggerMode"],[4,"DestinationShorthand"],[3,"Icr"],[4,"ApicId"],[8,"ApicControl"],[3,"Cr0"],[3,"Cr4"],[3,"Xcr0"],[3,"DescriptorTablePointer"],[3,"InterruptDescription"],[3,"PageFaultError"],[8,"RdRand"],[8,"RdSeed"],[3,"SegmentSelector"],[4,"SystemDescriptorTypes64"],[4,"SystemDescriptorTypes32"],[4,"DataSegmentType"],[4,"CodeSegmentType"],[8,"GateDescriptorBuilder"],[8,"TaskGateDescriptorBuilder"],[8,"SegmentDescriptorBuilder"],[8,"LdtDescriptorBuilder"],[8,"BuildDescriptor"],[3,"DescriptorBuilder"],[3,"Descriptor"],[3,"PinbasedControls"],[3,"PrimaryControls"],[3,"SecondaryControls"],[3,"EntryControls"],[3,"ExitControls"],[4,"VmFail"],[3,"CpuIdResult"],[4,"CacheInfoType"],[3,"CacheInfo"],[4,"CacheType"],[4,"TopologyType"],[3,"ExtendedState"],[4,"SgxSectionInfo"],[4,"DatType"],[4,"Hypervisor"],[4,"L2Associativity"],[4,"Ring"],[3,"Page"],[3,"LargePage"],[3,"HugePage"],[3,"CpuId"],[3,"VendorInfo"],[3,"CacheInfoIter"],[3,"ProcessorSerial"],[3,"FeatureInfo"],[3,"CacheParametersIter"],[3,"CacheParameter"],[3,"MonitorMwaitInfo"],[3,"ThermalPowerInfo"],[3,"ExtendedFeatures"],[3,"DirectCacheAccessInfo"],[3,"PerformanceMonitoringInfo"],[3,"ExtendedTopologyIter"],[3,"ExtendedTopologyLevel"],[3,"ExtendedStateInfo"],[3,"ExtendedStateIter"],[3,"RdtMonitoringInfo"],[3,"L3MonitoringInfo"],[3,"RdtAllocationInfo"],[3,"L3CatInfo"],[3,"L2CatInfo"],[3,"MemBwAllocationInfo"],[3,"SgxInfo"],[3,"SgxSectionIter"],[3,"EpcSection"],[3,"ProcessorTraceInfo"],[3,"TscInfo"],[3,"ProcessorFrequencyInfo"],[3,"DatIter"],[3,"DatInfo"],[3,"SoCVendorInfo"],[3,"SoCVendorAttributesIter"],[3,"SoCVendorBrand"],[3,"HypervisorInfo"],[3,"ExtendedFunctionInfo"],[3,"MemoryEncryptionInfo"]]}\
}');
initSearch(searchIndex);